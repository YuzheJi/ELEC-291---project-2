0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Sat Mar 22 00:16:27 2025
0000              5   ;--------------------------------------------------------
                  5   $name bmm150
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _bmm150_aux_mag_data_PARM_3
0000             27            public _bmm150_aux_mag_data_PARM_2
0000             28            public _bmm150_read_mag_data_PARM_2
0000             29            public _bmm150_get_sensor_settings_PARM_2
0000             30            public _bmm150_set_sensor_settings_PARM_3
0000             31            public _bmm150_set_sensor_settings_PARM_2
0000             32            public _bmm150_set_presetmode_PARM_2
0000             33            public _bmm150_get_op_mode_PARM_2
0000             34            public _bmm150_set_op_mode_PARM_2
0000             35            public _bmm150_set_regs_PARM_4
0000             36            public _bmm150_set_regs_PARM_3
0000             37            public _bmm150_set_regs_PARM_2
0000             38            public _bmm150_init
0000             39            public _bmm150_set_regs
0000             40            public _bmm150_get_regs
0000             41            public _bmm150_soft_reset
0000             42            public _bmm150_set_op_mode
0000             43            public _bmm150_get_op_mode
0000             44            public _bmm150_set_presetmode
0000             45            public _bmm150_set_sensor_settings
0000             46            public _bmm150_get_sensor_settings
0000             47            public _bmm150_read_mag_data
0000             48            public _bmm150_get_interrupt_status
0000             49            public _bmm150_aux_mag_data
0000             50   ;--------------------------------------------------------
0000             51   ; Special Function Registers
0000             52   ;--------------------------------------------------------
0000             53   ;--------------------------------------------------------
0000             54   ; special function bits
0000             55   ;--------------------------------------------------------
0000             56   ;--------------------------------------------------------
0000             57   ; overlayable register banks
0000             58   ;--------------------------------------------------------
0000             59            rbank0 segment data overlay
0000             60   ;--------------------------------------------------------
0000             61   ; internal ram data
0000             62   ;--------------------------------------------------------
0000             63            rseg R_DSEG
0000             64   _bmm150_init_dev_1_64:
0000             65            ds 3
0003             66   _bmm150_init_chip_id_1_65:
0003             67            ds 1
0004             68   _bmm150_set_regs_PARM_2:
0004             69            ds 3
0007             70   _bmm150_set_regs_PARM_3:
0007             71            ds 4
000B             72   _bmm150_set_regs_PARM_4:
000B             73            ds 3
000E             74   _bmm150_set_regs_reg_addr_1_69:
000E             75            ds 1
000F             76   _bmm150_set_regs_rslt_1_70:
000F             77            ds 1
0010             78   _bmm150_set_regs_sloc0_1_0:
0010             79            ds 3
0013             80   _bmm150_soft_reset_reg_data_1_79:
0013             81            ds 1
0014             82   _bmm150_set_op_mode_PARM_2:
0014             83            ds 3
0017             84   _bmm150_get_op_mode_PARM_2:
0017             85            ds 3
001A             86   _bmm150_get_op_mode_op_mode_1_88:
001A             87            ds 3
001D             88   _bmm150_get_op_mode_rslt_1_89:
001D             89            ds 1
001E             90   _bmm150_get_op_mode_reg_data_1_89:
001E             91            ds 1
001F             92   _bmm150_set_presetmode_PARM_2:
001F             93            ds 3
0022             94   _bmm150_set_sensor_settings_PARM_2:
0022             95            ds 3
0025             96   _bmm150_set_sensor_settings_PARM_3:
0025             97            ds 3
0028             98   _bmm150_get_sensor_settings_PARM_2:
0028             99            ds 3
002B            100   _bmm150_get_sensor_settings_setting_1_105:
002B            101            ds 8
0033            102   _bmm150_read_mag_data_PARM_2:
0033            103            ds 3
0036            104   _bmm150_read_mag_data_mag_data_1_107:
0036            105            ds 3
0039            106   _bmm150_read_mag_data_rslt_1_108:
0039            107            ds 1
003A            108   _bmm150_read_mag_data_msb_data_1_108:
003A            109            ds 2
003C            110   _bmm150_read_mag_data_reg_data_1_108:
003C            111            ds 8
0044            112   _bmm150_read_mag_data_raw_mag_data_1_108:
0044            113            ds 8
004C            114   _bmm150_get_interrupt_status_interrupt_status_1_111:
004C            115            ds 1
004D            116   _bmm150_get_interrupt_status_data_ready_status_1_111:
004D            117            ds 1
004E            118   _bmm150_aux_mag_data_PARM_2:
004E            119            ds 3
0051            120   _bmm150_aux_mag_data_PARM_3:
0051            121            ds 3
0054            122   _bmm150_aux_mag_data_aux_data_1_114:
0054            123            ds 3
0057            124   _bmm150_aux_mag_data_rslt_1_115:
0057            125            ds 1
0058            126   _bmm150_aux_mag_data_raw_mag_data_1_115:
0058            127            ds 8
0060            128   _bmm150_aux_mag_data_sloc0_1_0:
0060            129            ds 3
0063            130   _set_power_control_bit_PARM_2:
0063            131            ds 3
0066            132   _set_power_control_bit_reg_data_1_122:
0066            133            ds 1
0067            134   _read_trim_registers_dev_1_125:
0067            135            ds 3
006A            136   _read_trim_registers_rslt_1_126:
006A            137            ds 1
006B            138   _read_trim_registers_trim_x1y1_1_126:
006B            139            ds 2
006D            140   _read_trim_registers_trim_xyz_data_1_126:
006D            141            ds 4
0071            142   _read_trim_registers_trim_xy1xy2_1_126:
0071            143            ds 10
007B            144   _read_trim_registers_temp_msb_1_126:
007B            145            ds 2
007D            146   _read_trim_registers_sloc0_1_0:
007D            147            ds 3
0080            148   _write_op_mode_PARM_2:
0080            149            ds 3
0083            150   _write_op_mode_reg_data_1_131:
0083            151            ds 1
0084            152   _set_xy_rep_PARM_2:
0084            153            ds 3
0087            154   _set_xy_rep_rep_xy_1_138:
0087            155            ds 1
0088            156   _set_z_rep_PARM_2:
0088            157            ds 3
008B            158   _set_z_rep_rep_z_1_140:
008B            159            ds 1
008C            160   _set_odr_PARM_2:
008C            161            ds 3
008F            162   _set_odr_reg_data_1_142:
008F            163            ds 1
0090            164   _set_odr_xyz_rep_PARM_2:
0090            165            ds 3
0093            166   _set_control_measurement_xyz_PARM_2:
0093            167            ds 3
0096            168   _set_control_measurement_xyz_reg_data_1_149:
0096            169            ds 1
0097            170   _mode_settings_PARM_2:
0097            171            ds 3
009A            172   _mode_settings_PARM_3:
009A            173            ds 3
009D            174   _interrupt_pin_settings_PARM_2:
009D            175            ds 3
00A0            176   _interrupt_pin_settings_PARM_3:
00A0            177            ds 3
00A3            178   _interrupt_pin_settings_desired_settings_1_163:
00A3            179            ds 2
00A5            180   _interrupt_pin_settings_reg_data_1_164:
00A5            181            ds 1
00A6            182   _interrupt_pin_settings_int_settings_1_164:
00A6            183            ds 11
00B1            184   _interrupt_pin_settings_sloc0_1_0:
00B1            185            ds 3
00B4            186   _interrupt_config_PARM_2:
00B4            187            ds 3
00B7            188   _interrupt_config_PARM_3:
00B7            189            ds 3
00BA            190   _interrupt_config_desired_settings_1_171:
00BA            191            ds 2
00BC            192   _interrupt_config_reg_data_1_172:
00BC            193            ds 1
00BD            194   _interrupt_config_int_settings_1_172:
00BD            195            ds 11
00C8            196   _interrupt_config_sloc0_1_0:
00C8            197            ds 3
00CB            198   _interrupt_threshold_settings_PARM_2:
00CB            199            ds 3
00CE            200   _interrupt_threshold_settings_PARM_3:
00CE            201            ds 3
00D1            202   _interrupt_threshold_settings_reg_data_1_179:
00D1            203            ds 1
00D2            204   _compensate_x_PARM_2:
00D2            205            ds 2
00D4            206   _compensate_x_PARM_3:
00D4            207            ds 3
00D7            208   _compensate_x_mag_data_x_1_182:
00D7            209            ds 2
00D9            210   _compensate_x_retval_1_183:
00D9            211            ds 2
00DB            212   _compensate_x_process_comp_x0_1_183:
00DB            213            ds 2
00DD            214   _compensate_x_process_comp_x3_1_183:
00DD            215            ds 4
00E1            216   _compensate_x_process_comp_x4_1_183:
00E1            217            ds 4
00E5            218   _compensate_x_sloc0_1_0:
00E5            219            ds 3
00E8            220   _compensate_x_sloc1_1_0:
00E8            221            ds 4
00EC            222   _compensate_y_PARM_2:
00EC            223            ds 2
00EE            224   _compensate_y_PARM_3:
00EE            225            ds 3
00F1            226   _compensate_y_mag_data_y_1_191:
00F1            227            ds 2
00F3            228   _compensate_y_retval_1_192:
00F3            229            ds 2
00F5            230   _compensate_y_process_comp_y0_1_192:
00F5            231            ds 2
00F7            232   _compensate_y_process_comp_y3_1_192:
00F7            233            ds 4
00FB            234   _compensate_y_process_comp_y4_1_192:
00FB            235            ds 4
00FF            236   _compensate_y_process_comp_y6_1_192:
00FF            237            ds 4
0103            238   _compensate_y_sloc0_1_0:
0103            239            ds 4
0107            240   _compensate_z_PARM_2:
0107            241            ds 2
0109            242   _compensate_z_PARM_3:
0109            243            ds 3
010C            244   _compensate_z_mag_data_z_1_200:
010C            245            ds 2
010E            246   _compensate_z_process_comp_z0_1_201:
010E            247            ds 2
0110            248   _compensate_z_process_comp_z1_1_201:
0110            249            ds 4
0114            250   _compensate_z_process_comp_z2_1_201:
0114            251            ds 4
0118            252   _compensate_z_sloc0_1_0:
0118            253            ds 2
011A            254   _compensate_z_sloc1_1_0:
011A            255            ds 2
011C            256   _compensate_z_sloc2_1_0:
011C            257            ds 2
011E            258   _perform_normal_self_test_self_test_bit_1_209:
011E            259            ds 1
011F            260   _enable_normal_self_test_PARM_2:
011F            261            ds 3
0122            262   _enable_normal_self_test_self_test_enable_1_211:
0122            263            ds 3
0125            264   _enable_normal_self_test_rslt_1_212:
0125            265            ds 1
0126            266   _enable_normal_self_test_reg_data_1_212:
0126            267            ds 1
0127            268   _validate_normal_self_test_self_test_rslt_1_216:
0127            269            ds 5
012C            270   _adv_self_test_settings_settings_1_223:
012C            271            ds 17
013D            272   _adv_self_test_measurement_PARM_2:
013D            273            ds 3
0140            274   _adv_self_test_measurement_PARM_3:
0140            275            ds 3
0143            276   _adv_self_test_measurement_rslt_1_227:
0143            277            ds 1
0144            278   _adv_self_test_measurement_settings_1_227:
0144            279            ds 17
0155            280   _adv_self_test_measurement_mag_data_1_227:
0155            281            ds 6
015B            282   _adv_self_test_measurement_sloc0_1_0:
015B            283            ds 2
015D            284   _set_adv_self_test_current_PARM_2:
015D            285            ds 3
0160            286   _set_adv_self_test_current_reg_data_1_232:
0160            287            ds 1
0161            288   ;--------------------------------------------------------
0161            289   ; overlayable items in internal ram 
0161            290   ;--------------------------------------------------------
0000            291            rseg    R_OSEG
0000            292            rseg    R_OSEG
0000            293   _are_settings_changed_PARM_2:
0000            294            ds 2
0002            295            rseg    R_OSEG
0002            296   _parse_setting_PARM_2:
0002            297            ds 3
0005            298   _parse_setting_reg_data_1_161:
0005            299            ds 3
0008            300   _parse_setting_sloc0_1_0:
0008            301            ds 3
000B            302   _parse_setting_sloc1_1_0:
000B            303            ds 3
000E            304   ;--------------------------------------------------------
000E            305   ; indirectly addressable internal ram data
000E            306   ;--------------------------------------------------------
0000            307            rseg R_ISEG
0000            308   ;--------------------------------------------------------
0000            309   ; absolute internal ram data
0000            310   ;--------------------------------------------------------
0000            311            DSEG
0000            312   ;--------------------------------------------------------
0000            313   ; bit data
0000            314   ;--------------------------------------------------------
0000            315            rseg R_BSEG
0000            316   ;--------------------------------------------------------
0000            317   ; paged external ram data
0000            318   ;--------------------------------------------------------
0000            319            rseg R_PSEG
0000            320   ;--------------------------------------------------------
0000            321   ; external ram data
0000            322   ;--------------------------------------------------------
0000            323            rseg R_XSEG
0000            324   ;--------------------------------------------------------
0000            325   ; absolute external ram data
0000            326   ;--------------------------------------------------------
0000            327            XSEG
0000            328   ;--------------------------------------------------------
0000            329   ; external initialized ram data
0000            330   ;--------------------------------------------------------
0000            331            rseg R_IXSEG
0000            332            rseg R_HOME
0000            333            rseg R_GSINIT
0000            334            rseg R_CSEG
0000            335   ;--------------------------------------------------------
0000            336   ; Interrupt vectors
0000            337   ;--------------------------------------------------------
0000            338   ;--------------------------------------------------------
0000            339   ; global & static initialisations
0000            340   ;--------------------------------------------------------
0000            341            rseg R_HOME
0000            342            rseg R_GSINIT
0000            343            rseg R_GSINIT
0000            344   ;--------------------------------------------------------
0000            345   ; data variables initialization
0000            346   ;--------------------------------------------------------
0000            347            rseg R_DINIT
0000            348            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            349   ;--------------------------------------------------------
0000            350   ; code
0000            351   ;--------------------------------------------------------
0000            352            rseg R_CSEG
0000            353   ;------------------------------------------------------------
0000            354   ;Allocation info for local variables in function 'bmm150_init'
0000            355   ;------------------------------------------------------------
0000            356   ;dev                       Allocated with name '_bmm150_init_dev_1_64'
0000            357   ;rslt                      Allocated to registers r5 
0000            358   ;chip_id                   Allocated with name '_bmm150_init_chip_id_1_65'
0000            359   ;------------------------------------------------------------
0000            360   ;        bmm150.c:571: int8_t bmm150_init(struct bmm150_dev *dev)
0000            361   ;        -----------------------------------------
0000            362   ;         function bmm150_init
0000            363   ;        -----------------------------------------
0000            364   _bmm150_init:
0000            365            using   0
0000 858238     366            mov     _bmm150_init_dev_1_64,dpl
0003 858339     367            mov     (_bmm150_init_dev_1_64 + 1),dph
0006 85F03A     368            mov     (_bmm150_init_dev_1_64 + 2),b
0009            369   ;        bmm150.c:574: uint8_t chip_id = 0;
0009 758800     370            mov     _bmm150_init_chip_id_1_65,#0x00
000C            371   ;        bmm150.c:577: rslt = set_power_control_bit(BMM150_POWER_CNTRL_ENABLE, dev);
000C 8538B8     372            mov     _set_power_control_bit_PARM_2,_bmm150_init_dev_1_64
000F 8539B9     373            mov     (_set_power_control_bit_PARM_2 + 1),(_bmm150_init_dev_1_64 + 1)
0012 853ABA     374            mov     (_set_power_control_bit_PARM_2 + 2),(_bmm150_init_dev_1_64 + 2)
0015 758201     375            mov     dpl,#0x01
0018 120000     376            lcall   _set_power_control_bit
001B            377   ;        bmm150.c:579: if (rslt == BMM150_OK)
001B E582       378            mov     a,dpl
001D FD         379            mov     r5,a
001E 6000       380            jz      L002012?
0020 020000     381            ljmp    L002006?
0023            382   L002012?:
0023            383   ;        bmm150.c:582: dev->delay_us(BMM150_START_UP_TIME, dev->intf_ptr);
0023 740A       384            mov     a,#0x0A
0025 2538       385            add     a,_bmm150_init_dev_1_64
0027 FE         386            mov     r6,a
0028 E4         387            clr     a
0029 3539       388            addc    a,(_bmm150_init_dev_1_64 + 1)
002B FF         389            mov     r7,a
002C A83A       390            mov     r0,(_bmm150_init_dev_1_64 + 2)
002E 8E82       391            mov     dpl,r6
0030 8F83       392            mov     dph,r7
0032 88F0       393            mov     b,r0
0034 120000     394            lcall   __gptrget
0037 FE         395            mov     r6,a
0038 A3         396            inc     dptr
0039 120000     397            lcall   __gptrget
003C FF         398            mov     r7,a
003D 7402       399            mov     a,#0x02
003F 2538       400            add     a,_bmm150_init_dev_1_64
0041 F8         401            mov     r0,a
0042 E4         402            clr     a
0043 3539       403            addc    a,(_bmm150_init_dev_1_64 + 1)
0045 F9         404            mov     r1,a
0046 AA3A       405            mov     r2,(_bmm150_init_dev_1_64 + 2)
0048 8882       406            mov     dpl,r0
004A 8983       407            mov     dph,r1
004C 8AF0       408            mov     b,r2
004E 120000     409            lcall   __gptrget
0051 F8         410            mov     r0,a
0052 A3         411            inc     dptr
0053 120000     412            lcall   __gptrget
0056 F9         413            mov     r1,a
0057 A3         414            inc     dptr
0058 120000     415            lcall   __gptrget
005B FA         416            mov     r2,a
005C C006       417            push    ar6
005E C007       418            push    ar7
0060 C000       419            push    ar0
0062 C001       420            push    ar1
0064 C002       421            push    ar2
0066 7438       422            mov     a,#L002013?
0068 C0E0       423            push    acc
006A 7471       424            mov     a,#(L002013? >> 8)
006C C0E0       425            push    acc
006E C006       426            push    ar6
0070 C007       427            push    ar7
0072 900BB8     428            mov     dptr,#0x0BB8
0075 E4         429            clr     a
0076 F5F0       430            mov     b,a
0078 22         431            ret
0079            432   L002013?:
0079 1581       433            dec     sp
007B 1581       434            dec     sp
007D 1581       435            dec     sp
007F D007       436            pop     ar7
0081 D006       437            pop     ar6
0083            438   ;        bmm150.c:585: rslt = bmm150_get_regs(BMM150_REG_CHIP_ID, &chip_id, 1, dev);
0083 C038       439            push    _bmm150_init_dev_1_64
0085 C039       440            push    (_bmm150_init_dev_1_64 + 1)
0087 C03A       441            push    (_bmm150_init_dev_1_64 + 2)
0089 7401       442            mov     a,#0x01
008B C0E0       443            push    acc
008D E4         444            clr     a
008E C0E0       445            push    acc
0090 C0E0       446            push    acc
0092 C0E0       447            push    acc
0094 7488       448            mov     a,#_bmm150_init_chip_id_1_65
0096 C0E0       449            push    acc
0098 744B       450            mov     a,#(_bmm150_init_chip_id_1_65 >> 8)
009A C0E0       451            push    acc
009C 7440       452            mov     a,#0x40
009E C0E0       453            push    acc
00A0 758240     454            mov     dpl,#0x40
00A3 120000     455            lcall   _bmm150_get_regs
00A6 AD82       456            mov     r5,dpl
00A8 E581       457            mov     a,sp
00AA 24F6       458            add     a,#0xf6
00AC F581       459            mov     sp,a
00AE            460   ;        bmm150.c:588: if (rslt == BMM150_OK)
00AE ED         461            mov     a,r5
00AF            462   ;        bmm150.c:591: if (chip_id == BMM150_CHIP_ID)
00AF 7000       463            jnz     L002006?
00B1 AA88       464            mov     r2,_bmm150_init_chip_id_1_65
00B3 FB         465            mov     r3,a
00B4 BA32B8     466            cjne    r2,#0x32,L002006?
00B7 BB00B8     467            cjne    r3,#0x00,L002006?
00BA            468   ;        bmm150.c:593: dev->chip_id = chip_id;
00BA 853882     469            mov     dpl,_bmm150_init_dev_1_64
00BD 853983     470            mov     dph,(_bmm150_init_dev_1_64 + 1)
00C0 853AF0     471            mov     b,(_bmm150_init_dev_1_64 + 2)
00C3 E588       472            mov     a,_bmm150_init_chip_id_1_65
00C5 120000     473            lcall   __gptrput
00C8            474   ;        bmm150.c:596: rslt = read_trim_registers(dev);
00C8 853882     475            mov     dpl,_bmm150_init_dev_1_64
00CB 853983     476            mov     dph,(_bmm150_init_dev_1_64 + 1)
00CE 853AF0     477            mov     b,(_bmm150_init_dev_1_64 + 2)
00D1 120000     478            lcall   _read_trim_registers
00D4 AD82       479            mov     r5,dpl
00D6            480   L002006?:
00D6            481   ;        bmm150.c:601: return rslt;
00D6 8D82       482            mov     dpl,r5
00D8 22         483            ret
00D9            484   ;------------------------------------------------------------
00D9            485   ;Allocation info for local variables in function 'bmm150_set_regs'
00D9            486   ;------------------------------------------------------------
00D9            487   ;reg_data                  Allocated with name '_bmm150_set_regs_PARM_2'
00D9            488   ;len                       Allocated with name '_bmm150_set_regs_PARM_3'
00D9            489   ;dev                       Allocated with name '_bmm150_set_regs_PARM_4'
00D9            490   ;reg_addr                  Allocated with name '_bmm150_set_regs_reg_addr_1_69'
00D9            491   ;rslt                      Allocated with name '_bmm150_set_regs_rslt_1_70'
00D9            492   ;sloc0                     Allocated with name '_bmm150_set_regs_sloc0_1_0'
00D9            493   ;------------------------------------------------------------
00D9            494   ;        bmm150.c:608: int8_t bmm150_set_regs(uint8_t reg_addr, const uint8_t *reg_data, uint32_t len, struct bmm150_dev *dev)
00D9            495   ;        -----------------------------------------
00D9            496   ;         function bmm150_set_regs
00D9            497   ;        -----------------------------------------
00D9            498   _bmm150_set_regs:
00D9 8582D8     499            mov     _bmm150_set_regs_reg_addr_1_69,dpl
00DC            500   ;        bmm150.c:613: rslt = null_ptr_check(dev);
00DC 856082     501            mov     dpl,_bmm150_set_regs_PARM_4
00DF 856183     502            mov     dph,(_bmm150_set_regs_PARM_4 + 1)
00E2 8562F0     503            mov     b,(_bmm150_set_regs_PARM_4 + 2)
00E5 120000     504            lcall   _null_ptr_check
00E8            505   ;        bmm150.c:616: if ((rslt == BMM150_OK) && (reg_data != NULL) && (len != 0))
00E8 E582       506            mov     a,dpl
00EA F528       507            mov     _bmm150_set_regs_rslt_1_70,a
00EC 6000       508            jz      L003011?
00EE 020000     509            ljmp    L003002?
00F1            510   L003011?:
00F1 E4         511            clr     a
00F2 B50048     512            cjne    a,_bmm150_set_regs_PARM_2,L003012?
00F5 E4         513            clr     a
00F6 B50148     514            cjne    a,(_bmm150_set_regs_PARM_2 + 1),L003012?
00F9 E4         515            clr     a
00FA B50248     516            cjne    a,(_bmm150_set_regs_PARM_2 + 2),L003012?
00FD 020000     517            ljmp    L003002?
0100            518   L003012?:
0100 E5B0       519            mov     a,_bmm150_set_regs_PARM_3
0102 45B1       520            orl     a,(_bmm150_set_regs_PARM_3 + 1)
0104 45B2       521            orl     a,(_bmm150_set_regs_PARM_3 + 2)
0106 45B3       522            orl     a,(_bmm150_set_regs_PARM_3 + 3)
0108 7000       523            jnz     L003013?
010A 020000     524            ljmp    L003002?
010D            525   L003013?:
010D            526   ;        bmm150.c:623: dev->intf_rslt = dev->write(reg_addr, reg_data, len, dev->intf_ptr);
010D AF60       527            mov     r7,_bmm150_set_regs_PARM_4
010F A861       528            mov     r0,(_bmm150_set_regs_PARM_4 + 1)
0111 A962       529            mov     r1,(_bmm150_set_regs_PARM_4 + 2)
0113 7405       530            mov     a,#0x05
0115 2F         531            add     a,r7
0116 F578       532            mov     _bmm150_set_regs_sloc0_1_0,a
0118 E4         533            clr     a
0119 38         534            addc    a,r0
011A F579       535            mov     (_bmm150_set_regs_sloc0_1_0 + 1),a
011C 897A       536            mov     (_bmm150_set_regs_sloc0_1_0 + 2),r1
011E 7408       537            mov     a,#0x08
0120 2F         538            add     a,r7
0121 FD         539            mov     r5,a
0122 E4         540            clr     a
0123 38         541            addc    a,r0
0124 FE         542            mov     r6,a
0125 8902       543            mov     ar2,r1
0127 8D82       544            mov     dpl,r5
0129 8E83       545            mov     dph,r6
012B 8AF0       546            mov     b,r2
012D 120000     547            lcall   __gptrget
0130 FD         548            mov     r5,a
0131 A3         549            inc     dptr
0132 120000     550            lcall   __gptrget
0135 FE         551            mov     r6,a
0136 7402       552            mov     a,#0x02
0138 2F         553            add     a,r7
0139 FF         554            mov     r7,a
013A E4         555            clr     a
013B 38         556            addc    a,r0
013C F8         557            mov     r0,a
013D 8F82       558            mov     dpl,r7
013F 8883       559            mov     dph,r0
0141 89F0       560            mov     b,r1
0143 120000     561            lcall   __gptrget
0146 FF         562            mov     r7,a
0147 A3         563            inc     dptr
0148 120000     564            lcall   __gptrget
014B F8         565            mov     r0,a
014C A3         566            inc     dptr
014D 120000     567            lcall   __gptrget
0150 F9         568            mov     r1,a
0151 C006       569            push    ar6
0153 C007       570            push    ar7
0155 C000       571            push    ar0
0157 C001       572            push    ar1
0159 C0B0       573            push    _bmm150_set_regs_PARM_3
015B C0B1       574            push    (_bmm150_set_regs_PARM_3 + 1)
015D C0B2       575            push    (_bmm150_set_regs_PARM_3 + 2)
015F C0B3       576            push    (_bmm150_set_regs_PARM_3 + 3)
0161 C000       577            push    _bmm150_set_regs_PARM_2
0163 C001       578            push    (_bmm150_set_regs_PARM_2 + 1)
0165 C002       579            push    (_bmm150_set_regs_PARM_2 + 2)
0167 74C8       580            mov     a,#L003014?
0169 C0E0       581            push    acc
016B 7473       582            mov     a,#(L003014? >> 8)
016D C0E0       583            push    acc
016F C005       584            push    ar5
0171 C006       585            push    ar6
0173 85D882     586            mov     dpl,_bmm150_set_regs_reg_addr_1_69
0176 22         587            ret
0177            588   L003014?:
0177 AD82       589            mov     r5,dpl
0179 E581       590            mov     a,sp
017B 24F6       591            add     a,#0xf6
017D F581       592            mov     sp,a
017F D006       593            pop     ar6
0181 857882     594            mov     dpl,_bmm150_set_regs_sloc0_1_0
0184 857983     595            mov     dph,(_bmm150_set_regs_sloc0_1_0 + 1)
0187 857AF0     596            mov     b,(_bmm150_set_regs_sloc0_1_0 + 2)
018A ED         597            mov     a,r5
018B 120000     598            lcall   __gptrput
018E 8000       599            sjmp    L003003?
0190            600   L003002?:
0190            601   ;        bmm150.c:627: rslt = BMM150_E_NULL_PTR;
0190 7528FF     602            mov     _bmm150_set_regs_rslt_1_70,#0xFF
0193            603   L003003?:
0193            604   ;        bmm150.c:630: return rslt;
0193 852882     605            mov     dpl,_bmm150_set_regs_rslt_1_70
0196 22         606            ret
0197            607   ;------------------------------------------------------------
0197            608   ;Allocation info for local variables in function 'bmm150_get_regs'
0197            609   ;------------------------------------------------------------
0197            610   ;reg_data                  Allocated to stack - offset -5
0197            611   ;len                       Allocated to stack - offset -9
0197            612   ;dev                       Allocated to stack - offset -12
0197            613   ;reg_addr                  Allocated to stack - offset 1
0197            614   ;rslt                      Allocated to stack - offset 2
0197            615   ;sloc0                     Allocated to stack - offset 3
0197            616   ;------------------------------------------------------------
0197            617   ;        bmm150.c:636: int8_t bmm150_get_regs(uint8_t reg_addr, uint8_t *reg_data, uint32_t len, struct bmm150_dev *dev) __reentrant
0197            618   ;        -----------------------------------------
0197            619   ;         function bmm150_get_regs
0197            620   ;        -----------------------------------------
0197            621   _bmm150_get_regs:
0197 C000       622            push    _bp
0199 858100     623            mov     _bp,sp
019C C082       624            push    dpl
019E E581       625            mov     a,sp
01A0 2405       626            add     a,#0x05
01A2 F581       627            mov     sp,a
01A4            628   ;        bmm150.c:641: rslt = null_ptr_check(dev);
01A4 E500       629            mov     a,_bp
01A6 24F4       630            add     a,#0xf4
01A8 F8         631            mov     r0,a
01A9 8682       632            mov     dpl,@r0
01AB 08         633            inc     r0
01AC 8683       634            mov     dph,@r0
01AE 08         635            inc     r0
01AF 86F0       636            mov     b,@r0
01B1 120000     637            lcall   _null_ptr_check
01B4 AB82       638            mov     r3,dpl
01B6 A800       639            mov     r0,_bp
01B8 08         640            inc     r0
01B9 08         641            inc     r0
01BA A603       642            mov     @r0,ar3
01BC            643   ;        bmm150.c:644: if ((rslt == BMM150_OK) && (reg_data != NULL))
01BC A800       644            mov     r0,_bp
01BE 08         645            inc     r0
01BF 08         646            inc     r0
01C0 E6         647            mov     a,@r0
01C1 6000       648            jz      L004012?
01C3 020000     649            ljmp    L004004?
01C6            650   L004012?:
01C6 E500       651            mov     a,_bp
01C8 24FB       652            add     a,#0xfb
01CA F8         653            mov     r0,a
01CB B60008     654            cjne    @r0,#0x00,L004013?
01CE 08         655            inc     r0
01CF B60008     656            cjne    @r0,#0x00,L004013?
01D2 08         657            inc     r0
01D3 B60008     658            cjne    @r0,#0x00,L004013?
01D6 020000     659            ljmp    L004004?
01D9            660   L004013?:
01D9            661   ;        bmm150.c:646: if (dev->intf != BMM150_I2C_INTF)
01D9 E500       662            mov     a,_bp
01DB 24F4       663            add     a,#0xf4
01DD F8         664            mov     r0,a
01DE 8607       665            mov     ar7,@r0
01E0 08         666            inc     r0
01E1 8603       667            mov     ar3,@r0
01E3 08         668            inc     r0
01E4 8602       669            mov     ar2,@r0
01E6 7401       670            mov     a,#0x01
01E8 2F         671            add     a,r7
01E9 FC         672            mov     r4,a
01EA E4         673            clr     a
01EB 3B         674            addc    a,r3
01EC FD         675            mov     r5,a
01ED 8A06       676            mov     ar6,r2
01EF 8C82       677            mov     dpl,r4
01F1 8D83       678            mov     dph,r5
01F3 8EF0       679            mov     b,r6
01F5 120000     680            lcall   __gptrget
01F8 FC         681            mov     r4,a
01F9 BC0148     682            cjne    r4,#0x01,L004014?
01FC 8000       683            sjmp    L004002?
01FE            684   L004014?:
01FE            685   ;        bmm150.c:649: reg_addr = reg_addr | 0x80;
01FE A800       686            mov     r0,_bp
0200 08         687            inc     r0
0201 E6         688            mov     a,@r0
0202 4480       689            orl     a,#0x80
0204 F6         690            mov     @r0,a
0205            691   L004002?:
0205            692   ;        bmm150.c:653: dev->intf_rslt = dev->read(reg_addr, reg_data, len, dev->intf_ptr);
0205 E500       693            mov     a,_bp
0207 2403       694            add     a,#0x03
0209 F8         695            mov     r0,a
020A 7405       696            mov     a,#0x05
020C 2F         697            add     a,r7
020D F6         698            mov     @r0,a
020E E4         699            clr     a
020F 3B         700            addc    a,r3
0210 08         701            inc     r0
0211 F6         702            mov     @r0,a
0212 08         703            inc     r0
0213 A602       704            mov     @r0,ar2
0215 7406       705            mov     a,#0x06
0217 2F         706            add     a,r7
0218 FC         707            mov     r4,a
0219 E4         708            clr     a
021A 3B         709            addc    a,r3
021B FD         710            mov     r5,a
021C 8A06       711            mov     ar6,r2
021E 8C82       712            mov     dpl,r4
0220 8D83       713            mov     dph,r5
0222 8EF0       714            mov     b,r6
0224 120000     715            lcall   __gptrget
0227 FC         716            mov     r4,a
0228 A3         717            inc     dptr
0229 120000     718            lcall   __gptrget
022C FD         719            mov     r5,a
022D 7402       720            mov     a,#0x02
022F 2F         721            add     a,r7
0230 FF         722            mov     r7,a
0231 E4         723            clr     a
0232 3B         724            addc    a,r3
0233 FB         725            mov     r3,a
0234 8F82       726            mov     dpl,r7
0236 8B83       727            mov     dph,r3
0238 8AF0       728            mov     b,r2
023A 120000     729            lcall   __gptrget
023D FF         730            mov     r7,a
023E A3         731            inc     dptr
023F 120000     732            lcall   __gptrget
0242 FB         733            mov     r3,a
0243 A3         734            inc     dptr
0244 120000     735            lcall   __gptrget
0247 FA         736            mov     r2,a
0248 C005       737            push    ar5
024A C007       738            push    ar7
024C C003       739            push    ar3
024E C002       740            push    ar2
0250 E500       741            mov     a,_bp
0252 24F7       742            add     a,#0xf7
0254 F8         743            mov     r0,a
0255 E6         744            mov     a,@r0
0256 C0E0       745            push    acc
0258 08         746            inc     r0
0259 E6         747            mov     a,@r0
025A C0E0       748            push    acc
025C 08         749            inc     r0
025D E6         750            mov     a,@r0
025E C0E0       751            push    acc
0260 08         752            inc     r0
0261 E6         753            mov     a,@r0
0262 C0E0       754            push    acc
0264 E500       755            mov     a,_bp
0266 24FB       756            add     a,#0xfb
0268 F8         757            mov     r0,a
0269 E6         758            mov     a,@r0
026A C0E0       759            push    acc
026C 08         760            inc     r0
026D E6         761            mov     a,@r0
026E C0E0       762            push    acc
0270 08         763            inc     r0
0271 E6         764            mov     a,@r0
0272 C0E0       765            push    acc
0274 74C8       766            mov     a,#L004015?
0276 C0E0       767            push    acc
0278 7475       768            mov     a,#(L004015? >> 8)
027A C0E0       769            push    acc
027C C004       770            push    ar4
027E C005       771            push    ar5
0280 A800       772            mov     r0,_bp
0282 08         773            inc     r0
0283 8682       774            mov     dpl,@r0
0285 22         775            ret
0286            776   L004015?:
0286 AC82       777            mov     r4,dpl
0288 E581       778            mov     a,sp
028A 24F6       779            add     a,#0xf6
028C F581       780            mov     sp,a
028E D005       781            pop     ar5
0290 E500       782            mov     a,_bp
0292 2403       783            add     a,#0x03
0294 F8         784            mov     r0,a
0295 8682       785            mov     dpl,@r0
0297 08         786            inc     r0
0298 8683       787            mov     dph,@r0
029A 08         788            inc     r0
029B 86F0       789            mov     b,@r0
029D EC         790            mov     a,r4
029E 120000     791            lcall   __gptrput
02A1 8000       792            sjmp    L004005?
02A3            793   L004004?:
02A3            794   ;        bmm150.c:657: rslt = BMM150_E_NULL_PTR;
02A3 A800       795            mov     r0,_bp
02A5 08         796            inc     r0
02A6 08         797            inc     r0
02A7 76FF       798            mov     @r0,#0xFF
02A9            799   L004005?:
02A9            800   ;        bmm150.c:660: return rslt;
02A9 A800       801            mov     r0,_bp
02AB 08         802            inc     r0
02AC 08         803            inc     r0
02AD 8682       804            mov     dpl,@r0
02AF 850081     805            mov     sp,_bp
02B2 D000       806            pop     _bp
02B4 22         807            ret
02B5            808   ;------------------------------------------------------------
02B5            809   ;Allocation info for local variables in function 'bmm150_soft_reset'
02B5            810   ;------------------------------------------------------------
02B5            811   ;dev                       Allocated to registers r2 r3 r4 
02B5            812   ;rslt                      Allocated to registers r5 
02B5            813   ;reg_data                  Allocated with name '_bmm150_soft_reset_reg_data_1_79'
02B5            814   ;------------------------------------------------------------
02B5            815   ;        bmm150.c:667: int8_t bmm150_soft_reset(struct bmm150_dev *dev)
02B5            816   ;        -----------------------------------------
02B5            817   ;         function bmm150_soft_reset
02B5            818   ;        -----------------------------------------
02B5            819   _bmm150_soft_reset:
02B5 AA82       820            mov     r2,dpl
02B7 AB83       821            mov     r3,dph
02B9 ACF0       822            mov     r4,b
02BB            823   ;        bmm150.c:672: rslt = bmm150_get_regs(BMM150_REG_POWER_CONTROL, &reg_data, 1, dev);
02BB C002       824            push    ar2
02BD C003       825            push    ar3
02BF C004       826            push    ar4
02C1 C002       827            push    ar2
02C3 C003       828            push    ar3
02C5 C004       829            push    ar4
02C7 7401       830            mov     a,#0x01
02C9 C0E0       831            push    acc
02CB E4         832            clr     a
02CC C0E0       833            push    acc
02CE C0E0       834            push    acc
02D0 C0E0       835            push    acc
02D2 74D8       836            mov     a,#_bmm150_soft_reset_reg_data_1_79
02D4 C0E0       837            push    acc
02D6 744C       838            mov     a,#(_bmm150_soft_reset_reg_data_1_79 >> 8)
02D8 C0E0       839            push    acc
02DA 7440       840            mov     a,#0x40
02DC C0E0       841            push    acc
02DE 75824B     842            mov     dpl,#0x4B
02E1 120000     843            lcall   _bmm150_get_regs
02E4 AD82       844            mov     r5,dpl
02E6 E581       845            mov     a,sp
02E8 24F6       846            add     a,#0xf6
02EA F581       847            mov     sp,a
02EC D004       848            pop     ar4
02EE D003       849            pop     ar3
02F0 D002       850            pop     ar2
02F2            851   ;        bmm150.c:674: if (rslt == BMM150_OK)
02F2 ED         852            mov     a,r5
02F3 6000       853            jz      L005006?
02F5 020000     854            ljmp    L005002?
02F8            855   L005006?:
02F8            856   ;        bmm150.c:676: reg_data = reg_data | BMM150_SET_SOFT_RESET;
02F8 AED8       857            mov     r6,_bmm150_soft_reset_reg_data_1_79
02FA 430682     858            orl     ar6,#0x82
02FD 8ED8       859            mov     _bmm150_soft_reset_reg_data_1_79,r6
02FF            860   ;        bmm150.c:677: rslt = bmm150_set_regs(BMM150_REG_POWER_CONTROL, &reg_data, 1, dev);
02FF 7500D8     861            mov     _bmm150_set_regs_PARM_2,#_bmm150_soft_reset_reg_data_1_79
0302 750100     862            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
0305 750240     863            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
0308 75B001     864            mov     _bmm150_set_regs_PARM_3,#0x01
030B E4         865            clr     a
030C F5B1       866            mov     (_bmm150_set_regs_PARM_3 + 1),a
030E F5B2       867            mov     (_bmm150_set_regs_PARM_3 + 2),a
0310 F5B3       868            mov     (_bmm150_set_regs_PARM_3 + 3),a
0312 8A60       869            mov     _bmm150_set_regs_PARM_4,r2
0314 8B61       870            mov     (_bmm150_set_regs_PARM_4 + 1),r3
0316 8C62       871            mov     (_bmm150_set_regs_PARM_4 + 2),r4
0318 75824B     872            mov     dpl,#0x4B
031B C002       873            push    ar2
031D C003       874            push    ar3
031F C004       875            push    ar4
0321 120000     876            lcall   _bmm150_set_regs
0324 AD82       877            mov     r5,dpl
0326 D004       878            pop     ar4
0328 D003       879            pop     ar3
032A D002       880            pop     ar2
032C            881   ;        bmm150.c:678: dev->delay_us(BMM150_DELAY_SOFT_RESET, dev->intf_ptr);
032C 740A       882            mov     a,#0x0A
032E 2A         883            add     a,r2
032F FE         884            mov     r6,a
0330 E4         885            clr     a
0331 3B         886            addc    a,r3
0332 FF         887            mov     r7,a
0333 8C00       888            mov     ar0,r4
0335 8E82       889            mov     dpl,r6
0337 8F83       890            mov     dph,r7
0339 88F0       891            mov     b,r0
033B 120000     892            lcall   __gptrget
033E FE         893            mov     r6,a
033F A3         894            inc     dptr
0340 120000     895            lcall   __gptrget
0343 FF         896            mov     r7,a
0344 7402       897            mov     a,#0x02
0346 2A         898            add     a,r2
0347 FA         899            mov     r2,a
0348 E4         900            clr     a
0349 3B         901            addc    a,r3
034A FB         902            mov     r3,a
034B 8A82       903            mov     dpl,r2
034D 8B83       904            mov     dph,r3
034F 8CF0       905            mov     b,r4
0351 120000     906            lcall   __gptrget
0354 FA         907            mov     r2,a
0355 A3         908            inc     dptr
0356 120000     909            lcall   __gptrget
0359 FB         910            mov     r3,a
035A A3         911            inc     dptr
035B 120000     912            lcall   __gptrget
035E FC         913            mov     r4,a
035F C005       914            push    ar5
0361 C006       915            push    ar6
0363 C007       916            push    ar7
0365 C002       917            push    ar2
0367 C003       918            push    ar3
0369 C004       919            push    ar4
036B 74C8       920            mov     a,#L005007?
036D C0E0       921            push    acc
036F 7476       922            mov     a,#(L005007? >> 8)
0371 C0E0       923            push    acc
0373 C006       924            push    ar6
0375 C007       925            push    ar7
0377 9003E8     926            mov     dptr,#0x03E8
037A E4         927            clr     a
037B F5F0       928            mov     b,a
037D 22         929            ret
037E            930   L005007?:
037E 1581       931            dec     sp
0380 1581       932            dec     sp
0382 1581       933            dec     sp
0384 D007       934            pop     ar7
0386 D006       935            pop     ar6
0388 D005       936            pop     ar5
038A            937   L005002?:
038A            938   ;        bmm150.c:681: return rslt;
038A 8D82       939            mov     dpl,r5
038C 22         940            ret
038D            941   ;------------------------------------------------------------
038D            942   ;Allocation info for local variables in function 'bmm150_set_op_mode'
038D            943   ;------------------------------------------------------------
038D            944   ;dev                       Allocated with name '_bmm150_set_op_mode_PARM_2'
038D            945   ;settings                  Allocated to registers r2 r3 r4 
038D            946   ;rslt                      Allocated to registers r5 
038D            947   ;pwr_mode                  Allocated to registers r2 
038D            948   ;------------------------------------------------------------
038D            949   ;        bmm150.c:687: int8_t bmm150_set_op_mode(const struct bmm150_settings *settings, struct bmm150_dev *dev)
038D            950   ;        -----------------------------------------
038D            951   ;         function bmm150_set_op_mode
038D            952   ;        -----------------------------------------
038D            953   _bmm150_set_op_mode:
038D AA82       954            mov     r2,dpl
038F AB83       955            mov     r3,dph
0391 ACF0       956            mov     r4,b
0393            957   ;        bmm150.c:693: rslt = null_ptr_check(dev);
0393 851082     958            mov     dpl,_bmm150_set_op_mode_PARM_2
0396 851183     959            mov     dph,(_bmm150_set_op_mode_PARM_2 + 1)
0399 8512F0     960            mov     b,(_bmm150_set_op_mode_PARM_2 + 2)
039C C002       961            push    ar2
039E C003       962            push    ar3
03A0 C004       963            push    ar4
03A2 120000     964            lcall   _null_ptr_check
03A5 AD82       965            mov     r5,dpl
03A7 D004       966            pop     ar4
03A9 D003       967            pop     ar3
03AB D002       968            pop     ar2
03AD            969   ;        bmm150.c:696: if (rslt == BMM150_OK)
03AD ED         970            mov     a,r5
03AE 6000       971            jz      L006025?
03B0 020000     972            ljmp    L006014?
03B3            973   L006025?:
03B3            974   ;        bmm150.c:698: pwr_mode = settings->pwr_mode;
03B3 0A         975            inc     r2
03B4 BA0088     976            cjne    r2,#0x00,L006026?
03B7 0B         977            inc     r3
03B8            978   L006026?:
03B8 8A82       979            mov     dpl,r2
03BA 8B83       980            mov     dph,r3
03BC 8CF0       981            mov     b,r4
03BE 120000     982            lcall   __gptrget
03C1            983   ;        bmm150.c:701: switch (pwr_mode)
03C1 FA         984            mov     r2,a
03C2 FB         985            mov     r3,a
03C3 7C00       986            mov     r4,#0x00
03C5 BB00C8     987            cjne    r3,#0x00,L006027?
03C8 BC00C8     988            cjne    r4,#0x00,L006027?
03CB 8000       989            sjmp    L006001?
03CD            990   L006027?:
03CD BB0148     991            cjne    r3,#0x01,L006028?
03D0 BC0048     992            cjne    r4,#0x00,L006028?
03D3 8000       993            sjmp    L006004?
03D5            994   L006028?:
03D5 BB03C8     995            cjne    r3,#0x03,L006029?
03D8 BC00C8     996            cjne    r4,#0x00,L006029?
03DB 8000       997            sjmp    L006007?
03DD            998   L006029?:
03DD BB0448     999            cjne    r3,#0x04,L006030?
03E0 BC0048    1000            cjne    r4,#0x00,L006030?
03E3 020000    1001            ljmp    L006010?
03E6           1002   L006030?:
03E6 020000    1003            ljmp    L006011?
03E9           1004   ;        bmm150.c:703: case BMM150_POWERMODE_NORMAL:
03E9           1005   L006001?:
03E9           1006   ;        bmm150.c:708: rslt = suspend_to_sleep_mode(dev);
03E9 851082    1007            mov     dpl,_bmm150_set_op_mode_PARM_2
03EC 851183    1008            mov     dph,(_bmm150_set_op_mode_PARM_2 + 1)
03EF 8512F0    1009            mov     b,(_bmm150_set_op_mode_PARM_2 + 2)
03F2 C002      1010            push    ar2
03F4 120000    1011            lcall   _suspend_to_sleep_mode
03F7 AD82      1012            mov     r5,dpl
03F9 D002      1013            pop     ar2
03FB           1014   ;        bmm150.c:709: if (rslt == BMM150_OK)
03FB ED        1015            mov     a,r5
03FC 7000      1016            jnz     L006014?
03FE           1017   ;        bmm150.c:712: rslt = write_op_mode(pwr_mode, dev);
03FE 8510D8    1018            mov     _write_op_mode_PARM_2,_bmm150_set_op_mode_PARM_2
0401 8511D9    1019            mov     (_write_op_mode_PARM_2 + 1),(_bmm150_set_op_mode_PARM_2 + 1)
0404 8512DA    1020            mov     (_write_op_mode_PARM_2 + 2),(_bmm150_set_op_mode_PARM_2 + 2)
0407 8A82      1021            mov     dpl,r2
0409 120000    1022            lcall   _write_op_mode
040C AD82      1023            mov     r5,dpl
040E           1024   ;        bmm150.c:715: break;
040E           1025   ;        bmm150.c:716: case BMM150_POWERMODE_FORCED:
040E 8000      1026            sjmp    L006014?
0410           1027   L006004?:
0410           1028   ;        bmm150.c:721: rslt = suspend_to_sleep_mode(dev);
0410 851082    1029            mov     dpl,_bmm150_set_op_mode_PARM_2
0413 851183    1030            mov     dph,(_bmm150_set_op_mode_PARM_2 + 1)
0416 8512F0    1031            mov     b,(_bmm150_set_op_mode_PARM_2 + 2)
0419 C002      1032            push    ar2
041B 120000    1033            lcall   _suspend_to_sleep_mode
041E AD82      1034            mov     r5,dpl
0420 D002      1035            pop     ar2
0422           1036   ;        bmm150.c:722: if (rslt == BMM150_OK)
0422 ED        1037            mov     a,r5
0423 7000      1038            jnz     L006014?
0425           1039   ;        bmm150.c:725: rslt = write_op_mode(pwr_mode, dev);
0425 8510D8    1040            mov     _write_op_mode_PARM_2,_bmm150_set_op_mode_PARM_2
0428 8511D9    1041            mov     (_write_op_mode_PARM_2 + 1),(_bmm150_set_op_mode_PARM_2 + 1)
042B 8512DA    1042            mov     (_write_op_mode_PARM_2 + 2),(_bmm150_set_op_mode_PARM_2 + 2)
042E 8A82      1043            mov     dpl,r2
0430 120000    1044            lcall   _write_op_mode
0433 AD82      1045            mov     r5,dpl
0435           1046   ;        bmm150.c:728: break;
0435           1047   ;        bmm150.c:729: case BMM150_POWERMODE_SLEEP:
0435 8000      1048            sjmp    L006014?
0437           1049   L006007?:
0437           1050   ;        bmm150.c:734: rslt = suspend_to_sleep_mode(dev);
0437 851082    1051            mov     dpl,_bmm150_set_op_mode_PARM_2
043A 851183    1052            mov     dph,(_bmm150_set_op_mode_PARM_2 + 1)
043D 8512F0    1053            mov     b,(_bmm150_set_op_mode_PARM_2 + 2)
0440 C002      1054            push    ar2
0442 120000    1055            lcall   _suspend_to_sleep_mode
0445 AD82      1056            mov     r5,dpl
0447 D002      1057            pop     ar2
0449           1058   ;        bmm150.c:735: if (rslt == BMM150_OK)
0449 ED        1059            mov     a,r5
044A 7000      1060            jnz     L006014?
044C           1061   ;        bmm150.c:738: rslt = write_op_mode(pwr_mode, dev);
044C 8510D8    1062            mov     _write_op_mode_PARM_2,_bmm150_set_op_mode_PARM_2
044F 8511D9    1063            mov     (_write_op_mode_PARM_2 + 1),(_bmm150_set_op_mode_PARM_2 + 1)
0452 8512DA    1064            mov     (_write_op_mode_PARM_2 + 2),(_bmm150_set_op_mode_PARM_2 + 2)
0455 8A82      1065            mov     dpl,r2
0457 120000    1066            lcall   _write_op_mode
045A AD82      1067            mov     r5,dpl
045C           1068   ;        bmm150.c:741: break;
045C           1069   ;        bmm150.c:742: case BMM150_POWERMODE_SUSPEND:
045C 8000      1070            sjmp    L006014?
045E           1071   L006010?:
045E           1072   ;        bmm150.c:745: rslt = set_power_control_bit(BMM150_POWER_CNTRL_DISABLE, dev);
045E 8510B8    1073            mov     _set_power_control_bit_PARM_2,_bmm150_set_op_mode_PARM_2
0461 8511B9    1074            mov     (_set_power_control_bit_PARM_2 + 1),(_bmm150_set_op_mode_PARM_2 + 1)
0464 8512BA    1075            mov     (_set_power_control_bit_PARM_2 + 2),(_bmm150_set_op_mode_PARM_2 + 2)
0467 758200    1076            mov     dpl,#0x00
046A 120000    1077            lcall   _set_power_control_bit
046D AD82      1078            mov     r5,dpl
046F           1079   ;        bmm150.c:746: break;
046F           1080   ;        bmm150.c:747: default:
046F 8000      1081            sjmp    L006014?
0471           1082   L006011?:
0471           1083   ;        bmm150.c:748: rslt = BMM150_E_INVALID_CONFIG;
0471 7DFD      1084            mov     r5,#0xFD
0473           1085   ;        bmm150.c:750: }
0473           1086   L006014?:
0473           1087   ;        bmm150.c:753: return rslt;
0473 8D82      1088            mov     dpl,r5
0475 22        1089            ret
0476           1090   ;------------------------------------------------------------
0476           1091   ;Allocation info for local variables in function 'bmm150_get_op_mode'
0476           1092   ;------------------------------------------------------------
0476           1093   ;dev                       Allocated with name '_bmm150_get_op_mode_PARM_2'
0476           1094   ;op_mode                   Allocated with name '_bmm150_get_op_mode_op_mode_1_88'
0476           1095   ;rslt                      Allocated with name '_bmm150_get_op_mode_rslt_1_89'
0476           1096   ;reg_data                  Allocated with name '_bmm150_get_op_mode_reg_data_1_89'
0476           1097   ;------------------------------------------------------------
0476           1098   ;        bmm150.c:759: int8_t bmm150_get_op_mode(uint8_t *op_mode, struct bmm150_dev *dev)
0476           1099   ;        -----------------------------------------
0476           1100   ;         function bmm150_get_op_mode
0476           1101   ;        -----------------------------------------
0476           1102   _bmm150_get_op_mode:
0476 858238    1103            mov     _bmm150_get_op_mode_op_mode_1_88,dpl
0479 858339    1104            mov     (_bmm150_get_op_mode_op_mode_1_88 + 1),dph
047C 85F03A    1105            mov     (_bmm150_get_op_mode_op_mode_1_88 + 2),b
047F           1106   ;        bmm150.c:765: rslt = null_ptr_check(dev);
047F 85C082    1107            mov     dpl,_bmm150_get_op_mode_PARM_2
0482 85C183    1108            mov     dph,(_bmm150_get_op_mode_PARM_2 + 1)
0485 85C2F0    1109            mov     b,(_bmm150_get_op_mode_PARM_2 + 2)
0488 120000    1110            lcall   _null_ptr_check
048B           1111   ;        bmm150.c:768: if (rslt == BMM150_OK)
048B E582      1112            mov     a,dpl
048D F588      1113            mov     _bmm150_get_op_mode_rslt_1_89,a
048F 7000      1114            jnz     L007005?
0491           1115   ;        bmm150.c:770: if (dev->pwr_cntrl_bit == BMM150_POWER_CNTRL_DISABLE)
0491 AEC0      1116            mov     r6,_bmm150_get_op_mode_PARM_2
0493 AFC1      1117            mov     r7,(_bmm150_get_op_mode_PARM_2 + 1)
0495 A8C2      1118            mov     r0,(_bmm150_get_op_mode_PARM_2 + 2)
0497 741E      1119            mov     a,#0x1E
0499 2E        1120            add     a,r6
049A F9        1121            mov     r1,a
049B E4        1122            clr     a
049C 3F        1123            addc    a,r7
049D FD        1124            mov     r5,a
049E 8802      1125            mov     ar2,r0
04A0 8982      1126            mov     dpl,r1
04A2 8D83      1127            mov     dph,r5
04A4 8AF0      1128            mov     b,r2
04A6 120000    1129            lcall   __gptrget
04A9 7000      1130            jnz     L007002?
04AB           1131   ;        bmm150.c:773: *op_mode = BMM150_POWERMODE_SUSPEND;
04AB 853882    1132            mov     dpl,_bmm150_get_op_mode_op_mode_1_88
04AE 853983    1133            mov     dph,(_bmm150_get_op_mode_op_mode_1_88 + 1)
04B1 853AF0    1134            mov     b,(_bmm150_get_op_mode_op_mode_1_88 + 2)
04B4 7404      1135            mov     a,#0x04
04B6 120000    1136            lcall   __gptrput
04B9 8000      1137            sjmp    L007005?
04BB           1138   L007002?:
04BB           1139   ;        bmm150.c:778: rslt = bmm150_get_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
04BB C006      1140            push    ar6
04BD C007      1141            push    ar7
04BF C000      1142            push    ar0
04C1 7401      1143            mov     a,#0x01
04C3 C0E0      1144            push    acc
04C5 E4        1145            clr     a
04C6 C0E0      1146            push    acc
04C8 C0E0      1147            push    acc
04CA C0E0      1148            push    acc
04CC 74E8      1149            mov     a,#_bmm150_get_op_mode_reg_data_1_89
04CE C0E0      1150            push    acc
04D0 744D      1151            mov     a,#(_bmm150_get_op_mode_reg_data_1_89 >> 8)
04D2 C0E0      1152            push    acc
04D4 7440      1153            mov     a,#0x40
04D6 C0E0      1154            push    acc
04D8 75824C    1155            mov     dpl,#0x4C
04DB 120000    1156            lcall   _bmm150_get_regs
04DE 858288    1157            mov     _bmm150_get_op_mode_rslt_1_89,dpl
04E1 E581      1158            mov     a,sp
04E3 24F6      1159            add     a,#0xf6
04E5 F581      1160            mov     sp,a
04E7           1161   ;        bmm150.c:779: *op_mode = BMM150_GET_BITS(reg_data, BMM150_OP_MODE);
04E7 AAE8      1162            mov     r2,_bmm150_get_op_mode_reg_data_1_89
04E9 530206    1163            anl     ar2,#0x06
04EC E4        1164            clr     a
04ED C3        1165            clr     c
04EE 13        1166            rrc     a
04EF CA        1167            xch     a,r2
04F0 13        1168            rrc     a
04F1 CA        1169            xch     a,r2
04F2 FB        1170            mov     r3,a
04F3 853882    1171            mov     dpl,_bmm150_get_op_mode_op_mode_1_88
04F6 853983    1172            mov     dph,(_bmm150_get_op_mode_op_mode_1_88 + 1)
04F9 853AF0    1173            mov     b,(_bmm150_get_op_mode_op_mode_1_88 + 2)
04FC EA        1174            mov     a,r2
04FD 120000    1175            lcall   __gptrput
0500           1176   L007005?:
0500           1177   ;        bmm150.c:783: return rslt;
0500 858882    1178            mov     dpl,_bmm150_get_op_mode_rslt_1_89
0503 22        1179            ret
0504           1180   ;------------------------------------------------------------
0504           1181   ;Allocation info for local variables in function 'bmm150_set_presetmode'
0504           1182   ;------------------------------------------------------------
0504           1183   ;dev                       Allocated with name '_bmm150_set_presetmode_PARM_2'
0504           1184   ;settings                  Allocated to registers r2 r3 r4 
0504           1185   ;rslt                      Allocated to registers r5 
0504           1186   ;preset_mode               Allocated to registers r6 
0504           1187   ;------------------------------------------------------------
0504           1188   ;        bmm150.c:789: int8_t bmm150_set_presetmode(struct bmm150_settings *settings, struct bmm150_dev *dev)
0504           1189   ;        -----------------------------------------
0504           1190   ;         function bmm150_set_presetmode
0504           1191   ;        -----------------------------------------
0504           1192   _bmm150_set_presetmode:
0504 AA82      1193            mov     r2,dpl
0506 AB83      1194            mov     r3,dph
0508 ACF0      1195            mov     r4,b
050A           1196   ;        bmm150.c:795: rslt = null_ptr_check(dev);
050A 857082    1197            mov     dpl,_bmm150_set_presetmode_PARM_2
050D 857183    1198            mov     dph,(_bmm150_set_presetmode_PARM_2 + 1)
0510 8572F0    1199            mov     b,(_bmm150_set_presetmode_PARM_2 + 2)
0513 C002      1200            push    ar2
0515 C003      1201            push    ar3
0517 C004      1202            push    ar4
0519 120000    1203            lcall   _null_ptr_check
051C AD82      1204            mov     r5,dpl
051E D004      1205            pop     ar4
0520 D003      1206            pop     ar3
0522 D002      1207            pop     ar2
0524           1208   ;        bmm150.c:798: if (rslt == BMM150_OK)
0524 ED        1209            mov     a,r5
0525 6000      1210            jz      L008016?
0527 020000    1211            ljmp    L008008?
052A           1212   L008016?:
052A           1213   ;        bmm150.c:800: preset_mode = settings->preset_mode;
052A 7405      1214            mov     a,#0x05
052C 2A        1215            add     a,r2
052D FE        1216            mov     r6,a
052E E4        1217            clr     a
052F 3B        1218            addc    a,r3
0530 FF        1219            mov     r7,a
0531 8C00      1220            mov     ar0,r4
0533 8E82      1221            mov     dpl,r6
0535 8F83      1222            mov     dph,r7
0537 88F0      1223            mov     b,r0
0539 120000    1224            lcall   __gptrget
053C FE        1225            mov     r6,a
053D           1226   ;        bmm150.c:802: switch (preset_mode)
053D 7F00      1227            mov     r7,#0x00
053F BE0198    1228            cjne    r6,#0x01,L008017?
0542 BF0098    1229            cjne    r7,#0x00,L008017?
0545 8000      1230            sjmp    L008001?
0547           1231   L008017?:
0547 BE0218    1232            cjne    r6,#0x02,L008018?
054A BF0018    1233            cjne    r7,#0x00,L008018?
054D 8000      1234            sjmp    L008002?
054F           1235   L008018?:
054F BE0398    1236            cjne    r6,#0x03,L008019?
0552 BF0098    1237            cjne    r7,#0x00,L008019?
0555 020000    1238            ljmp    L008003?
0558           1239   L008019?:
0558 BE0418    1240            cjne    r6,#0x04,L008020?
055B BF0018    1241            cjne    r7,#0x00,L008020?
055E 020000    1242            ljmp    L008004?
0561           1243   L008020?:
0561 020000    1244            ljmp    L008005?
0564           1245   ;        bmm150.c:804: case BMM150_PRESETMODE_LOWPOWER:
0564           1246   L008001?:
0564           1247   ;        bmm150.c:809: settings->data_rate = BMM150_DATA_RATE_10HZ;
0564 7402      1248            mov     a,#0x02
0566 2A        1249            add     a,r2
0567 FE        1250            mov     r6,a
0568 E4        1251            clr     a
0569 3B        1252            addc    a,r3
056A FF        1253            mov     r7,a
056B 8C00      1254            mov     ar0,r4
056D 8E82      1255            mov     dpl,r6
056F 8F83      1256            mov     dph,r7
0571 88F0      1257            mov     b,r0
0573 E4        1258            clr     a
0574 120000    1259            lcall   __gptrput
0577           1260   ;        bmm150.c:810: settings->xy_rep = BMM150_REPXY_LOWPOWER;
0577 7403      1261            mov     a,#0x03
0579 2A        1262            add     a,r2
057A FE        1263            mov     r6,a
057B E4        1264            clr     a
057C 3B        1265            addc    a,r3
057D FF        1266            mov     r7,a
057E 8C00      1267            mov     ar0,r4
0580 8E82      1268            mov     dpl,r6
0582 8F83      1269            mov     dph,r7
0584 88F0      1270            mov     b,r0
0586 7401      1271            mov     a,#0x01
0588 120000    1272            lcall   __gptrput
058B           1273   ;        bmm150.c:811: settings->z_rep = BMM150_REPZ_LOWPOWER;
058B 7404      1274            mov     a,#0x04
058D 2A        1275            add     a,r2
058E FE        1276            mov     r6,a
058F E4        1277            clr     a
0590 3B        1278            addc    a,r3
0591 FF        1279            mov     r7,a
0592 8C00      1280            mov     ar0,r4
0594 8E82      1281            mov     dpl,r6
0596 8F83      1282            mov     dph,r7
0598 88F0      1283            mov     b,r0
059A 7401      1284            mov     a,#0x01
059C 120000    1285            lcall   __gptrput
059F           1286   ;        bmm150.c:812: rslt = set_odr_xyz_rep(settings, dev);
059F 857048    1287            mov     _set_odr_xyz_rep_PARM_2,_bmm150_set_presetmode_PARM_2
05A2 857149    1288            mov     (_set_odr_xyz_rep_PARM_2 + 1),(_bmm150_set_presetmode_PARM_2 + 1)
05A5 85724A    1289            mov     (_set_odr_xyz_rep_PARM_2 + 2),(_bmm150_set_presetmode_PARM_2 + 2)
05A8 8A82      1290            mov     dpl,r2
05AA 8B83      1291            mov     dph,r3
05AC 8CF0      1292            mov     b,r4
05AE 120000    1293            lcall   _set_odr_xyz_rep
05B1 AD82      1294            mov     r5,dpl
05B3           1295   ;        bmm150.c:813: break;
05B3 020000    1296            ljmp    L008008?
05B6           1297   ;        bmm150.c:814: case BMM150_PRESETMODE_REGULAR:
05B6           1298   L008002?:
05B6           1299   ;        bmm150.c:819: settings->data_rate = BMM150_DATA_RATE_10HZ;
05B6 7402      1300            mov     a,#0x02
05B8 2A        1301            add     a,r2
05B9 FE        1302            mov     r6,a
05BA E4        1303            clr     a
05BB 3B        1304            addc    a,r3
05BC FF        1305            mov     r7,a
05BD 8C00      1306            mov     ar0,r4
05BF 8E82      1307            mov     dpl,r6
05C1 8F83      1308            mov     dph,r7
05C3 88F0      1309            mov     b,r0
05C5 E4        1310            clr     a
05C6 120000    1311            lcall   __gptrput
05C9           1312   ;        bmm150.c:820: settings->xy_rep = BMM150_REPXY_REGULAR;
05C9 7403      1313            mov     a,#0x03
05CB 2A        1314            add     a,r2
05CC FE        1315            mov     r6,a
05CD E4        1316            clr     a
05CE 3B        1317            addc    a,r3
05CF FF        1318            mov     r7,a
05D0 8C00      1319            mov     ar0,r4
05D2 8E82      1320            mov     dpl,r6
05D4 8F83      1321            mov     dph,r7
05D6 88F0      1322            mov     b,r0
05D8           1323   ;        bmm150.c:821: settings->z_rep = BMM150_REPZ_REGULAR;
05D8 7404      1324            mov     a,#0x04
05DA 120000    1325            lcall   __gptrput
05DD 2A        1326            add     a,r2
05DE FE        1327            mov     r6,a
05DF E4        1328            clr     a
05E0 3B        1329            addc    a,r3
05E1 FF        1330            mov     r7,a
05E2 8C00      1331            mov     ar0,r4
05E4 8E82      1332            mov     dpl,r6
05E6 8F83      1333            mov     dph,r7
05E8 88F0      1334            mov     b,r0
05EA 7407      1335            mov     a,#0x07
05EC 120000    1336            lcall   __gptrput
05EF           1337   ;        bmm150.c:822: rslt = set_odr_xyz_rep(settings, dev);
05EF 857048    1338            mov     _set_odr_xyz_rep_PARM_2,_bmm150_set_presetmode_PARM_2
05F2 857149    1339            mov     (_set_odr_xyz_rep_PARM_2 + 1),(_bmm150_set_presetmode_PARM_2 + 1)
05F5 85724A    1340            mov     (_set_odr_xyz_rep_PARM_2 + 2),(_bmm150_set_presetmode_PARM_2 + 2)
05F8 8A82      1341            mov     dpl,r2
05FA 8B83      1342            mov     dph,r3
05FC 8CF0      1343            mov     b,r4
05FE 120000    1344            lcall   _set_odr_xyz_rep
0601 AD82      1345            mov     r5,dpl
0603           1346   ;        bmm150.c:823: break;
0603 020000    1347            ljmp    L008008?
0606           1348   ;        bmm150.c:824: case BMM150_PRESETMODE_HIGHACCURACY:
0606           1349   L008003?:
0606           1350   ;        bmm150.c:829: settings->data_rate = BMM150_DATA_RATE_20HZ;
0606 7402      1351            mov     a,#0x02
0608 2A        1352            add     a,r2
0609 FE        1353            mov     r6,a
060A E4        1354            clr     a
060B 3B        1355            addc    a,r3
060C FF        1356            mov     r7,a
060D 8C00      1357            mov     ar0,r4
060F 8E82      1358            mov     dpl,r6
0611 8F83      1359            mov     dph,r7
0613 88F0      1360            mov     b,r0
0615 7405      1361            mov     a,#0x05
0617 120000    1362            lcall   __gptrput
061A           1363   ;        bmm150.c:830: settings->xy_rep = BMM150_REPXY_HIGHACCURACY;
061A 7403      1364            mov     a,#0x03
061C 2A        1365            add     a,r2
061D FE        1366            mov     r6,a
061E E4        1367            clr     a
061F 3B        1368            addc    a,r3
0620 FF        1369            mov     r7,a
0621 8C00      1370            mov     ar0,r4
0623 8E82      1371            mov     dpl,r6
0625 8F83      1372            mov     dph,r7
0627 88F0      1373            mov     b,r0
0629 7417      1374            mov     a,#0x17
062B 120000    1375            lcall   __gptrput
062E           1376   ;        bmm150.c:831: settings->z_rep = BMM150_REPZ_HIGHACCURACY;
062E 7404      1377            mov     a,#0x04
0630 2A        1378            add     a,r2
0631 FE        1379            mov     r6,a
0632 E4        1380            clr     a
0633 3B        1381            addc    a,r3
0634 FF        1382            mov     r7,a
0635 8C00      1383            mov     ar0,r4
0637 8E82      1384            mov     dpl,r6
0639 8F83      1385            mov     dph,r7
063B 88F0      1386            mov     b,r0
063D 7429      1387            mov     a,#0x29
063F 120000    1388            lcall   __gptrput
0642           1389   ;        bmm150.c:832: rslt = set_odr_xyz_rep(settings, dev);
0642 857048    1390            mov     _set_odr_xyz_rep_PARM_2,_bmm150_set_presetmode_PARM_2
0645 857149    1391            mov     (_set_odr_xyz_rep_PARM_2 + 1),(_bmm150_set_presetmode_PARM_2 + 1)
0648 85724A    1392            mov     (_set_odr_xyz_rep_PARM_2 + 2),(_bmm150_set_presetmode_PARM_2 + 2)
064B 8A82      1393            mov     dpl,r2
064D 8B83      1394            mov     dph,r3
064F 8CF0      1395            mov     b,r4
0651 120000    1396            lcall   _set_odr_xyz_rep
0654 AD82      1397            mov     r5,dpl
0656           1398   ;        bmm150.c:833: break;
0656           1399   ;        bmm150.c:834: case BMM150_PRESETMODE_ENHANCED:
0656 8000      1400            sjmp    L008008?
0658           1401   L008004?:
0658           1402   ;        bmm150.c:839: settings->data_rate = BMM150_DATA_RATE_10HZ;
0658 7402      1403            mov     a,#0x02
065A 2A        1404            add     a,r2
065B FE        1405            mov     r6,a
065C E4        1406            clr     a
065D 3B        1407            addc    a,r3
065E FF        1408            mov     r7,a
065F 8C00      1409            mov     ar0,r4
0661 8E82      1410            mov     dpl,r6
0663 8F83      1411            mov     dph,r7
0665 88F0      1412            mov     b,r0
0667 E4        1413            clr     a
0668 120000    1414            lcall   __gptrput
066B           1415   ;        bmm150.c:840: settings->xy_rep = BMM150_REPXY_ENHANCED;
066B 7403      1416            mov     a,#0x03
066D 2A        1417            add     a,r2
066E FE        1418            mov     r6,a
066F E4        1419            clr     a
0670 3B        1420            addc    a,r3
0671 FF        1421            mov     r7,a
0672 8C00      1422            mov     ar0,r4
0674 8E82      1423            mov     dpl,r6
0676 8F83      1424            mov     dph,r7
0678 88F0      1425            mov     b,r0
067A 7407      1426            mov     a,#0x07
067C 120000    1427            lcall   __gptrput
067F           1428   ;        bmm150.c:841: settings->z_rep = BMM150_REPZ_ENHANCED;
067F 7404      1429            mov     a,#0x04
0681 2A        1430            add     a,r2
0682 FE        1431            mov     r6,a
0683 E4        1432            clr     a
0684 3B        1433            addc    a,r3
0685 FF        1434            mov     r7,a
0686 8C00      1435            mov     ar0,r4
0688 8E82      1436            mov     dpl,r6
068A 8F83      1437            mov     dph,r7
068C 88F0      1438            mov     b,r0
068E 740D      1439            mov     a,#0x0D
0690 120000    1440            lcall   __gptrput
0693           1441   ;        bmm150.c:842: rslt = set_odr_xyz_rep(settings, dev);
0693 857048    1442            mov     _set_odr_xyz_rep_PARM_2,_bmm150_set_presetmode_PARM_2
0696 857149    1443            mov     (_set_odr_xyz_rep_PARM_2 + 1),(_bmm150_set_presetmode_PARM_2 + 1)
0699 85724A    1444            mov     (_set_odr_xyz_rep_PARM_2 + 2),(_bmm150_set_presetmode_PARM_2 + 2)
069C 8A82      1445            mov     dpl,r2
069E 8B83      1446            mov     dph,r3
06A0 8CF0      1447            mov     b,r4
06A2 120000    1448            lcall   _set_odr_xyz_rep
06A5 AD82      1449            mov     r5,dpl
06A7           1450   ;        bmm150.c:843: break;
06A7           1451   ;        bmm150.c:844: default:
06A7 8000      1452            sjmp    L008008?
06A9           1453   L008005?:
06A9           1454   ;        bmm150.c:845: rslt = BMM150_E_INVALID_CONFIG;
06A9 7DFD      1455            mov     r5,#0xFD
06AB           1456   ;        bmm150.c:847: }
06AB           1457   L008008?:
06AB           1458   ;        bmm150.c:850: return rslt;
06AB 8D82      1459            mov     dpl,r5
06AD 22        1460            ret
06AE           1461   ;------------------------------------------------------------
06AE           1462   ;Allocation info for local variables in function 'bmm150_set_sensor_settings'
06AE           1463   ;------------------------------------------------------------
06AE           1464   ;settings                  Allocated with name '_bmm150_set_sensor_settings_PARM_2'
06AE           1465   ;dev                       Allocated with name '_bmm150_set_sensor_settings_PARM_3'
06AE           1466   ;desired_settings          Allocated to registers r2 r3 
06AE           1467   ;rslt                      Allocated to registers r4 
06AE           1468   ;------------------------------------------------------------
06AE           1469   ;        bmm150.c:857: int8_t bmm150_set_sensor_settings(uint16_t desired_settings,
06AE           1470   ;        -----------------------------------------
06AE           1471   ;         function bmm150_set_sensor_settings
06AE           1472   ;        -----------------------------------------
06AE           1473   _bmm150_set_sensor_settings:
06AE AA82      1474            mov     r2,dpl
06B0 AB83      1475            mov     r3,dph
06B2           1476   ;        bmm150.c:864: rslt = null_ptr_check(dev);
06B2 85C082    1477            mov     dpl,_bmm150_set_sensor_settings_PARM_3
06B5 85C183    1478            mov     dph,(_bmm150_set_sensor_settings_PARM_3 + 1)
06B8 85C2F0    1479            mov     b,(_bmm150_set_sensor_settings_PARM_3 + 2)
06BB C002      1480            push    ar2
06BD C003      1481            push    ar3
06BF 120000    1482            lcall   _null_ptr_check
06C2 AC82      1483            mov     r4,dpl
06C4 D003      1484            pop     ar3
06C6 D002      1485            pop     ar2
06C8           1486   ;        bmm150.c:867: if (rslt == BMM150_OK)
06C8 EC        1487            mov     a,r4
06C9 6000      1488            jz      L009024?
06CB 020000    1489            ljmp    L009013?
06CE           1490   L009024?:
06CE           1491   ;        bmm150.c:869: if (are_settings_changed(MODE_SETTING_SEL, desired_settings))
06CE 8AE8      1492            mov     _are_settings_changed_PARM_2,r2
06D0 8BE9      1493            mov     (_are_settings_changed_PARM_2 + 1),r3
06D2 90000F    1494            mov     dptr,#0x000F
06D5 C002      1495            push    ar2
06D7 C003      1496            push    ar3
06D9 C004      1497            push    ar4
06DB 120000    1498            lcall   _are_settings_changed
06DE E582      1499            mov     a,dpl
06E0 D004      1500            pop     ar4
06E2 D003      1501            pop     ar3
06E4 D002      1502            pop     ar2
06E6 6000      1503            jz      L009002?
06E8           1504   ;        bmm150.c:872: rslt = mode_settings(desired_settings, settings, dev);
06E8 852058    1505            mov     _mode_settings_PARM_2,_bmm150_set_sensor_settings_PARM_2
06EB 852159    1506            mov     (_mode_settings_PARM_2 + 1),(_bmm150_set_sensor_settings_PARM_2 + 1)
06EE 85225A    1507            mov     (_mode_settings_PARM_2 + 2),(_bmm150_set_sensor_settings_PARM_2 + 2)
06F1 85C0A8    1508            mov     _mode_settings_PARM_3,_bmm150_set_sensor_settings_PARM_3
06F4 85C1A9    1509            mov     (_mode_settings_PARM_3 + 1),(_bmm150_set_sensor_settings_PARM_3 + 1)
06F7 85C2AA    1510            mov     (_mode_settings_PARM_3 + 2),(_bmm150_set_sensor_settings_PARM_3 + 2)
06FA 8A82      1511            mov     dpl,r2
06FC 8B83      1512            mov     dph,r3
06FE C002      1513            push    ar2
0700 C003      1514            push    ar3
0702 120000    1515            lcall   _mode_settings
0705 AC82      1516            mov     r4,dpl
0707 D003      1517            pop     ar3
0709 D002      1518            pop     ar2
070B           1519   L009002?:
070B           1520   ;        bmm150.c:875: if ((!rslt) && are_settings_changed(INTERRUPT_PIN_SETTING_SEL, desired_settings))
070B EC        1521            mov     a,r4
070C 7000      1522            jnz     L009004?
070E 8AE8      1523            mov     _are_settings_changed_PARM_2,r2
0710 8BE9      1524            mov     (_are_settings_changed_PARM_2 + 1),r3
0712 9001F0    1525            mov     dptr,#0x01F0
0715 C002      1526            push    ar2
0717 C003      1527            push    ar3
0719 C004      1528            push    ar4
071B 120000    1529            lcall   _are_settings_changed
071E E582      1530            mov     a,dpl
0720 D004      1531            pop     ar4
0722 D003      1532            pop     ar3
0724 D002      1533            pop     ar2
0726 6000      1534            jz      L009004?
0728           1535   ;        bmm150.c:878: rslt = interrupt_pin_settings(desired_settings, settings, dev);
0728 8520F8    1536            mov     _interrupt_pin_settings_PARM_2,_bmm150_set_sensor_settings_PARM_2
072B 8521F9    1537            mov     (_interrupt_pin_settings_PARM_2 + 1),(_bmm150_set_sensor_settings_PARM_2 + 1)
072E 8522FA    1538            mov     (_interrupt_pin_settings_PARM_2 + 2),(_bmm150_set_sensor_settings_PARM_2 + 2)
0731 85C048    1539            mov     _interrupt_pin_settings_PARM_3,_bmm150_set_sensor_settings_PARM_3
0734 85C149    1540            mov     (_interrupt_pin_settings_PARM_3 + 1),(_bmm150_set_sensor_settings_PARM_3 + 1)
0737 85C24A    1541            mov     (_interrupt_pin_settings_PARM_3 + 2),(_bmm150_set_sensor_settings_PARM_3 + 2)
073A 8A82      1542            mov     dpl,r2
073C 8B83      1543            mov     dph,r3
073E C002      1544            push    ar2
0740 C003      1545            push    ar3
0742 120000    1546            lcall   _interrupt_pin_settings
0745 AC82      1547            mov     r4,dpl
0747 D003      1548            pop     ar3
0749 D002      1549            pop     ar2
074B           1550   L009004?:
074B           1551   ;        bmm150.c:881: if ((!rslt) && are_settings_changed(INTERRUPT_CONFIG_SEL, desired_settings))
074B EC        1552            mov     a,r4
074C 7000      1553            jnz     L009007?
074E 8AE8      1554            mov     _are_settings_changed_PARM_2,r2
0750 8BE9      1555            mov     (_are_settings_changed_PARM_2 + 1),r3
0752 901E00    1556            mov     dptr,#0x1E00
0755 C002      1557            push    ar2
0757 C003      1558            push    ar3
0759 C004      1559            push    ar4
075B 120000    1560            lcall   _are_settings_changed
075E E582      1561            mov     a,dpl
0760 D004      1562            pop     ar4
0762 D003      1563            pop     ar3
0764 D002      1564            pop     ar2
0766 6000      1565            jz      L009007?
0768           1566   ;        bmm150.c:884: rslt = interrupt_config(desired_settings, settings, dev);
0768 852018    1567            mov     _interrupt_config_PARM_2,_bmm150_set_sensor_settings_PARM_2
076B 852119    1568            mov     (_interrupt_config_PARM_2 + 1),(_bmm150_set_sensor_settings_PARM_2 + 1)
076E 85221A    1569            mov     (_interrupt_config_PARM_2 + 2),(_bmm150_set_sensor_settings_PARM_2 + 2)
0771 85C068    1570            mov     _interrupt_config_PARM_3,_bmm150_set_sensor_settings_PARM_3
0774 85C169    1571            mov     (_interrupt_config_PARM_3 + 1),(_bmm150_set_sensor_settings_PARM_3 + 1)
0777 85C26A    1572            mov     (_interrupt_config_PARM_3 + 2),(_bmm150_set_sensor_settings_PARM_3 + 2)
077A 8A82      1573            mov     dpl,r2
077C 8B83      1574            mov     dph,r3
077E C002      1575            push    ar2
0780 C003      1576            push    ar3
0782 120000    1577            lcall   _interrupt_config
0785 AC82      1578            mov     r4,dpl
0787 D003      1579            pop     ar3
0789 D002      1580            pop     ar2
078B           1581   L009007?:
078B           1582   ;        bmm150.c:887: if ((!rslt) && are_settings_changed(INTERRUPT_THRESHOLD_CONFIG_SEL, desired_settings))
078B EC        1583            mov     a,r4
078C 7000      1584            jnz     L009013?
078E 8AE8      1585            mov     _are_settings_changed_PARM_2,r2
0790 8BE9      1586            mov     (_are_settings_changed_PARM_2 + 1),r3
0792 906000    1587            mov     dptr,#0x6000
0795 C002      1588            push    ar2
0797 C003      1589            push    ar3
0799 C004      1590            push    ar4
079B 120000    1591            lcall   _are_settings_changed
079E E582      1592            mov     a,dpl
07A0 D004      1593            pop     ar4
07A2 D003      1594            pop     ar3
07A4 D002      1595            pop     ar2
07A6 6000      1596            jz      L009013?
07A8           1597   ;        bmm150.c:890: rslt = interrupt_threshold_settings(desired_settings, settings, dev);
07A8 852038    1598            mov     _interrupt_threshold_settings_PARM_2,_bmm150_set_sensor_settings_PARM_2
07AB 852139    1599            mov     (_interrupt_threshold_settings_PARM_2 + 1),(_bmm150_set_sensor_settings_PARM_2 + 1)
07AE 85223A    1600            mov     (_interrupt_threshold_settings_PARM_2 + 2),(_bmm150_set_sensor_settings_PARM_2 + 2)
07B1 85C098    1601            mov     _interrupt_threshold_settings_PARM_3,_bmm150_set_sensor_settings_PARM_3
07B4 85C199    1602            mov     (_interrupt_threshold_settings_PARM_3 + 1),(_bmm150_set_sensor_settings_PARM_3 + 1)
07B7 85C29A    1603            mov     (_interrupt_threshold_settings_PARM_3 + 2),(_bmm150_set_sensor_settings_PARM_3 + 2)
07BA 8A82      1604            mov     dpl,r2
07BC 8B83      1605            mov     dph,r3
07BE 120000    1606            lcall   _interrupt_threshold_settings
07C1 AC82      1607            mov     r4,dpl
07C3           1608   L009013?:
07C3           1609   ;        bmm150.c:894: return rslt;
07C3 8C82      1610            mov     dpl,r4
07C5 22        1611            ret
07C6           1612   ;------------------------------------------------------------
07C6           1613   ;Allocation info for local variables in function 'bmm150_get_sensor_settings'
07C6           1614   ;------------------------------------------------------------
07C6           1615   ;dev                       Allocated with name '_bmm150_get_sensor_settings_PARM_2'
07C6           1616   ;settings                  Allocated to registers r2 r3 r4 
07C6           1617   ;rslt                      Allocated to registers r5 
07C6           1618   ;setting                   Allocated with name '_bmm150_get_sensor_settings_setting_1_105'
07C6           1619   ;------------------------------------------------------------
07C6           1620   ;        bmm150.c:900: int8_t bmm150_get_sensor_settings(struct bmm150_settings *settings, struct bmm150_dev *dev)
07C6           1621   ;        -----------------------------------------
07C6           1622   ;         function bmm150_get_sensor_settings
07C6           1623   ;        -----------------------------------------
07C6           1624   _bmm150_get_sensor_settings:
07C6 AA82      1625            mov     r2,dpl
07C8 AB83      1626            mov     r3,dph
07CA ACF0      1627            mov     r4,b
07CC           1628   ;        bmm150.c:903: uint8_t setting[BMM150_LEN_SETTING_DATA] = { 0 };
07CC 754800    1629            mov     _bmm150_get_sensor_settings_setting_1_105,#0x00
07CF 754900    1630            mov     (_bmm150_get_sensor_settings_setting_1_105 + 0x0001),#0x00
07D2 754A00    1631            mov     (_bmm150_get_sensor_settings_setting_1_105 + 0x0002),#0x00
07D5 754B00    1632            mov     (_bmm150_get_sensor_settings_setting_1_105 + 0x0003),#0x00
07D8 754C00    1633            mov     (_bmm150_get_sensor_settings_setting_1_105 + 0x0004),#0x00
07DB 754D00    1634            mov     (_bmm150_get_sensor_settings_setting_1_105 + 0x0005),#0x00
07DE 754E00    1635            mov     (_bmm150_get_sensor_settings_setting_1_105 + 0x0006),#0x00
07E1 754F00    1636            mov     (_bmm150_get_sensor_settings_setting_1_105 + 0x0007),#0x00
07E4           1637   ;        bmm150.c:906: rslt = bmm150_get_regs(BMM150_REG_POWER_CONTROL, setting, BMM150_LEN_SETTING_DATA, dev);
07E4 C002      1638            push    ar2
07E6 C003      1639            push    ar3
07E8 C004      1640            push    ar4
07EA C060      1641            push    _bmm150_get_sensor_settings_PARM_2
07EC C061      1642            push    (_bmm150_get_sensor_settings_PARM_2 + 1)
07EE C062      1643            push    (_bmm150_get_sensor_settings_PARM_2 + 2)
07F0 7408      1644            mov     a,#0x08
07F2 C0E0      1645            push    acc
07F4 E4        1646            clr     a
07F5 C0E0      1647            push    acc
07F7 C0E0      1648            push    acc
07F9 C0E0      1649            push    acc
07FB 7448      1650            mov     a,#_bmm150_get_sensor_settings_setting_1_105
07FD C0E0      1651            push    acc
07FF 744E      1652            mov     a,#(_bmm150_get_sensor_settings_setting_1_105 >> 8)
0801 C0E0      1653            push    acc
0803 7440      1654            mov     a,#0x40
0805 C0E0      1655            push    acc
0807 75824B    1656            mov     dpl,#0x4B
080A 120000    1657            lcall   _bmm150_get_regs
080D AD82      1658            mov     r5,dpl
080F E581      1659            mov     a,sp
0811 24F6      1660            add     a,#0xf6
0813 F581      1661            mov     sp,a
0815 D004      1662            pop     ar4
0817 D003      1663            pop     ar3
0819 D002      1664            pop     ar2
081B           1665   ;        bmm150.c:908: if (rslt == BMM150_OK)
081B ED        1666            mov     a,r5
081C 7000      1667            jnz     L010002?
081E           1668   ;        bmm150.c:911: parse_setting(setting, settings);
081E 8A38      1669            mov     _parse_setting_PARM_2,r2
0820 8B39      1670            mov     (_parse_setting_PARM_2 + 1),r3
0822 8C3A      1671            mov     (_parse_setting_PARM_2 + 2),r4
0824 904E48    1672            mov     dptr,#_bmm150_get_sensor_settings_setting_1_105
0827 75F040    1673            mov     b,#0x40
082A C005      1674            push    ar5
082C 120000    1675            lcall   _parse_setting
082F D005      1676            pop     ar5
0831           1677   L010002?:
0831           1678   ;        bmm150.c:914: return rslt;
0831 8D82      1679            mov     dpl,r5
0833 22        1680            ret
0834           1681   ;------------------------------------------------------------
0834           1682   ;Allocation info for local variables in function 'bmm150_read_mag_data'
0834           1683   ;------------------------------------------------------------
0834           1684   ;dev                       Allocated with name '_bmm150_read_mag_data_PARM_2'
0834           1685   ;mag_data                  Allocated with name '_bmm150_read_mag_data_mag_data_1_107'
0834           1686   ;rslt                      Allocated with name '_bmm150_read_mag_data_rslt_1_108'
0834           1687   ;msb_data                  Allocated with name '_bmm150_read_mag_data_msb_data_1_108'
0834           1688   ;reg_data                  Allocated with name '_bmm150_read_mag_data_reg_data_1_108'
0834           1689   ;raw_mag_data              Allocated with name '_bmm150_read_mag_data_raw_mag_data_1_108'
0834           1690   ;------------------------------------------------------------
0834           1691   ;        bmm150.c:922: int8_t bmm150_read_mag_data(struct bmm150_mag_data *mag_data, struct bmm150_dev *dev)
0834           1692   ;        -----------------------------------------
0834           1693   ;         function bmm150_read_mag_data
0834           1694   ;        -----------------------------------------
0834           1695   _bmm150_read_mag_data:
0834 8582A8    1696            mov     _bmm150_read_mag_data_mag_data_1_107,dpl
0837 8583A9    1697            mov     (_bmm150_read_mag_data_mag_data_1_107 + 1),dph
083A 85F0AA    1698            mov     (_bmm150_read_mag_data_mag_data_1_107 + 2),b
083D           1699   ;        bmm150.c:926: uint8_t reg_data[BMM150_LEN_XYZR_DATA] = { 0 };
083D 75C800    1700            mov     _bmm150_read_mag_data_reg_data_1_108,#0x00
0840 75C900    1701            mov     (_bmm150_read_mag_data_reg_data_1_108 + 0x0001),#0x00
0843 75CA00    1702            mov     (_bmm150_read_mag_data_reg_data_1_108 + 0x0002),#0x00
0846 75CB00    1703            mov     (_bmm150_read_mag_data_reg_data_1_108 + 0x0003),#0x00
0849 75CC00    1704            mov     (_bmm150_read_mag_data_reg_data_1_108 + 0x0004),#0x00
084C 75CD00    1705            mov     (_bmm150_read_mag_data_reg_data_1_108 + 0x0005),#0x00
084F 75CE00    1706            mov     (_bmm150_read_mag_data_reg_data_1_108 + 0x0006),#0x00
0852 75CF00    1707            mov     (_bmm150_read_mag_data_reg_data_1_108 + 0x0007),#0x00
0855           1708   ;        bmm150.c:930: rslt = bmm150_get_regs(BMM150_REG_DATA_X_LSB, reg_data, BMM150_LEN_XYZR_DATA, dev);
0855 C000      1709            push    _bmm150_read_mag_data_PARM_2
0857 C001      1710            push    (_bmm150_read_mag_data_PARM_2 + 1)
0859 C002      1711            push    (_bmm150_read_mag_data_PARM_2 + 2)
085B 7408      1712            mov     a,#0x08
085D C0E0      1713            push    acc
085F E4        1714            clr     a
0860 C0E0      1715            push    acc
0862 C0E0      1716            push    acc
0864 C0E0      1717            push    acc
0866 74C8      1718            mov     a,#_bmm150_read_mag_data_reg_data_1_108
0868 C0E0      1719            push    acc
086A 744F      1720            mov     a,#(_bmm150_read_mag_data_reg_data_1_108 >> 8)
086C C0E0      1721            push    acc
086E 7440      1722            mov     a,#0x40
0870 C0E0      1723            push    acc
0872 758242    1724            mov     dpl,#0x42
0875 120000    1725            lcall   _bmm150_get_regs
0878 858208    1726            mov     _bmm150_read_mag_data_rslt_1_108,dpl
087B E581      1727            mov     a,sp
087D 24F6      1728            add     a,#0xf6
087F F581      1729            mov     sp,a
0881           1730   ;        bmm150.c:932: if (rslt == BMM150_OK)
0881 E508      1731            mov     a,_bmm150_read_mag_data_rslt_1_108
0883 6000      1732            jz      L011006?
0885 020000    1733            ljmp    L011002?
0888           1734   L011006?:
0888           1735   ;        bmm150.c:935: reg_data[0] = BMM150_GET_BITS(reg_data[0], BMM150_DATA_X);
0888 AEC8      1736            mov     r6,_bmm150_read_mag_data_reg_data_1_108
088A 5306F8    1737            anl     ar6,#0xF8
088D E4        1738            clr     a
088E C4        1739            swap    a
088F 23        1740            rl      a
0890 CE        1741            xch     a,r6
0891 C4        1742            swap    a
0892 23        1743            rl      a
0893 541F      1744            anl     a,#0x1f
0895 6E        1745            xrl     a,r6
0896 CE        1746            xch     a,r6
0897 541F      1747            anl     a,#0x1f
0899 CE        1748            xch     a,r6
089A 6E        1749            xrl     a,r6
089B CE        1750            xch     a,r6
089C 8EC8      1751            mov     _bmm150_read_mag_data_reg_data_1_108,r6
089E           1752   ;        bmm150.c:939: msb_data = ((int16_t)((int8_t)reg_data[1])) * 32;
089E AFC9      1753            mov     r7,(_bmm150_read_mag_data_reg_data_1_108 + 0x0001)
08A0 E5C9      1754            mov     a,(_bmm150_read_mag_data_reg_data_1_108 + 0x0001)
08A2 33        1755            rlc     a
08A3 95E0      1756            subb    a,acc
08A5 8F68      1757            mov     _bmm150_read_mag_data_msb_data_1_108,r7
08A7 C4        1758            swap    a
08A8 23        1759            rl      a
08A9 54E0      1760            anl     a,#0xe0
08AB C568      1761            xch     a,_bmm150_read_mag_data_msb_data_1_108
08AD C4        1762            swap    a
08AE 23        1763            rl      a
08AF C568      1764            xch     a,_bmm150_read_mag_data_msb_data_1_108
08B1 6568      1765            xrl     a,_bmm150_read_mag_data_msb_data_1_108
08B3 C568      1766            xch     a,_bmm150_read_mag_data_msb_data_1_108
08B5 54E0      1767            anl     a,#0xe0
08B7 C568      1768            xch     a,_bmm150_read_mag_data_msb_data_1_108
08B9 6568      1769            xrl     a,_bmm150_read_mag_data_msb_data_1_108
08BB F569      1770            mov     (_bmm150_read_mag_data_msb_data_1_108 + 1),a
08BD           1771   ;        bmm150.c:942: raw_mag_data.raw_datax = (int16_t)(msb_data | reg_data[0]);
08BD 7D00      1772            mov     r5,#0x00
08BF E568      1773            mov     a,_bmm150_read_mag_data_msb_data_1_108
08C1 4206      1774            orl     ar6,a
08C3 E569      1775            mov     a,(_bmm150_read_mag_data_msb_data_1_108 + 1)
08C5 4205      1776            orl     ar5,a
08C7 8E28      1777            mov     _bmm150_read_mag_data_raw_mag_data_1_108,r6
08C9 8D29      1778            mov     (_bmm150_read_mag_data_raw_mag_data_1_108 + 1),r5
08CB           1779   ;        bmm150.c:945: reg_data[2] = BMM150_GET_BITS(reg_data[2], BMM150_DATA_Y);
08CB ADCA      1780            mov     r5,(_bmm150_read_mag_data_reg_data_1_108 + 0x0002)
08CD 5305F8    1781            anl     ar5,#0xF8
08D0 E4        1782            clr     a
08D1 C4        1783            swap    a
08D2 23        1784            rl      a
08D3 CD        1785            xch     a,r5
08D4 C4        1786            swap    a
08D5 23        1787            rl      a
08D6 541F      1788            anl     a,#0x1f
08D8 6D        1789            xrl     a,r5
08D9 CD        1790            xch     a,r5
08DA 541F      1791            anl     a,#0x1f
08DC CD        1792            xch     a,r5
08DD 6D        1793            xrl     a,r5
08DE CD        1794            xch     a,r5
08DF 8DCA      1795            mov     (_bmm150_read_mag_data_reg_data_1_108 + 0x0002),r5
08E1           1796   ;        bmm150.c:949: msb_data = ((int16_t)((int8_t)reg_data[3])) * 32;
08E1 AECB      1797            mov     r6,(_bmm150_read_mag_data_reg_data_1_108 + 0x0003)
08E3 E5CB      1798            mov     a,(_bmm150_read_mag_data_reg_data_1_108 + 0x0003)
08E5 33        1799            rlc     a
08E6 95E0      1800            subb    a,acc
08E8 8E68      1801            mov     _bmm150_read_mag_data_msb_data_1_108,r6
08EA C4        1802            swap    a
08EB 23        1803            rl      a
08EC 54E0      1804            anl     a,#0xe0
08EE C568      1805            xch     a,_bmm150_read_mag_data_msb_data_1_108
08F0 C4        1806            swap    a
08F1 23        1807            rl      a
08F2 C568      1808            xch     a,_bmm150_read_mag_data_msb_data_1_108
08F4 6568      1809            xrl     a,_bmm150_read_mag_data_msb_data_1_108
08F6 C568      1810            xch     a,_bmm150_read_mag_data_msb_data_1_108
08F8 54E0      1811            anl     a,#0xe0
08FA C568      1812            xch     a,_bmm150_read_mag_data_msb_data_1_108
08FC 6568      1813            xrl     a,_bmm150_read_mag_data_msb_data_1_108
08FE F569      1814            mov     (_bmm150_read_mag_data_msb_data_1_108 + 1),a
0900           1815   ;        bmm150.c:952: raw_mag_data.raw_datay = (int16_t)(msb_data | reg_data[2]);
0900 7E00      1816            mov     r6,#0x00
0902 E568      1817            mov     a,_bmm150_read_mag_data_msb_data_1_108
0904 4205      1818            orl     ar5,a
0906 E569      1819            mov     a,(_bmm150_read_mag_data_msb_data_1_108 + 1)
0908 4206      1820            orl     ar6,a
090A 8D2A      1821            mov     (_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0002),r5
090C 8E2B      1822            mov     ((_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0002) + 1),r6
090E           1823   ;        bmm150.c:955: reg_data[4] = BMM150_GET_BITS(reg_data[4], BMM150_DATA_Z);
090E ADCC      1824            mov     r5,(_bmm150_read_mag_data_reg_data_1_108 + 0x0004)
0910 5305FE    1825            anl     ar5,#0xFE
0913 E4        1826            clr     a
0914 C3        1827            clr     c
0915 13        1828            rrc     a
0916 CD        1829            xch     a,r5
0917 13        1830            rrc     a
0918 CD        1831            xch     a,r5
0919 8DCC      1832            mov     (_bmm150_read_mag_data_reg_data_1_108 + 0x0004),r5
091B           1833   ;        bmm150.c:959: msb_data = ((int16_t)((int8_t)reg_data[5])) * 128;
091B AECD      1834            mov     r6,(_bmm150_read_mag_data_reg_data_1_108 + 0x0005)
091D E5CD      1835            mov     a,(_bmm150_read_mag_data_reg_data_1_108 + 0x0005)
091F 33        1836            rlc     a
0920 95E0      1837            subb    a,acc
0922 8E68      1838            mov     _bmm150_read_mag_data_msb_data_1_108,r6
0924 5401      1839            anl     a,#0x01
0926 A2E0      1840            mov     c,acc.0
0928 C568      1841            xch     a,_bmm150_read_mag_data_msb_data_1_108
092A 13        1842            rrc     a
092B C568      1843            xch     a,_bmm150_read_mag_data_msb_data_1_108
092D 13        1844            rrc     a
092E C568      1845            xch     a,_bmm150_read_mag_data_msb_data_1_108
0930 F569      1846            mov     (_bmm150_read_mag_data_msb_data_1_108 + 1),a
0932           1847   ;        bmm150.c:962: raw_mag_data.raw_dataz = (int16_t)(msb_data | reg_data[4]);
0932 7E00      1848            mov     r6,#0x00
0934 E568      1849            mov     a,_bmm150_read_mag_data_msb_data_1_108
0936 4205      1850            orl     ar5,a
0938 E569      1851            mov     a,(_bmm150_read_mag_data_msb_data_1_108 + 1)
093A 4206      1852            orl     ar6,a
093C 8D2C      1853            mov     (_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0004),r5
093E 8E2D      1854            mov     ((_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0004) + 1),r6
0940           1855   ;        bmm150.c:965: reg_data[6] = BMM150_GET_BITS(reg_data[6], BMM150_DATA_RHALL);
0940 ADCE      1856            mov     r5,(_bmm150_read_mag_data_reg_data_1_108 + 0x0006)
0942 5305FC    1857            anl     ar5,#0xFC
0945 E4        1858            clr     a
0946 C3        1859            clr     c
0947 13        1860            rrc     a
0948 CD        1861            xch     a,r5
0949 13        1862            rrc     a
094A CD        1863            xch     a,r5
094B C3        1864            clr     c
094C 13        1865            rrc     a
094D CD        1866            xch     a,r5
094E 13        1867            rrc     a
094F CD        1868            xch     a,r5
0950 8DCE      1869            mov     (_bmm150_read_mag_data_reg_data_1_108 + 0x0006),r5
0952           1870   ;        bmm150.c:966: raw_mag_data.raw_data_r = (uint16_t)(((uint16_t)reg_data[7] << 6) | reg_data[6]);
0952 AECF      1871            mov     r6,(_bmm150_read_mag_data_reg_data_1_108 + 0x0007)
0954 E4        1872            clr     a
0955 5403      1873            anl     a,#0x03
0957 A2E0      1874            mov     c,acc.0
0959 CE        1875            xch     a,r6
095A 13        1876            rrc     a
095B CE        1877            xch     a,r6
095C 13        1878            rrc     a
095D A2E0      1879            mov     c,acc.0
095F CE        1880            xch     a,r6
0960 13        1881            rrc     a
0961 CE        1882            xch     a,r6
0962 13        1883            rrc     a
0963 CE        1884            xch     a,r6
0964 FF        1885            mov     r7,a
0965 7A00      1886            mov     r2,#0x00
0967 ED        1887            mov     a,r5
0968 4206      1888            orl     ar6,a
096A EA        1889            mov     a,r2
096B 4207      1890            orl     ar7,a
096D 8E2E      1891            mov     (_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0006),r6
096F 8F2F      1892            mov     ((_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0006) + 1),r7
0971           1893   ;        bmm150.c:969: mag_data->x = compensate_x(raw_mag_data.raw_datax, raw_mag_data.raw_data_r, dev);
0971 852882    1894            mov     dpl,_bmm150_read_mag_data_raw_mag_data_1_108
0974 852983    1895            mov     dph,(_bmm150_read_mag_data_raw_mag_data_1_108 + 1)
0977 8E48      1896            mov     _compensate_x_PARM_2,r6
0979 8F49      1897            mov     (_compensate_x_PARM_2 + 1),r7
097B 850098    1898            mov     _compensate_x_PARM_3,_bmm150_read_mag_data_PARM_2
097E 850199    1899            mov     (_compensate_x_PARM_3 + 1),(_bmm150_read_mag_data_PARM_2 + 1)
0981 85029A    1900            mov     (_compensate_x_PARM_3 + 2),(_bmm150_read_mag_data_PARM_2 + 2)
0984 120000    1901            lcall   _compensate_x
0987 AA82      1902            mov     r2,dpl
0989 AB83      1903            mov     r3,dph
098B 85A882    1904            mov     dpl,_bmm150_read_mag_data_mag_data_1_107
098E 85A983    1905            mov     dph,(_bmm150_read_mag_data_mag_data_1_107 + 1)
0991 85AAF0    1906            mov     b,(_bmm150_read_mag_data_mag_data_1_107 + 2)
0994 EA        1907            mov     a,r2
0995 120000    1908            lcall   __gptrput
0998 A3        1909            inc     dptr
0999 EB        1910            mov     a,r3
099A 120000    1911            lcall   __gptrput
099D           1912   ;        bmm150.c:972: mag_data->y = compensate_y(raw_mag_data.raw_datay, raw_mag_data.raw_data_r, dev);
099D 7402      1913            mov     a,#0x02
099F 25A8      1914            add     a,_bmm150_read_mag_data_mag_data_1_107
09A1 FA        1915            mov     r2,a
09A2 E4        1916            clr     a
09A3 35A9      1917            addc    a,(_bmm150_read_mag_data_mag_data_1_107 + 1)
09A5 FB        1918            mov     r3,a
09A6 ACAA      1919            mov     r4,(_bmm150_read_mag_data_mag_data_1_107 + 2)
09A8 852A82    1920            mov     dpl,(_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0002)
09AB 852B83    1921            mov     dph,((_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0002) + 1)
09AE 852E48    1922            mov     _compensate_y_PARM_2,(_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0006)
09B1 852F49    1923            mov     (_compensate_y_PARM_2 + 1),((_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0006) + 1)
09B4 850098    1924            mov     _compensate_y_PARM_3,_bmm150_read_mag_data_PARM_2
09B7 850199    1925            mov     (_compensate_y_PARM_3 + 1),(_bmm150_read_mag_data_PARM_2 + 1)
09BA 85029A    1926            mov     (_compensate_y_PARM_3 + 2),(_bmm150_read_mag_data_PARM_2 + 2)
09BD C002      1927            push    ar2
09BF C003      1928            push    ar3
09C1 C004      1929            push    ar4
09C3 120000    1930            lcall   _compensate_y
09C6 AD82      1931            mov     r5,dpl
09C8 AE83      1932            mov     r6,dph
09CA D004      1933            pop     ar4
09CC D003      1934            pop     ar3
09CE D002      1935            pop     ar2
09D0 8A82      1936            mov     dpl,r2
09D2 8B83      1937            mov     dph,r3
09D4 8CF0      1938            mov     b,r4
09D6 ED        1939            mov     a,r5
09D7 120000    1940            lcall   __gptrput
09DA A3        1941            inc     dptr
09DB EE        1942            mov     a,r6
09DC 120000    1943            lcall   __gptrput
09DF           1944   ;        bmm150.c:975: mag_data->z = compensate_z(raw_mag_data.raw_dataz, raw_mag_data.raw_data_r, dev);
09DF 7404      1945            mov     a,#0x04
09E1 25A8      1946            add     a,_bmm150_read_mag_data_mag_data_1_107
09E3 FA        1947            mov     r2,a
09E4 E4        1948            clr     a
09E5 35A9      1949            addc    a,(_bmm150_read_mag_data_mag_data_1_107 + 1)
09E7 FB        1950            mov     r3,a
09E8 ACAA      1951            mov     r4,(_bmm150_read_mag_data_mag_data_1_107 + 2)
09EA 852C82    1952            mov     dpl,(_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0004)
09ED 852D83    1953            mov     dph,((_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0004) + 1)
09F0 852E58    1954            mov     _compensate_z_PARM_2,(_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0006)
09F3 852F59    1955            mov     (_compensate_z_PARM_2 + 1),((_bmm150_read_mag_data_raw_mag_data_1_108 + 0x0006) + 1)
09F6 8500A8    1956            mov     _compensate_z_PARM_3,_bmm150_read_mag_data_PARM_2
09F9 8501A9    1957            mov     (_compensate_z_PARM_3 + 1),(_bmm150_read_mag_data_PARM_2 + 1)
09FC 8502AA    1958            mov     (_compensate_z_PARM_3 + 2),(_bmm150_read_mag_data_PARM_2 + 2)
09FF C002      1959            push    ar2
0A01 C003      1960            push    ar3
0A03 C004      1961            push    ar4
0A05 120000    1962            lcall   _compensate_z
0A08 AD82      1963            mov     r5,dpl
0A0A AE83      1964            mov     r6,dph
0A0C D004      1965            pop     ar4
0A0E D003      1966            pop     ar3
0A10 D002      1967            pop     ar2
0A12 8A82      1968            mov     dpl,r2
0A14 8B83      1969            mov     dph,r3
0A16 8CF0      1970            mov     b,r4
0A18 ED        1971            mov     a,r5
0A19 120000    1972            lcall   __gptrput
0A1C A3        1973            inc     dptr
0A1D EE        1974            mov     a,r6
0A1E 120000    1975            lcall   __gptrput
0A21           1976   L011002?:
0A21           1977   ;        bmm150.c:978: return rslt;
0A21 850882    1978            mov     dpl,_bmm150_read_mag_data_rslt_1_108
0A24 22        1979            ret
0A25           1980   ;------------------------------------------------------------
0A25           1981   ;Allocation info for local variables in function 'bmm150_get_interrupt_status'
0A25           1982   ;------------------------------------------------------------
0A25           1983   ;dev                       Allocated to registers r2 r3 r4 
0A25           1984   ;rslt                      Allocated to registers r5 
0A25           1985   ;interrupt_status          Allocated with name '_bmm150_get_interrupt_status_interrupt_status_1_111'
0A25           1986   ;data_ready_status         Allocated with name '_bmm150_get_interrupt_status_data_ready_status_1_111'
0A25           1987   ;------------------------------------------------------------
0A25           1988   ;        bmm150.c:1048: int8_t bmm150_get_interrupt_status(struct bmm150_dev *dev)
0A25           1989   ;        -----------------------------------------
0A25           1990   ;         function bmm150_get_interrupt_status
0A25           1991   ;        -----------------------------------------
0A25           1992   _bmm150_get_interrupt_status:
0A25 AA82      1993            mov     r2,dpl
0A27 AB83      1994            mov     r3,dph
0A29 ACF0      1995            mov     r4,b
0A2B           1996   ;        bmm150.c:1055: rslt = bmm150_get_regs(BMM150_REG_DATA_READY_STATUS, &data_ready_status, 1, dev);
0A2B C002      1997            push    ar2
0A2D C003      1998            push    ar3
0A2F C004      1999            push    ar4
0A31 C002      2000            push    ar2
0A33 C003      2001            push    ar3
0A35 C004      2002            push    ar4
0A37 7401      2003            mov     a,#0x01
0A39 C0E0      2004            push    acc
0A3B E4        2005            clr     a
0A3C C0E0      2006            push    acc
0A3E C0E0      2007            push    acc
0A40 C0E0      2008            push    acc
0A42 7408      2009            mov     a,#_bmm150_get_interrupt_status_data_ready_status_1_111
0A44 C0E0      2010            push    acc
0A46 7451      2011            mov     a,#(_bmm150_get_interrupt_status_data_ready_status_1_111 >> 8)
0A48 C0E0      2012            push    acc
0A4A 7440      2013            mov     a,#0x40
0A4C C0E0      2014            push    acc
0A4E 758248    2015            mov     dpl,#0x48
0A51 120000    2016            lcall   _bmm150_get_regs
0A54 AD82      2017            mov     r5,dpl
0A56 E581      2018            mov     a,sp
0A58 24F6      2019            add     a,#0xf6
0A5A F581      2020            mov     sp,a
0A5C D004      2021            pop     ar4
0A5E D003      2022            pop     ar3
0A60 D002      2023            pop     ar2
0A62           2024   ;        bmm150.c:1057: if (rslt == BMM150_OK)
0A62 ED        2025            mov     a,r5
0A63 7000      2026            jnz     L012004?
0A65           2027   ;        bmm150.c:1060: rslt = bmm150_get_regs(BMM150_REG_INTERRUPT_STATUS, &interrupt_status, 1, dev);
0A65 C002      2028            push    ar2
0A67 C003      2029            push    ar3
0A69 C004      2030            push    ar4
0A6B C002      2031            push    ar2
0A6D C003      2032            push    ar3
0A6F C004      2033            push    ar4
0A71 7401      2034            mov     a,#0x01
0A73 C0E0      2035            push    acc
0A75 E4        2036            clr     a
0A76 C0E0      2037            push    acc
0A78 C0E0      2038            push    acc
0A7A C0E0      2039            push    acc
0A7C 7498      2040            mov     a,#_bmm150_get_interrupt_status_interrupt_status_1_111
0A7E C0E0      2041            push    acc
0A80 7450      2042            mov     a,#(_bmm150_get_interrupt_status_interrupt_status_1_111 >> 8)
0A82 C0E0      2043            push    acc
0A84 7440      2044            mov     a,#0x40
0A86 C0E0      2045            push    acc
0A88 75824A    2046            mov     dpl,#0x4A
0A8B 120000    2047            lcall   _bmm150_get_regs
0A8E AD82      2048            mov     r5,dpl
0A90 E581      2049            mov     a,sp
0A92 24F6      2050            add     a,#0xf6
0A94 F581      2051            mov     sp,a
0A96 D004      2052            pop     ar4
0A98 D003      2053            pop     ar3
0A9A D002      2054            pop     ar2
0A9C           2055   ;        bmm150.c:1062: if (rslt == BMM150_OK)
0A9C ED        2056            mov     a,r5
0A9D           2057   ;        bmm150.c:1065: data_ready_status = BMM150_GET_BITS_POS_0(data_ready_status, BMM150_DRDY_STATUS);
0A9D 7000      2058            jnz     L012004?
0A9F AE08      2059            mov     r6,_bmm150_get_interrupt_status_data_ready_status_1_111
0AA1 530601    2060            anl     ar6,#0x01
0AA4 8E08      2061            mov     _bmm150_get_interrupt_status_data_ready_status_1_111,r6
0AA6           2062   ;        bmm150.c:1068: dev->int_status = (data_ready_status << 8) | interrupt_status;
0AA6 741C      2063            mov     a,#0x1C
0AA8 2A        2064            add     a,r2
0AA9 FA        2065            mov     r2,a
0AAA E4        2066            clr     a
0AAB 3B        2067            addc    a,r3
0AAC FB        2068            mov     r3,a
0AAD AF08      2069            mov     r7,_bmm150_get_interrupt_status_data_ready_status_1_111
0AAF 7E00      2070            mov     r6,#0x00
0AB1 A898      2071            mov     r0,_bmm150_get_interrupt_status_interrupt_status_1_111
0AB3 7900      2072            mov     r1,#0x00
0AB5 E8        2073            mov     a,r0
0AB6 4206      2074            orl     ar6,a
0AB8 E9        2075            mov     a,r1
0AB9 4207      2076            orl     ar7,a
0ABB 8A82      2077            mov     dpl,r2
0ABD 8B83      2078            mov     dph,r3
0ABF 8CF0      2079            mov     b,r4
0AC1 EE        2080            mov     a,r6
0AC2 120000    2081            lcall   __gptrput
0AC5 A3        2082            inc     dptr
0AC6 EF        2083            mov     a,r7
0AC7 120000    2084            lcall   __gptrput
0ACA           2085   L012004?:
0ACA           2086   ;        bmm150.c:1072: return rslt;
0ACA 8D82      2087            mov     dpl,r5
0ACC 22        2088            ret
0ACD           2089   ;------------------------------------------------------------
0ACD           2090   ;Allocation info for local variables in function 'bmm150_aux_mag_data'
0ACD           2091   ;------------------------------------------------------------
0ACD           2092   ;mag_data                  Allocated with name '_bmm150_aux_mag_data_PARM_2'
0ACD           2093   ;dev                       Allocated with name '_bmm150_aux_mag_data_PARM_3'
0ACD           2094   ;aux_data                  Allocated with name '_bmm150_aux_mag_data_aux_data_1_114'
0ACD           2095   ;rslt                      Allocated with name '_bmm150_aux_mag_data_rslt_1_115'
0ACD           2096   ;msb_data                  Allocated to registers r7 r2 
0ACD           2097   ;raw_mag_data              Allocated with name '_bmm150_aux_mag_data_raw_mag_data_1_115'
0ACD           2098   ;sloc0                     Allocated with name '_bmm150_aux_mag_data_sloc0_1_0'
0ACD           2099   ;------------------------------------------------------------
0ACD           2100   ;        bmm150.c:1081: int8_t bmm150_aux_mag_data(uint8_t *aux_data, struct bmm150_mag_data *mag_data, const struct bmm150_dev *dev)
0ACD           2101   ;        -----------------------------------------
0ACD           2102   ;         function bmm150_aux_mag_data
0ACD           2103   ;        -----------------------------------------
0ACD           2104   _bmm150_aux_mag_data:
0ACD 858268    2105            mov     _bmm150_aux_mag_data_aux_data_1_114,dpl
0AD0 858369    2106            mov     (_bmm150_aux_mag_data_aux_data_1_114 + 1),dph
0AD3 85F06A    2107            mov     (_bmm150_aux_mag_data_aux_data_1_114 + 2),b
0AD6           2108   ;        bmm150.c:1088: rslt = null_ptr_check(dev);
0AD6 856082    2109            mov     dpl,_bmm150_aux_mag_data_PARM_3
0AD9 856183    2110            mov     dph,(_bmm150_aux_mag_data_PARM_3 + 1)
0ADC 8562F0    2111            mov     b,(_bmm150_aux_mag_data_PARM_3 + 2)
0ADF 120000    2112            lcall   _null_ptr_check
0AE2           2113   ;        bmm150.c:1091: if ((rslt == BMM150_OK) && (aux_data != NULL))
0AE2 E582      2114            mov     a,dpl
0AE4 F5B8      2115            mov     _bmm150_aux_mag_data_rslt_1_115,a
0AE6 6000      2116            jz      L013008?
0AE8 020000    2117            ljmp    L013002?
0AEB           2118   L013008?:
0AEB E4        2119            clr     a
0AEC B56868    2120            cjne    a,_bmm150_aux_mag_data_aux_data_1_114,L013009?
0AEF E4        2121            clr     a
0AF0 B56968    2122            cjne    a,(_bmm150_aux_mag_data_aux_data_1_114 + 1),L013009?
0AF3 E4        2123            clr     a
0AF4 B56A68    2124            cjne    a,(_bmm150_aux_mag_data_aux_data_1_114 + 2),L013009?
0AF7 020000    2125            ljmp    L013002?
0AFA           2126   L013009?:
0AFA           2127   ;        bmm150.c:1094: aux_data[0] = BMM150_GET_BITS(aux_data[0], BMM150_DATA_X);
0AFA 856882    2128            mov     dpl,_bmm150_aux_mag_data_aux_data_1_114
0AFD 856983    2129            mov     dph,(_bmm150_aux_mag_data_aux_data_1_114 + 1)
0B00 856AF0    2130            mov     b,(_bmm150_aux_mag_data_aux_data_1_114 + 2)
0B03 120000    2131            lcall   __gptrget
0B06 FE        2132            mov     r6,a
0B07 5306F8    2133            anl     ar6,#0xF8
0B0A E4        2134            clr     a
0B0B C4        2135            swap    a
0B0C 23        2136            rl      a
0B0D CE        2137            xch     a,r6
0B0E C4        2138            swap    a
0B0F 23        2139            rl      a
0B10 541F      2140            anl     a,#0x1f
0B12 6E        2141            xrl     a,r6
0B13 CE        2142            xch     a,r6
0B14 541F      2143            anl     a,#0x1f
0B16 CE        2144            xch     a,r6
0B17 6E        2145            xrl     a,r6
0B18 CE        2146            xch     a,r6
0B19 856882    2147            mov     dpl,_bmm150_aux_mag_data_aux_data_1_114
0B1C 856983    2148            mov     dph,(_bmm150_aux_mag_data_aux_data_1_114 + 1)
0B1F 856AF0    2149            mov     b,(_bmm150_aux_mag_data_aux_data_1_114 + 2)
0B22 EE        2150            mov     a,r6
0B23 120000    2151            lcall   __gptrput
0B26           2152   ;        bmm150.c:1098: msb_data = ((int16_t)((int8_t)aux_data[1])) * 32;
0B26 7401      2153            mov     a,#0x01
0B28 2568      2154            add     a,_bmm150_aux_mag_data_aux_data_1_114
0B2A FF        2155            mov     r7,a
0B2B E4        2156            clr     a
0B2C 3569      2157            addc    a,(_bmm150_aux_mag_data_aux_data_1_114 + 1)
0B2E FD        2158            mov     r5,a
0B2F AA6A      2159            mov     r2,(_bmm150_aux_mag_data_aux_data_1_114 + 2)
0B31 8F82      2160            mov     dpl,r7
0B33 8D83      2161            mov     dph,r5
0B35 8AF0      2162            mov     b,r2
0B37 120000    2163            lcall   __gptrget
0B3A FF        2164            mov     r7,a
0B3B 33        2165            rlc     a
0B3C 95E0      2166            subb    a,acc
0B3E C4        2167            swap    a
0B3F 23        2168            rl      a
0B40 54E0      2169            anl     a,#0xe0
0B42 CF        2170            xch     a,r7
0B43 C4        2171            swap    a
0B44 23        2172            rl      a
0B45 CF        2173            xch     a,r7
0B46 6F        2174            xrl     a,r7
0B47 CF        2175            xch     a,r7
0B48 54E0      2176            anl     a,#0xe0
0B4A CF        2177            xch     a,r7
0B4B 6F        2178            xrl     a,r7
0B4C FA        2179            mov     r2,a
0B4D           2180   ;        bmm150.c:1101: raw_mag_data.raw_datax = (int16_t)(msb_data | aux_data[0]);
0B4D 7B00      2181            mov     r3,#0x00
0B4F EF        2182            mov     a,r7
0B50 4206      2183            orl     ar6,a
0B52 EA        2184            mov     a,r2
0B53 4203      2185            orl     ar3,a
0B55 8E18      2186            mov     _bmm150_aux_mag_data_raw_mag_data_1_115,r6
0B57 8B19      2187            mov     (_bmm150_aux_mag_data_raw_mag_data_1_115 + 1),r3
0B59           2188   ;        bmm150.c:1104: aux_data[2] = BMM150_GET_BITS(aux_data[2], BMM150_DATA_Y);
0B59 7402      2189            mov     a,#0x02
0B5B 2568      2190            add     a,_bmm150_aux_mag_data_aux_data_1_114
0B5D F568      2191            mov     _bmm150_aux_mag_data_sloc0_1_0,a
0B5F E4        2192            clr     a
0B60 3569      2193            addc    a,(_bmm150_aux_mag_data_aux_data_1_114 + 1)
0B62 F569      2194            mov     (_bmm150_aux_mag_data_sloc0_1_0 + 1),a
0B64 856A6A    2195            mov     (_bmm150_aux_mag_data_sloc0_1_0 + 2),(_bmm150_aux_mag_data_aux_data_1_114 + 2)
0B67 856882    2196            mov     dpl,_bmm150_aux_mag_data_sloc0_1_0
0B6A 856983    2197            mov     dph,(_bmm150_aux_mag_data_sloc0_1_0 + 1)
0B6D 856AF0    2198            mov     b,(_bmm150_aux_mag_data_sloc0_1_0 + 2)
0B70 120000    2199            lcall   __gptrget
0B73 FE        2200            mov     r6,a
0B74 5306F8    2201            anl     ar6,#0xF8
0B77 E4        2202            clr     a
0B78 C4        2203            swap    a
0B79 23        2204            rl      a
0B7A CE        2205            xch     a,r6
0B7B C4        2206            swap    a
0B7C 23        2207            rl      a
0B7D 541F      2208            anl     a,#0x1f
0B7F 6E        2209            xrl     a,r6
0B80 CE        2210            xch     a,r6
0B81 541F      2211            anl     a,#0x1f
0B83 CE        2212            xch     a,r6
0B84 6E        2213            xrl     a,r6
0B85 CE        2214            xch     a,r6
0B86 856882    2215            mov     dpl,_bmm150_aux_mag_data_sloc0_1_0
0B89 856983    2216            mov     dph,(_bmm150_aux_mag_data_sloc0_1_0 + 1)
0B8C 856AF0    2217            mov     b,(_bmm150_aux_mag_data_sloc0_1_0 + 2)
0B8F EE        2218            mov     a,r6
0B90 120000    2219            lcall   __gptrput
0B93           2220   ;        bmm150.c:1108: msb_data = ((int16_t)((int8_t)aux_data[3])) * 32;
0B93 7403      2221            mov     a,#0x03
0B95 2568      2222            add     a,_bmm150_aux_mag_data_aux_data_1_114
0B97 FB        2223            mov     r3,a
0B98 E4        2224            clr     a
0B99 3569      2225            addc    a,(_bmm150_aux_mag_data_aux_data_1_114 + 1)
0B9B FC        2226            mov     r4,a
0B9C AD6A      2227            mov     r5,(_bmm150_aux_mag_data_aux_data_1_114 + 2)
0B9E 8B82      2228            mov     dpl,r3
0BA0 8C83      2229            mov     dph,r4
0BA2 8DF0      2230            mov     b,r5
0BA4 120000    2231            lcall   __gptrget
0BA7 FB        2232            mov     r3,a
0BA8 33        2233            rlc     a
0BA9 95E0      2234            subb    a,acc
0BAB 8B07      2235            mov     ar7,r3
0BAD C4        2236            swap    a
0BAE 23        2237            rl      a
0BAF 54E0      2238            anl     a,#0xe0
0BB1 CF        2239            xch     a,r7
0BB2 C4        2240            swap    a
0BB3 23        2241            rl      a
0BB4 CF        2242            xch     a,r7
0BB5 6F        2243            xrl     a,r7
0BB6 CF        2244            xch     a,r7
0BB7 54E0      2245            anl     a,#0xe0
0BB9 CF        2246            xch     a,r7
0BBA 6F        2247            xrl     a,r7
0BBB FA        2248            mov     r2,a
0BBC           2249   ;        bmm150.c:1111: raw_mag_data.raw_datay = (int16_t)(msb_data | aux_data[2]);
0BBC 7B00      2250            mov     r3,#0x00
0BBE EF        2251            mov     a,r7
0BBF 4206      2252            orl     ar6,a
0BC1 EA        2253            mov     a,r2
0BC2 4203      2254            orl     ar3,a
0BC4 8E1A      2255            mov     (_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0002),r6
0BC6 8B1B      2256            mov     ((_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0002) + 1),r3
0BC8           2257   ;        bmm150.c:1114: aux_data[4] = BMM150_GET_BITS(aux_data[4], BMM150_DATA_Z);
0BC8 7404      2258            mov     a,#0x04
0BCA 2568      2259            add     a,_bmm150_aux_mag_data_aux_data_1_114
0BCC F568      2260            mov     _bmm150_aux_mag_data_sloc0_1_0,a
0BCE E4        2261            clr     a
0BCF 3569      2262            addc    a,(_bmm150_aux_mag_data_aux_data_1_114 + 1)
0BD1 F569      2263            mov     (_bmm150_aux_mag_data_sloc0_1_0 + 1),a
0BD3 856A6A    2264            mov     (_bmm150_aux_mag_data_sloc0_1_0 + 2),(_bmm150_aux_mag_data_aux_data_1_114 + 2)
0BD6 856882    2265            mov     dpl,_bmm150_aux_mag_data_sloc0_1_0
0BD9 856983    2266            mov     dph,(_bmm150_aux_mag_data_sloc0_1_0 + 1)
0BDC 856AF0    2267            mov     b,(_bmm150_aux_mag_data_sloc0_1_0 + 2)
0BDF 120000    2268            lcall   __gptrget
0BE2 FE        2269            mov     r6,a
0BE3 5306FE    2270            anl     ar6,#0xFE
0BE6 E4        2271            clr     a
0BE7 C3        2272            clr     c
0BE8 13        2273            rrc     a
0BE9 CE        2274            xch     a,r6
0BEA 13        2275            rrc     a
0BEB CE        2276            xch     a,r6
0BEC 856882    2277            mov     dpl,_bmm150_aux_mag_data_sloc0_1_0
0BEF 856983    2278            mov     dph,(_bmm150_aux_mag_data_sloc0_1_0 + 1)
0BF2 856AF0    2279            mov     b,(_bmm150_aux_mag_data_sloc0_1_0 + 2)
0BF5 EE        2280            mov     a,r6
0BF6 120000    2281            lcall   __gptrput
0BF9           2282   ;        bmm150.c:1118: msb_data = ((int16_t)((int8_t)aux_data[5])) * 128;
0BF9 7405      2283            mov     a,#0x05
0BFB 2568      2284            add     a,_bmm150_aux_mag_data_aux_data_1_114
0BFD FB        2285            mov     r3,a
0BFE E4        2286            clr     a
0BFF 3569      2287            addc    a,(_bmm150_aux_mag_data_aux_data_1_114 + 1)
0C01 FC        2288            mov     r4,a
0C02 AD6A      2289            mov     r5,(_bmm150_aux_mag_data_aux_data_1_114 + 2)
0C04 8B82      2290            mov     dpl,r3
0C06 8C83      2291            mov     dph,r4
0C08 8DF0      2292            mov     b,r5
0C0A 120000    2293            lcall   __gptrget
0C0D FB        2294            mov     r3,a
0C0E 33        2295            rlc     a
0C0F 95E0      2296            subb    a,acc
0C11 8B07      2297            mov     ar7,r3
0C13 5401      2298            anl     a,#0x01
0C15 A2E0      2299            mov     c,acc.0
0C17 CF        2300            xch     a,r7
0C18 13        2301            rrc     a
0C19 CF        2302            xch     a,r7
0C1A 13        2303            rrc     a
0C1B CF        2304            xch     a,r7
0C1C FA        2305            mov     r2,a
0C1D           2306   ;        bmm150.c:1121: raw_mag_data.raw_dataz = (int16_t)(msb_data | aux_data[4]);
0C1D 7B00      2307            mov     r3,#0x00
0C1F EE        2308            mov     a,r6
0C20 4207      2309            orl     ar7,a
0C22 EB        2310            mov     a,r3
0C23 4202      2311            orl     ar2,a
0C25 8F1C      2312            mov     (_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0004),r7
0C27 8A1D      2313            mov     ((_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0004) + 1),r2
0C29           2314   ;        bmm150.c:1124: aux_data[6] = BMM150_GET_BITS(aux_data[6], BMM150_DATA_RHALL);
0C29 7406      2315            mov     a,#0x06
0C2B 2568      2316            add     a,_bmm150_aux_mag_data_aux_data_1_114
0C2D FA        2317            mov     r2,a
0C2E E4        2318            clr     a
0C2F 3569      2319            addc    a,(_bmm150_aux_mag_data_aux_data_1_114 + 1)
0C31 FB        2320            mov     r3,a
0C32 AC6A      2321            mov     r4,(_bmm150_aux_mag_data_aux_data_1_114 + 2)
0C34 8A82      2322            mov     dpl,r2
0C36 8B83      2323            mov     dph,r3
0C38 8CF0      2324            mov     b,r4
0C3A 120000    2325            lcall   __gptrget
0C3D FD        2326            mov     r5,a
0C3E 5305FC    2327            anl     ar5,#0xFC
0C41 E4        2328            clr     a
0C42 C3        2329            clr     c
0C43 13        2330            rrc     a
0C44 CD        2331            xch     a,r5
0C45 13        2332            rrc     a
0C46 CD        2333            xch     a,r5
0C47 C3        2334            clr     c
0C48 13        2335            rrc     a
0C49 CD        2336            xch     a,r5
0C4A 13        2337            rrc     a
0C4B CD        2338            xch     a,r5
0C4C 8A82      2339            mov     dpl,r2
0C4E 8B83      2340            mov     dph,r3
0C50 8CF0      2341            mov     b,r4
0C52 ED        2342            mov     a,r5
0C53 120000    2343            lcall   __gptrput
0C56           2344   ;        bmm150.c:1125: raw_mag_data.raw_data_r = (uint16_t)(((uint16_t)aux_data[7] << 6) | aux_data[6]);
0C56 7407      2345            mov     a,#0x07
0C58 2568      2346            add     a,_bmm150_aux_mag_data_aux_data_1_114
0C5A FA        2347            mov     r2,a
0C5B E4        2348            clr     a
0C5C 3569      2349            addc    a,(_bmm150_aux_mag_data_aux_data_1_114 + 1)
0C5E FB        2350            mov     r3,a
0C5F AC6A      2351            mov     r4,(_bmm150_aux_mag_data_aux_data_1_114 + 2)
0C61 8A82      2352            mov     dpl,r2
0C63 8B83      2353            mov     dph,r3
0C65 8CF0      2354            mov     b,r4
0C67 120000    2355            lcall   __gptrget
0C6A FA        2356            mov     r2,a
0C6B E4        2357            clr     a
0C6C 5403      2358            anl     a,#0x03
0C6E A2E0      2359            mov     c,acc.0
0C70 CA        2360            xch     a,r2
0C71 13        2361            rrc     a
0C72 CA        2362            xch     a,r2
0C73 13        2363            rrc     a
0C74 A2E0      2364            mov     c,acc.0
0C76 CA        2365            xch     a,r2
0C77 13        2366            rrc     a
0C78 CA        2367            xch     a,r2
0C79 13        2368            rrc     a
0C7A CA        2369            xch     a,r2
0C7B FB        2370            mov     r3,a
0C7C 7C00      2371            mov     r4,#0x00
0C7E ED        2372            mov     a,r5
0C7F 4202      2373            orl     ar2,a
0C81 EC        2374            mov     a,r4
0C82 4203      2375            orl     ar3,a
0C84 8A1E      2376            mov     (_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0006),r2
0C86 8B1F      2377            mov     ((_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0006) + 1),r3
0C88           2378   ;        bmm150.c:1128: mag_data->x = compensate_x(raw_mag_data.raw_datax, raw_mag_data.raw_data_r, dev);
0C88 ACB0      2379            mov     r4,_bmm150_aux_mag_data_PARM_2
0C8A ADB1      2380            mov     r5,(_bmm150_aux_mag_data_PARM_2 + 1)
0C8C AEB2      2381            mov     r6,(_bmm150_aux_mag_data_PARM_2 + 2)
0C8E 851882    2382            mov     dpl,_bmm150_aux_mag_data_raw_mag_data_1_115
0C91 851983    2383            mov     dph,(_bmm150_aux_mag_data_raw_mag_data_1_115 + 1)
0C94 8A48      2384            mov     _compensate_x_PARM_2,r2
0C96 8B49      2385            mov     (_compensate_x_PARM_2 + 1),r3
0C98 856098    2386            mov     _compensate_x_PARM_3,_bmm150_aux_mag_data_PARM_3
0C9B 856199    2387            mov     (_compensate_x_PARM_3 + 1),(_bmm150_aux_mag_data_PARM_3 + 1)
0C9E 85629A    2388            mov     (_compensate_x_PARM_3 + 2),(_bmm150_aux_mag_data_PARM_3 + 2)
0CA1 C004      2389            push    ar4
0CA3 C005      2390            push    ar5
0CA5 C006      2391            push    ar6
0CA7 120000    2392            lcall   _compensate_x
0CAA AA82      2393            mov     r2,dpl
0CAC AB83      2394            mov     r3,dph
0CAE D006      2395            pop     ar6
0CB0 D005      2396            pop     ar5
0CB2 D004      2397            pop     ar4
0CB4 8C82      2398            mov     dpl,r4
0CB6 8D83      2399            mov     dph,r5
0CB8 8EF0      2400            mov     b,r6
0CBA EA        2401            mov     a,r2
0CBB 120000    2402            lcall   __gptrput
0CBE A3        2403            inc     dptr
0CBF EB        2404            mov     a,r3
0CC0 120000    2405            lcall   __gptrput
0CC3           2406   ;        bmm150.c:1131: mag_data->y = compensate_y(raw_mag_data.raw_datay, raw_mag_data.raw_data_r, dev);
0CC3 7402      2407            mov     a,#0x02
0CC5 2C        2408            add     a,r4
0CC6 F568      2409            mov     _bmm150_aux_mag_data_sloc0_1_0,a
0CC8 E4        2410            clr     a
0CC9 3D        2411            addc    a,r5
0CCA F569      2412            mov     (_bmm150_aux_mag_data_sloc0_1_0 + 1),a
0CCC 8E6A      2413            mov     (_bmm150_aux_mag_data_sloc0_1_0 + 2),r6
0CCE 851A82    2414            mov     dpl,(_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0002)
0CD1 851B83    2415            mov     dph,((_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0002) + 1)
0CD4 851E48    2416            mov     _compensate_y_PARM_2,(_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0006)
0CD7 851F49    2417            mov     (_compensate_y_PARM_2 + 1),((_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0006) + 1)
0CDA 856098    2418            mov     _compensate_y_PARM_3,_bmm150_aux_mag_data_PARM_3
0CDD 856199    2419            mov     (_compensate_y_PARM_3 + 1),(_bmm150_aux_mag_data_PARM_3 + 1)
0CE0 85629A    2420            mov     (_compensate_y_PARM_3 + 2),(_bmm150_aux_mag_data_PARM_3 + 2)
0CE3 C004      2421            push    ar4
0CE5 C005      2422            push    ar5
0CE7 C006      2423            push    ar6
0CE9 120000    2424            lcall   _compensate_y
0CEC AA82      2425            mov     r2,dpl
0CEE AB83      2426            mov     r3,dph
0CF0 D006      2427            pop     ar6
0CF2 D005      2428            pop     ar5
0CF4 D004      2429            pop     ar4
0CF6 856882    2430            mov     dpl,_bmm150_aux_mag_data_sloc0_1_0
0CF9 856983    2431            mov     dph,(_bmm150_aux_mag_data_sloc0_1_0 + 1)
0CFC 856AF0    2432            mov     b,(_bmm150_aux_mag_data_sloc0_1_0 + 2)
0CFF EA        2433            mov     a,r2
0D00 120000    2434            lcall   __gptrput
0D03 A3        2435            inc     dptr
0D04 EB        2436            mov     a,r3
0D05 120000    2437            lcall   __gptrput
0D08           2438   ;        bmm150.c:1134: mag_data->z = compensate_z(raw_mag_data.raw_dataz, raw_mag_data.raw_data_r, dev);
0D08 7404      2439            mov     a,#0x04
0D0A 2C        2440            add     a,r4
0D0B FC        2441            mov     r4,a
0D0C E4        2442            clr     a
0D0D 3D        2443            addc    a,r5
0D0E FD        2444            mov     r5,a
0D0F 851C82    2445            mov     dpl,(_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0004)
0D12 851D83    2446            mov     dph,((_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0004) + 1)
0D15 851E58    2447            mov     _compensate_z_PARM_2,(_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0006)
0D18 851F59    2448            mov     (_compensate_z_PARM_2 + 1),((_bmm150_aux_mag_data_raw_mag_data_1_115 + 0x0006) + 1)
0D1B 8560A8    2449            mov     _compensate_z_PARM_3,_bmm150_aux_mag_data_PARM_3
0D1E 8561A9    2450            mov     (_compensate_z_PARM_3 + 1),(_bmm150_aux_mag_data_PARM_3 + 1)
0D21 8562AA    2451            mov     (_compensate_z_PARM_3 + 2),(_bmm150_aux_mag_data_PARM_3 + 2)
0D24 C004      2452            push    ar4
0D26 C005      2453            push    ar5
0D28 C006      2454            push    ar6
0D2A 120000    2455            lcall   _compensate_z
0D2D AA82      2456            mov     r2,dpl
0D2F AB83      2457            mov     r3,dph
0D31 D006      2458            pop     ar6
0D33 D005      2459            pop     ar5
0D35 D004      2460            pop     ar4
0D37 8C82      2461            mov     dpl,r4
0D39 8D83      2462            mov     dph,r5
0D3B 8EF0      2463            mov     b,r6
0D3D EA        2464            mov     a,r2
0D3E 120000    2465            lcall   __gptrput
0D41 A3        2466            inc     dptr
0D42 EB        2467            mov     a,r3
0D43 120000    2468            lcall   __gptrput
0D46           2469   L013002?:
0D46           2470   ;        bmm150.c:1137: return rslt;
0D46 85B882    2471            mov     dpl,_bmm150_aux_mag_data_rslt_1_115
0D49 22        2472            ret
0D4A           2473   ;------------------------------------------------------------
0D4A           2474   ;Allocation info for local variables in function 'null_ptr_check'
0D4A           2475   ;------------------------------------------------------------
0D4A           2476   ;dev                       Allocated to registers r2 r3 r4 
0D4A           2477   ;rslt                      Allocated to registers r2 
0D4A           2478   ;------------------------------------------------------------
0D4A           2479   ;        bmm150.c:1147: __xdata static int8_t null_ptr_check(const struct bmm150_dev *dev)
0D4A           2480   ;        -----------------------------------------
0D4A           2481   ;         function null_ptr_check
0D4A           2482   ;        -----------------------------------------
0D4A           2483   _null_ptr_check:
0D4A AA82      2484            mov     r2,dpl
0D4C AB83      2485            mov     r3,dph
0D4E ACF0      2486            mov     r4,b
0D50           2487   ;        bmm150.c:1151: if ((dev == NULL) || (dev->read == NULL) || (dev->write == NULL) || (dev->delay_us == NULL) ||
0D50 BA00A8    2488            cjne    r2,#0x00,L014014?
0D53 BB00A8    2489            cjne    r3,#0x00,L014014?
0D56 BC00A8    2490            cjne    r4,#0x00,L014014?
0D59 020000    2491            ljmp    L014001?
0D5C           2492   L014014?:
0D5C 7406      2493            mov     a,#0x06
0D5E 2A        2494            add     a,r2
0D5F FD        2495            mov     r5,a
0D60 E4        2496            clr     a
0D61 3B        2497            addc    a,r3
0D62 FE        2498            mov     r6,a
0D63 8C07      2499            mov     ar7,r4
0D65 8D82      2500            mov     dpl,r5
0D67 8E83      2501            mov     dph,r6
0D69 8FF0      2502            mov     b,r7
0D6B 120000    2503            lcall   __gptrget
0D6E FD        2504            mov     r5,a
0D6F A3        2505            inc     dptr
0D70 120000    2506            lcall   __gptrget
0D73 FE        2507            mov     r6,a
0D74 7F80      2508            mov     r7,#0x80
0D76 BD0028    2509            cjne    r5,#0x00,L014015?
0D79 BE0028    2510            cjne    r6,#0x00,L014015?
0D7C BF0028    2511            cjne    r7,#0x00,L014015?
0D7F 8000      2512            sjmp    L014001?
0D81           2513   L014015?:
0D81 7408      2514            mov     a,#0x08
0D83 2A        2515            add     a,r2
0D84 FD        2516            mov     r5,a
0D85 E4        2517            clr     a
0D86 3B        2518            addc    a,r3
0D87 FE        2519            mov     r6,a
0D88 8C07      2520            mov     ar7,r4
0D8A 8D82      2521            mov     dpl,r5
0D8C 8E83      2522            mov     dph,r6
0D8E 8FF0      2523            mov     b,r7
0D90 120000    2524            lcall   __gptrget
0D93 FD        2525            mov     r5,a
0D94 A3        2526            inc     dptr
0D95 120000    2527            lcall   __gptrget
0D98 FE        2528            mov     r6,a
0D99 7F80      2529            mov     r7,#0x80
0D9B BD0068    2530            cjne    r5,#0x00,L014016?
0D9E BE0068    2531            cjne    r6,#0x00,L014016?
0DA1 BF0068    2532            cjne    r7,#0x00,L014016?
0DA4 8000      2533            sjmp    L014001?
0DA6           2534   L014016?:
0DA6 740A      2535            mov     a,#0x0A
0DA8 2A        2536            add     a,r2
0DA9 FD        2537            mov     r5,a
0DAA E4        2538            clr     a
0DAB 3B        2539            addc    a,r3
0DAC FE        2540            mov     r6,a
0DAD 8C07      2541            mov     ar7,r4
0DAF 8D82      2542            mov     dpl,r5
0DB1 8E83      2543            mov     dph,r6
0DB3 8FF0      2544            mov     b,r7
0DB5 120000    2545            lcall   __gptrget
0DB8 FD        2546            mov     r5,a
0DB9 A3        2547            inc     dptr
0DBA 120000    2548            lcall   __gptrget
0DBD FE        2549            mov     r6,a
0DBE 7F80      2550            mov     r7,#0x80
0DC0 BD00A8    2551            cjne    r5,#0x00,L014017?
0DC3 BE00A8    2552            cjne    r6,#0x00,L014017?
0DC6 BF00A8    2553            cjne    r7,#0x00,L014017?
0DC9 8000      2554            sjmp    L014001?
0DCB           2555   L014017?:
0DCB           2556   ;        bmm150.c:1152: (dev->intf_ptr == NULL))
0DCB 7402      2557            mov     a,#0x02
0DCD 2A        2558            add     a,r2
0DCE FA        2559            mov     r2,a
0DCF E4        2560            clr     a
0DD0 3B        2561            addc    a,r3
0DD1 FB        2562            mov     r3,a
0DD2 8A82      2563            mov     dpl,r2
0DD4 8B83      2564            mov     dph,r3
0DD6 8CF0      2565            mov     b,r4
0DD8 120000    2566            lcall   __gptrget
0DDB FA        2567            mov     r2,a
0DDC A3        2568            inc     dptr
0DDD 120000    2569            lcall   __gptrget
0DE0 FB        2570            mov     r3,a
0DE1 A3        2571            inc     dptr
0DE2 120000    2572            lcall   __gptrget
0DE5 FC        2573            mov     r4,a
0DE6 BA00E8    2574            cjne    r2,#0x00,L014002?
0DE9 BB00E8    2575            cjne    r3,#0x00,L014002?
0DEC BC00E8    2576            cjne    r4,#0x00,L014002?
0DEF           2577   L014001?:
0DEF           2578   ;        bmm150.c:1155: rslt = BMM150_E_NULL_PTR;
0DEF 7AFF      2579            mov     r2,#0xFF
0DF1 8000      2580            sjmp    L014003?
0DF3           2581   L014002?:
0DF3           2582   ;        bmm150.c:1160: rslt = BMM150_OK;
0DF3 7A00      2583            mov     r2,#0x00
0DF5           2584   L014003?:
0DF5           2585   ;        bmm150.c:1163: return rslt;
0DF5 8A82      2586            mov     dpl,r2
0DF7 22        2587            ret
0DF8           2588   ;------------------------------------------------------------
0DF8           2589   ;Allocation info for local variables in function 'set_power_control_bit'
0DF8           2590   ;------------------------------------------------------------
0DF8           2591   ;dev                       Allocated with name '_set_power_control_bit_PARM_2'
0DF8           2592   ;pwrcntrl_bit              Allocated to registers r2 
0DF8           2593   ;rslt                      Allocated to registers r3 
0DF8           2594   ;reg_data                  Allocated with name '_set_power_control_bit_reg_data_1_122'
0DF8           2595   ;------------------------------------------------------------
0DF8           2596   ;        bmm150.c:1169: __xdata static int8_t set_power_control_bit(uint8_t pwrcntrl_bit, struct bmm150_dev *dev)
0DF8           2597   ;        -----------------------------------------
0DF8           2598   ;         function set_power_control_bit
0DF8           2599   ;        -----------------------------------------
0DF8           2600   _set_power_control_bit:
0DF8 AA82      2601            mov     r2,dpl
0DFA           2602   ;        bmm150.c:1172: uint8_t reg_data = 0;
0DFA 751800    2603            mov     _set_power_control_bit_reg_data_1_122,#0x00
0DFD           2604   ;        bmm150.c:1175: rslt = bmm150_get_regs(BMM150_REG_POWER_CONTROL, &reg_data, 1, dev);
0DFD C002      2605            push    ar2
0DFF C0B8      2606            push    _set_power_control_bit_PARM_2
0E01 C0B9      2607            push    (_set_power_control_bit_PARM_2 + 1)
0E03 C0BA      2608            push    (_set_power_control_bit_PARM_2 + 2)
0E05 7401      2609            mov     a,#0x01
0E07 C0E0      2610            push    acc
0E09 E4        2611            clr     a
0E0A C0E0      2612            push    acc
0E0C C0E0      2613            push    acc
0E0E C0E0      2614            push    acc
0E10 7418      2615            mov     a,#_set_power_control_bit_reg_data_1_122
0E12 C0E0      2616            push    acc
0E14 7453      2617            mov     a,#(_set_power_control_bit_reg_data_1_122 >> 8)
0E16 C0E0      2618            push    acc
0E18 7440      2619            mov     a,#0x40
0E1A C0E0      2620            push    acc
0E1C 75824B    2621            mov     dpl,#0x4B
0E1F 120000    2622            lcall   _bmm150_get_regs
0E22 AB82      2623            mov     r3,dpl
0E24 E581      2624            mov     a,sp
0E26 24F6      2625            add     a,#0xf6
0E28 F581      2626            mov     sp,a
0E2A D002      2627            pop     ar2
0E2C           2628   ;        bmm150.c:1178: if (rslt == BMM150_OK)
0E2C EB        2629            mov     a,r3
0E2D 7000      2630            jnz     L015004?
0E2F           2631   ;        bmm150.c:1181: reg_data = BMM150_SET_BITS_POS_0(reg_data, BMM150_PWR_CNTRL, pwrcntrl_bit);
0E2F 74FE      2632            mov     a,#0xFE
0E31 5518      2633            anl     a,_set_power_control_bit_reg_data_1_122
0E33 FC        2634            mov     r4,a
0E34 8A05      2635            mov     ar5,r2
0E36 530501    2636            anl     ar5,#0x01
0E39 E4        2637            clr     a
0E3A FE        2638            mov     r6,a
0E3B FF        2639            mov     r7,a
0E3C EC        2640            mov     a,r4
0E3D 4205      2641            orl     ar5,a
0E3F EF        2642            mov     a,r7
0E40 4206      2643            orl     ar6,a
0E42 8D18      2644            mov     _set_power_control_bit_reg_data_1_122,r5
0E44           2645   ;        bmm150.c:1182: rslt = bmm150_set_regs(BMM150_REG_POWER_CONTROL, &reg_data, 1, dev);
0E44 750018    2646            mov     _bmm150_set_regs_PARM_2,#_set_power_control_bit_reg_data_1_122
0E47 750100    2647            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
0E4A 750240    2648            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
0E4D 75B001    2649            mov     _bmm150_set_regs_PARM_3,#0x01
0E50 E4        2650            clr     a
0E51 F5B1      2651            mov     (_bmm150_set_regs_PARM_3 + 1),a
0E53 F5B2      2652            mov     (_bmm150_set_regs_PARM_3 + 2),a
0E55 F5B3      2653            mov     (_bmm150_set_regs_PARM_3 + 3),a
0E57 85B860    2654            mov     _bmm150_set_regs_PARM_4,_set_power_control_bit_PARM_2
0E5A 85B961    2655            mov     (_bmm150_set_regs_PARM_4 + 1),(_set_power_control_bit_PARM_2 + 1)
0E5D 85BA62    2656            mov     (_bmm150_set_regs_PARM_4 + 2),(_set_power_control_bit_PARM_2 + 2)
0E60 75824B    2657            mov     dpl,#0x4B
0E63 C002      2658            push    ar2
0E65 120000    2659            lcall   _bmm150_set_regs
0E68 AB82      2660            mov     r3,dpl
0E6A D002      2661            pop     ar2
0E6C           2662   ;        bmm150.c:1184: if (rslt == BMM150_OK)
0E6C EB        2663            mov     a,r3
0E6D 7000      2664            jnz     L015004?
0E6F           2665   ;        bmm150.c:1189: dev->pwr_cntrl_bit = pwrcntrl_bit;
0E6F 741E      2666            mov     a,#0x1E
0E71 25B8      2667            add     a,_set_power_control_bit_PARM_2
0E73 FC        2668            mov     r4,a
0E74 E4        2669            clr     a
0E75 35B9      2670            addc    a,(_set_power_control_bit_PARM_2 + 1)
0E77 FD        2671            mov     r5,a
0E78 AEBA      2672            mov     r6,(_set_power_control_bit_PARM_2 + 2)
0E7A 8C82      2673            mov     dpl,r4
0E7C 8D83      2674            mov     dph,r5
0E7E 8EF0      2675            mov     b,r6
0E80 EA        2676            mov     a,r2
0E81 120000    2677            lcall   __gptrput
0E84           2678   L015004?:
0E84           2679   ;        bmm150.c:1193: return rslt;
0E84 8B82      2680            mov     dpl,r3
0E86 22        2681            ret
0E87           2682   ;------------------------------------------------------------
0E87           2683   ;Allocation info for local variables in function 'read_trim_registers'
0E87           2684   ;------------------------------------------------------------
0E87           2685   ;dev                       Allocated with name '_read_trim_registers_dev_1_125'
0E87           2686   ;rslt                      Allocated with name '_read_trim_registers_rslt_1_126'
0E87           2687   ;trim_x1y1                 Allocated with name '_read_trim_registers_trim_x1y1_1_126'
0E87           2688   ;trim_xyz_data             Allocated with name '_read_trim_registers_trim_xyz_data_1_126'
0E87           2689   ;trim_xy1xy2               Allocated with name '_read_trim_registers_trim_xy1xy2_1_126'
0E87           2690   ;temp_msb                  Allocated with name '_read_trim_registers_temp_msb_1_126'
0E87           2691   ;sloc0                     Allocated with name '_read_trim_registers_sloc0_1_0'
0E87           2692   ;------------------------------------------------------------
0E87           2693   ;        bmm150.c:1200: __xdata static int8_t read_trim_registers(struct bmm150_dev *dev)
0E87           2694   ;        -----------------------------------------
0E87           2695   ;         function read_trim_registers
0E87           2696   ;        -----------------------------------------
0E87           2697   _read_trim_registers:
0E87 858268    2698            mov     _read_trim_registers_dev_1_125,dpl
0E8A 858369    2699            mov     (_read_trim_registers_dev_1_125 + 1),dph
0E8D 85F06A    2700            mov     (_read_trim_registers_dev_1_125 + 2),b
0E90           2701   ;        bmm150.c:1203: uint8_t trim_x1y1[2] = { 0 };
0E90 751800    2702            mov     _read_trim_registers_trim_x1y1_1_126,#0x00
0E93 751900    2703            mov     (_read_trim_registers_trim_x1y1_1_126 + 0x0001),#0x00
0E96           2704   ;        bmm150.c:1204: uint8_t trim_xyz_data[4] = { 0 };
0E96 757800    2705            mov     _read_trim_registers_trim_xyz_data_1_126,#0x00
0E99 757900    2706            mov     (_read_trim_registers_trim_xyz_data_1_126 + 0x0001),#0x00
0E9C 757A00    2707            mov     (_read_trim_registers_trim_xyz_data_1_126 + 0x0002),#0x00
0E9F 757B00    2708            mov     (_read_trim_registers_trim_xyz_data_1_126 + 0x0003),#0x00
0EA2           2709   ;        bmm150.c:1205: uint8_t trim_xy1xy2[10] = { 0 };
0EA2 75D800    2710            mov     _read_trim_registers_trim_xy1xy2_1_126,#0x00
0EA5 75D900    2711            mov     (_read_trim_registers_trim_xy1xy2_1_126 + 0x0001),#0x00
0EA8 75DA00    2712            mov     (_read_trim_registers_trim_xy1xy2_1_126 + 0x0002),#0x00
0EAB 75DB00    2713            mov     (_read_trim_registers_trim_xy1xy2_1_126 + 0x0003),#0x00
0EAE 75DC00    2714            mov     (_read_trim_registers_trim_xy1xy2_1_126 + 0x0004),#0x00
0EB1 75DD00    2715            mov     (_read_trim_registers_trim_xy1xy2_1_126 + 0x0005),#0x00
0EB4 75DE00    2716            mov     (_read_trim_registers_trim_xy1xy2_1_126 + 0x0006),#0x00
0EB7 75DF00    2717            mov     (_read_trim_registers_trim_xy1xy2_1_126 + 0x0007),#0x00
0EBA 75E000    2718            mov     (_read_trim_registers_trim_xy1xy2_1_126 + 0x0008),#0x00
0EBD 75E100    2719            mov     (_read_trim_registers_trim_xy1xy2_1_126 + 0x0009),#0x00
0EC0           2720   ;        bmm150.c:1209: rslt = bmm150_get_regs(BMM150_DIG_X1, trim_x1y1, 2, dev);
0EC0 C068      2721            push    _read_trim_registers_dev_1_125
0EC2 C069      2722            push    (_read_trim_registers_dev_1_125 + 1)
0EC4 C06A      2723            push    (_read_trim_registers_dev_1_125 + 2)
0EC6 7402      2724            mov     a,#0x02
0EC8 C0E0      2725            push    acc
0ECA E4        2726            clr     a
0ECB C0E0      2727            push    acc
0ECD C0E0      2728            push    acc
0ECF C0E0      2729            push    acc
0ED1 7418      2730            mov     a,#_read_trim_registers_trim_x1y1_1_126
0ED3 C0E0      2731            push    acc
0ED5 7454      2732            mov     a,#(_read_trim_registers_trim_x1y1_1_126 >> 8)
0ED7 C0E0      2733            push    acc
0ED9 7440      2734            mov     a,#0x40
0EDB C0E0      2735            push    acc
0EDD 75825D    2736            mov     dpl,#0x5D
0EE0 120000    2737            lcall   _bmm150_get_regs
0EE3 8582B8    2738            mov     _read_trim_registers_rslt_1_126,dpl
0EE6 E581      2739            mov     a,sp
0EE8 24F6      2740            add     a,#0xf6
0EEA F581      2741            mov     sp,a
0EEC           2742   ;        bmm150.c:1211: if (rslt == BMM150_OK)
0EEC E5B8      2743            mov     a,_read_trim_registers_rslt_1_126
0EEE 6000      2744            jz      L016012?
0EF0 020000    2745            ljmp    L016006?
0EF3           2746   L016012?:
0EF3           2747   ;        bmm150.c:1213: rslt = bmm150_get_regs(BMM150_DIG_Z4_LSB, trim_xyz_data, 4, dev);
0EF3 C068      2748            push    _read_trim_registers_dev_1_125
0EF5 C069      2749            push    (_read_trim_registers_dev_1_125 + 1)
0EF7 C06A      2750            push    (_read_trim_registers_dev_1_125 + 2)
0EF9 7404      2751            mov     a,#0x04
0EFB C0E0      2752            push    acc
0EFD E4        2753            clr     a
0EFE C0E0      2754            push    acc
0F00 C0E0      2755            push    acc
0F02 C0E0      2756            push    acc
0F04 7478      2757            mov     a,#_read_trim_registers_trim_xyz_data_1_126
0F06 C0E0      2758            push    acc
0F08 7454      2759            mov     a,#(_read_trim_registers_trim_xyz_data_1_126 >> 8)
0F0A C0E0      2760            push    acc
0F0C 7440      2761            mov     a,#0x40
0F0E C0E0      2762            push    acc
0F10 758262    2763            mov     dpl,#0x62
0F13 120000    2764            lcall   _bmm150_get_regs
0F16 8582B8    2765            mov     _read_trim_registers_rslt_1_126,dpl
0F19 E581      2766            mov     a,sp
0F1B 24F6      2767            add     a,#0xf6
0F1D F581      2768            mov     sp,a
0F1F           2769   ;        bmm150.c:1215: if (rslt == BMM150_OK)
0F1F E5B8      2770            mov     a,_read_trim_registers_rslt_1_126
0F21 6000      2771            jz      L016013?
0F23 020000    2772            ljmp    L016006?
0F26           2773   L016013?:
0F26           2774   ;        bmm150.c:1217: rslt = bmm150_get_regs(BMM150_DIG_Z2_LSB, trim_xy1xy2, 10, dev);
0F26 C068      2775            push    _read_trim_registers_dev_1_125
0F28 C069      2776            push    (_read_trim_registers_dev_1_125 + 1)
0F2A C06A      2777            push    (_read_trim_registers_dev_1_125 + 2)
0F2C 740A      2778            mov     a,#0x0A
0F2E C0E0      2779            push    acc
0F30 E4        2780            clr     a
0F31 C0E0      2781            push    acc
0F33 C0E0      2782            push    acc
0F35 C0E0      2783            push    acc
0F37 74D8      2784            mov     a,#_read_trim_registers_trim_xy1xy2_1_126
0F39 C0E0      2785            push    acc
0F3B 7454      2786            mov     a,#(_read_trim_registers_trim_xy1xy2_1_126 >> 8)
0F3D C0E0      2787            push    acc
0F3F 7440      2788            mov     a,#0x40
0F41 C0E0      2789            push    acc
0F43 758268    2790            mov     dpl,#0x68
0F46 120000    2791            lcall   _bmm150_get_regs
0F49 8582B8    2792            mov     _read_trim_registers_rslt_1_126,dpl
0F4C E581      2793            mov     a,sp
0F4E 24F6      2794            add     a,#0xf6
0F50 F581      2795            mov     sp,a
0F52           2796   ;        bmm150.c:1219: if (rslt == BMM150_OK)
0F52 E5B8      2797            mov     a,_read_trim_registers_rslt_1_126
0F54 6000      2798            jz      L016014?
0F56 020000    2799            ljmp    L016006?
0F59           2800   L016014?:
0F59           2801   ;        bmm150.c:1224: dev->trim_data.dig_x1 = (int8_t)trim_x1y1[0];
0F59 740C      2802            mov     a,#0x0C
0F5B 2568      2803            add     a,_read_trim_registers_dev_1_125
0F5D FE        2804            mov     r6,a
0F5E E4        2805            clr     a
0F5F 3569      2806            addc    a,(_read_trim_registers_dev_1_125 + 1)
0F61 FF        2807            mov     r7,a
0F62 AD6A      2808            mov     r5,(_read_trim_registers_dev_1_125 + 2)
0F64 AA18      2809            mov     r2,_read_trim_registers_trim_x1y1_1_126
0F66 8E82      2810            mov     dpl,r6
0F68 8F83      2811            mov     dph,r7
0F6A 8DF0      2812            mov     b,r5
0F6C EA        2813            mov     a,r2
0F6D 120000    2814            lcall   __gptrput
0F70           2815   ;        bmm150.c:1225: dev->trim_data.dig_y1 = (int8_t)trim_x1y1[1];
0F70 740C      2816            mov     a,#0x0C
0F72 2568      2817            add     a,_read_trim_registers_dev_1_125
0F74 FA        2818            mov     r2,a
0F75 E4        2819            clr     a
0F76 3569      2820            addc    a,(_read_trim_registers_dev_1_125 + 1)
0F78 FB        2821            mov     r3,a
0F79 AC6A      2822            mov     r4,(_read_trim_registers_dev_1_125 + 2)
0F7B 7401      2823            mov     a,#0x01
0F7D 2A        2824            add     a,r2
0F7E F588      2825            mov     _read_trim_registers_sloc0_1_0,a
0F80 E4        2826            clr     a
0F81 3B        2827            addc    a,r3
0F82 F589      2828            mov     (_read_trim_registers_sloc0_1_0 + 1),a
0F84 8C8A      2829            mov     (_read_trim_registers_sloc0_1_0 + 2),r4
0F86 AD19      2830            mov     r5,(_read_trim_registers_trim_x1y1_1_126 + 0x0001)
0F88 858882    2831            mov     dpl,_read_trim_registers_sloc0_1_0
0F8B 858983    2832            mov     dph,(_read_trim_registers_sloc0_1_0 + 1)
0F8E 858AF0    2833            mov     b,(_read_trim_registers_sloc0_1_0 + 2)
0F91 ED        2834            mov     a,r5
0F92 120000    2835            lcall   __gptrput
0F95           2836   ;        bmm150.c:1226: dev->trim_data.dig_x2 = (int8_t)trim_xyz_data[2];
0F95 7402      2837            mov     a,#0x02
0F97 2A        2838            add     a,r2
0F98 F588      2839            mov     _read_trim_registers_sloc0_1_0,a
0F9A E4        2840            clr     a
0F9B 3B        2841            addc    a,r3
0F9C F589      2842            mov     (_read_trim_registers_sloc0_1_0 + 1),a
0F9E 8C8A      2843            mov     (_read_trim_registers_sloc0_1_0 + 2),r4
0FA0 AD7A      2844            mov     r5,(_read_trim_registers_trim_xyz_data_1_126 + 0x0002)
0FA2 858882    2845            mov     dpl,_read_trim_registers_sloc0_1_0
0FA5 858983    2846            mov     dph,(_read_trim_registers_sloc0_1_0 + 1)
0FA8 858AF0    2847            mov     b,(_read_trim_registers_sloc0_1_0 + 2)
0FAB ED        2848            mov     a,r5
0FAC 120000    2849            lcall   __gptrput
0FAF           2850   ;        bmm150.c:1227: dev->trim_data.dig_y2 = (int8_t)trim_xyz_data[3];
0FAF 7403      2851            mov     a,#0x03
0FB1 2A        2852            add     a,r2
0FB2 F588      2853            mov     _read_trim_registers_sloc0_1_0,a
0FB4 E4        2854            clr     a
0FB5 3B        2855            addc    a,r3
0FB6 F589      2856            mov     (_read_trim_registers_sloc0_1_0 + 1),a
0FB8 8C8A      2857            mov     (_read_trim_registers_sloc0_1_0 + 2),r4
0FBA AD7B      2858            mov     r5,(_read_trim_registers_trim_xyz_data_1_126 + 0x0003)
0FBC 858882    2859            mov     dpl,_read_trim_registers_sloc0_1_0
0FBF 858983    2860            mov     dph,(_read_trim_registers_sloc0_1_0 + 1)
0FC2 858AF0    2861            mov     b,(_read_trim_registers_sloc0_1_0 + 2)
0FC5 ED        2862            mov     a,r5
0FC6 120000    2863            lcall   __gptrput
0FC9           2864   ;        bmm150.c:1228: temp_msb = ((uint16_t)trim_xy1xy2[3]) << 8;
0FC9 ADDB      2865            mov     r5,(_read_trim_registers_trim_xy1xy2_1_126 + 0x0003)
0FCB 8D39      2866            mov     (_read_trim_registers_temp_msb_1_126 + 1),r5
0FCD 753800    2867            mov     _read_trim_registers_temp_msb_1_126,#0x00
0FD0           2868   ;        bmm150.c:1229: dev->trim_data.dig_z1 = (uint16_t)(temp_msb | trim_xy1xy2[2]);
0FD0 7404      2869            mov     a,#0x04
0FD2 2A        2870            add     a,r2
0FD3 F588      2871            mov     _read_trim_registers_sloc0_1_0,a
0FD5 E4        2872            clr     a
0FD6 3B        2873            addc    a,r3
0FD7 F589      2874            mov     (_read_trim_registers_sloc0_1_0 + 1),a
0FD9 8C8A      2875            mov     (_read_trim_registers_sloc0_1_0 + 2),r4
0FDB ADDA      2876            mov     r5,(_read_trim_registers_trim_xy1xy2_1_126 + 0x0002)
0FDD 7E00      2877            mov     r6,#0x00
0FDF E538      2878            mov     a,_read_trim_registers_temp_msb_1_126
0FE1 4205      2879            orl     ar5,a
0FE3 E539      2880            mov     a,(_read_trim_registers_temp_msb_1_126 + 1)
0FE5 4206      2881            orl     ar6,a
0FE7 858882    2882            mov     dpl,_read_trim_registers_sloc0_1_0
0FEA 858983    2883            mov     dph,(_read_trim_registers_sloc0_1_0 + 1)
0FED 858AF0    2884            mov     b,(_read_trim_registers_sloc0_1_0 + 2)
0FF0 ED        2885            mov     a,r5
0FF1 120000    2886            lcall   __gptrput
0FF4 A3        2887            inc     dptr
0FF5 EE        2888            mov     a,r6
0FF6 120000    2889            lcall   __gptrput
0FF9           2890   ;        bmm150.c:1230: temp_msb = ((uint16_t)trim_xy1xy2[1]) << 8;
0FF9 ADD9      2891            mov     r5,(_read_trim_registers_trim_xy1xy2_1_126 + 0x0001)
0FFB 8D39      2892            mov     (_read_trim_registers_temp_msb_1_126 + 1),r5
0FFD 753800    2893            mov     _read_trim_registers_temp_msb_1_126,#0x00
1000           2894   ;        bmm150.c:1231: dev->trim_data.dig_z2 = (int16_t)(temp_msb | trim_xy1xy2[0]);
1000 7406      2895            mov     a,#0x06
1002 2A        2896            add     a,r2
1003 F588      2897            mov     _read_trim_registers_sloc0_1_0,a
1005 E4        2898            clr     a
1006 3B        2899            addc    a,r3
1007 F589      2900            mov     (_read_trim_registers_sloc0_1_0 + 1),a
1009 8C8A      2901            mov     (_read_trim_registers_sloc0_1_0 + 2),r4
100B ADD8      2902            mov     r5,_read_trim_registers_trim_xy1xy2_1_126
100D 7E00      2903            mov     r6,#0x00
100F E538      2904            mov     a,_read_trim_registers_temp_msb_1_126
1011 4205      2905            orl     ar5,a
1013 E539      2906            mov     a,(_read_trim_registers_temp_msb_1_126 + 1)
1015 4206      2907            orl     ar6,a
1017 858882    2908            mov     dpl,_read_trim_registers_sloc0_1_0
101A 858983    2909            mov     dph,(_read_trim_registers_sloc0_1_0 + 1)
101D 858AF0    2910            mov     b,(_read_trim_registers_sloc0_1_0 + 2)
1020 ED        2911            mov     a,r5
1021 120000    2912            lcall   __gptrput
1024 A3        2913            inc     dptr
1025 EE        2914            mov     a,r6
1026 120000    2915            lcall   __gptrput
1029           2916   ;        bmm150.c:1232: temp_msb = ((uint16_t)trim_xy1xy2[7]) << 8;
1029 ADDF      2917            mov     r5,(_read_trim_registers_trim_xy1xy2_1_126 + 0x0007)
102B 8D39      2918            mov     (_read_trim_registers_temp_msb_1_126 + 1),r5
102D 753800    2919            mov     _read_trim_registers_temp_msb_1_126,#0x00
1030           2920   ;        bmm150.c:1233: dev->trim_data.dig_z3 = (int16_t)(temp_msb | trim_xy1xy2[6]);
1030 7408      2921            mov     a,#0x08
1032 2A        2922            add     a,r2
1033 F588      2923            mov     _read_trim_registers_sloc0_1_0,a
1035 E4        2924            clr     a
1036 3B        2925            addc    a,r3
1037 F589      2926            mov     (_read_trim_registers_sloc0_1_0 + 1),a
1039 8C8A      2927            mov     (_read_trim_registers_sloc0_1_0 + 2),r4
103B ADDE      2928            mov     r5,(_read_trim_registers_trim_xy1xy2_1_126 + 0x0006)
103D 7E00      2929            mov     r6,#0x00
103F E538      2930            mov     a,_read_trim_registers_temp_msb_1_126
1041 4205      2931            orl     ar5,a
1043 E539      2932            mov     a,(_read_trim_registers_temp_msb_1_126 + 1)
1045 4206      2933            orl     ar6,a
1047 858882    2934            mov     dpl,_read_trim_registers_sloc0_1_0
104A 858983    2935            mov     dph,(_read_trim_registers_sloc0_1_0 + 1)
104D 858AF0    2936            mov     b,(_read_trim_registers_sloc0_1_0 + 2)
1050 ED        2937            mov     a,r5
1051 120000    2938            lcall   __gptrput
1054 A3        2939            inc     dptr
1055 EE        2940            mov     a,r6
1056 120000    2941            lcall   __gptrput
1059           2942   ;        bmm150.c:1234: temp_msb = ((uint16_t)trim_xyz_data[1]) << 8;
1059 AD79      2943            mov     r5,(_read_trim_registers_trim_xyz_data_1_126 + 0x0001)
105B 8D39      2944            mov     (_read_trim_registers_temp_msb_1_126 + 1),r5
105D 753800    2945            mov     _read_trim_registers_temp_msb_1_126,#0x00
1060           2946   ;        bmm150.c:1235: dev->trim_data.dig_z4 = (int16_t)(temp_msb | trim_xyz_data[0]);
1060 740A      2947            mov     a,#0x0A
1062 2A        2948            add     a,r2
1063 F588      2949            mov     _read_trim_registers_sloc0_1_0,a
1065 E4        2950            clr     a
1066 3B        2951            addc    a,r3
1067 F589      2952            mov     (_read_trim_registers_sloc0_1_0 + 1),a
1069 8C8A      2953            mov     (_read_trim_registers_sloc0_1_0 + 2),r4
106B AD78      2954            mov     r5,_read_trim_registers_trim_xyz_data_1_126
106D 7E00      2955            mov     r6,#0x00
106F E538      2956            mov     a,_read_trim_registers_temp_msb_1_126
1071 4205      2957            orl     ar5,a
1073 E539      2958            mov     a,(_read_trim_registers_temp_msb_1_126 + 1)
1075 4206      2959            orl     ar6,a
1077 858882    2960            mov     dpl,_read_trim_registers_sloc0_1_0
107A 858983    2961            mov     dph,(_read_trim_registers_sloc0_1_0 + 1)
107D 858AF0    2962            mov     b,(_read_trim_registers_sloc0_1_0 + 2)
1080 ED        2963            mov     a,r5
1081 120000    2964            lcall   __gptrput
1084 A3        2965            inc     dptr
1085 EE        2966            mov     a,r6
1086 120000    2967            lcall   __gptrput
1089           2968   ;        bmm150.c:1236: dev->trim_data.dig_xy1 = trim_xy1xy2[9];
1089 740C      2969            mov     a,#0x0C
108B 2A        2970            add     a,r2
108C F588      2971            mov     _read_trim_registers_sloc0_1_0,a
108E E4        2972            clr     a
108F 3B        2973            addc    a,r3
1090 F589      2974            mov     (_read_trim_registers_sloc0_1_0 + 1),a
1092 8C8A      2975            mov     (_read_trim_registers_sloc0_1_0 + 2),r4
1094 ADE1      2976            mov     r5,(_read_trim_registers_trim_xy1xy2_1_126 + 0x0009)
1096 858882    2977            mov     dpl,_read_trim_registers_sloc0_1_0
1099 858983    2978            mov     dph,(_read_trim_registers_sloc0_1_0 + 1)
109C 858AF0    2979            mov     b,(_read_trim_registers_sloc0_1_0 + 2)
109F ED        2980            mov     a,r5
10A0 120000    2981            lcall   __gptrput
10A3           2982   ;        bmm150.c:1237: dev->trim_data.dig_xy2 = (int8_t)trim_xy1xy2[8];
10A3 740D      2983            mov     a,#0x0D
10A5 2A        2984            add     a,r2
10A6 F588      2985            mov     _read_trim_registers_sloc0_1_0,a
10A8 E4        2986            clr     a
10A9 3B        2987            addc    a,r3
10AA F589      2988            mov     (_read_trim_registers_sloc0_1_0 + 1),a
10AC 8C8A      2989            mov     (_read_trim_registers_sloc0_1_0 + 2),r4
10AE ADE0      2990            mov     r5,(_read_trim_registers_trim_xy1xy2_1_126 + 0x0008)
10B0 858882    2991            mov     dpl,_read_trim_registers_sloc0_1_0
10B3 858983    2992            mov     dph,(_read_trim_registers_sloc0_1_0 + 1)
10B6 858AF0    2993            mov     b,(_read_trim_registers_sloc0_1_0 + 2)
10B9 ED        2994            mov     a,r5
10BA 120000    2995            lcall   __gptrput
10BD           2996   ;        bmm150.c:1238: temp_msb = ((uint16_t)(trim_xy1xy2[5] & 0x7F)) << 8;
10BD 747F      2997            mov     a,#0x7F
10BF 55DD      2998            anl     a,(_read_trim_registers_trim_xy1xy2_1_126 + 0x0005)
10C1 FD        2999            mov     r5,a
10C2 8D39      3000            mov     (_read_trim_registers_temp_msb_1_126 + 1),r5
10C4 753800    3001            mov     _read_trim_registers_temp_msb_1_126,#0x00
10C7           3002   ;        bmm150.c:1239: dev->trim_data.dig_xyz1 = (uint16_t)(temp_msb | trim_xy1xy2[4]);
10C7 740E      3003            mov     a,#0x0E
10C9 2A        3004            add     a,r2
10CA FA        3005            mov     r2,a
10CB E4        3006            clr     a
10CC 3B        3007            addc    a,r3
10CD FB        3008            mov     r3,a
10CE ADDC      3009            mov     r5,(_read_trim_registers_trim_xy1xy2_1_126 + 0x0004)
10D0 7E00      3010            mov     r6,#0x00
10D2 E538      3011            mov     a,_read_trim_registers_temp_msb_1_126
10D4 4205      3012            orl     ar5,a
10D6 E539      3013            mov     a,(_read_trim_registers_temp_msb_1_126 + 1)
10D8 4206      3014            orl     ar6,a
10DA 8A82      3015            mov     dpl,r2
10DC 8B83      3016            mov     dph,r3
10DE 8CF0      3017            mov     b,r4
10E0 ED        3018            mov     a,r5
10E1 120000    3019            lcall   __gptrput
10E4 A3        3020            inc     dptr
10E5 EE        3021            mov     a,r6
10E6 120000    3022            lcall   __gptrput
10E9           3023   L016006?:
10E9           3024   ;        bmm150.c:1244: return rslt;
10E9 85B882    3025            mov     dpl,_read_trim_registers_rslt_1_126
10EC 22        3026            ret
10ED           3027   ;------------------------------------------------------------
10ED           3028   ;Allocation info for local variables in function 'write_op_mode'
10ED           3029   ;------------------------------------------------------------
10ED           3030   ;dev                       Allocated with name '_write_op_mode_PARM_2'
10ED           3031   ;op_mode                   Allocated to registers r2 
10ED           3032   ;rslt                      Allocated to registers r3 
10ED           3033   ;reg_data                  Allocated with name '_write_op_mode_reg_data_1_131'
10ED           3034   ;------------------------------------------------------------
10ED           3035   ;        bmm150.c:1251: __xdata static int8_t write_op_mode(uint8_t op_mode, struct bmm150_dev *dev)
10ED           3036   ;        -----------------------------------------
10ED           3037   ;         function write_op_mode
10ED           3038   ;        -----------------------------------------
10ED           3039   _write_op_mode:
10ED AA82      3040            mov     r2,dpl
10EF           3041   ;        bmm150.c:1257: rslt = bmm150_get_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
10EF C002      3042            push    ar2
10F1 C0D8      3043            push    _write_op_mode_PARM_2
10F3 C0D9      3044            push    (_write_op_mode_PARM_2 + 1)
10F5 C0DA      3045            push    (_write_op_mode_PARM_2 + 2)
10F7 7401      3046            mov     a,#0x01
10F9 C0E0      3047            push    acc
10FB E4        3048            clr     a
10FC C0E0      3049            push    acc
10FE C0E0      3050            push    acc
1100 C0E0      3051            push    acc
1102 7428      3052            mov     a,#_write_op_mode_reg_data_1_131
1104 C0E0      3053            push    acc
1106 7456      3054            mov     a,#(_write_op_mode_reg_data_1_131 >> 8)
1108 C0E0      3055            push    acc
110A 7440      3056            mov     a,#0x40
110C C0E0      3057            push    acc
110E 75824C    3058            mov     dpl,#0x4C
1111 120000    3059            lcall   _bmm150_get_regs
1114 AB82      3060            mov     r3,dpl
1116 E581      3061            mov     a,sp
1118 24F6      3062            add     a,#0xf6
111A F581      3063            mov     sp,a
111C D002      3064            pop     ar2
111E           3065   ;        bmm150.c:1259: if (rslt == BMM150_OK)
111E EB        3066            mov     a,r3
111F 7000      3067            jnz     L017002?
1121           3068   ;        bmm150.c:1262: reg_data = BMM150_SET_BITS(reg_data, BMM150_OP_MODE, op_mode);
1121 74F9      3069            mov     a,#0xF9
1123 5528      3070            anl     a,_write_op_mode_reg_data_1_131
1125 FC        3071            mov     r4,a
1126 E4        3072            clr     a
1127 CA        3073            xch     a,r2
1128 25E0      3074            add     a,acc
112A CA        3075            xch     a,r2
112B 33        3076            rlc     a
112C 530206    3077            anl     ar2,#0x06
112F E4        3078            clr     a
1130 FD        3079            mov     r5,a
1131 FE        3080            mov     r6,a
1132 EC        3081            mov     a,r4
1133 4202      3082            orl     ar2,a
1135 EE        3083            mov     a,r6
1136 4205      3084            orl     ar5,a
1138 8A28      3085            mov     _write_op_mode_reg_data_1_131,r2
113A           3086   ;        bmm150.c:1263: rslt = bmm150_set_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
113A 750028    3087            mov     _bmm150_set_regs_PARM_2,#_write_op_mode_reg_data_1_131
113D 750100    3088            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
1140 750240    3089            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
1143 75B001    3090            mov     _bmm150_set_regs_PARM_3,#0x01
1146 E4        3091            clr     a
1147 F5B1      3092            mov     (_bmm150_set_regs_PARM_3 + 1),a
1149 F5B2      3093            mov     (_bmm150_set_regs_PARM_3 + 2),a
114B F5B3      3094            mov     (_bmm150_set_regs_PARM_3 + 3),a
114D 85D860    3095            mov     _bmm150_set_regs_PARM_4,_write_op_mode_PARM_2
1150 85D961    3096            mov     (_bmm150_set_regs_PARM_4 + 1),(_write_op_mode_PARM_2 + 1)
1153 85DA62    3097            mov     (_bmm150_set_regs_PARM_4 + 2),(_write_op_mode_PARM_2 + 2)
1156 75824C    3098            mov     dpl,#0x4C
1159 120000    3099            lcall   _bmm150_set_regs
115C AB82      3100            mov     r3,dpl
115E           3101   L017002?:
115E           3102   ;        bmm150.c:1266: return rslt;
115E 8B82      3103            mov     dpl,r3
1160 22        3104            ret
1161           3105   ;------------------------------------------------------------
1161           3106   ;Allocation info for local variables in function 'suspend_to_sleep_mode'
1161           3107   ;------------------------------------------------------------
1161           3108   ;dev                       Allocated to registers r2 r3 r4 
1161           3109   ;rslt                      Allocated to registers r5 
1161           3110   ;------------------------------------------------------------
1161           3111   ;        bmm150.c:1273: __xdata static int8_t suspend_to_sleep_mode(struct bmm150_dev *dev)
1161           3112   ;        -----------------------------------------
1161           3113   ;         function suspend_to_sleep_mode
1161           3114   ;        -----------------------------------------
1161           3115   _suspend_to_sleep_mode:
1161           3116   ;        bmm150.c:1278: rslt = null_ptr_check(dev);
1161 AA82      3117            mov     r2,dpl
1163 AB83      3118            mov     r3,dph
1165 ACF0      3119            mov     r4,b
1167 C002      3120            push    ar2
1169 C003      3121            push    ar3
116B C004      3122            push    ar4
116D 120000    3123            lcall   _null_ptr_check
1170 AD82      3124            mov     r5,dpl
1172 D004      3125            pop     ar4
1174 D003      3126            pop     ar3
1176 D002      3127            pop     ar2
1178           3128   ;        bmm150.c:1281: if (rslt == BMM150_OK)
1178 ED        3129            mov     a,r5
1179 6000      3130            jz      L018009?
117B 020000    3131            ljmp    L018004?
117E           3132   L018009?:
117E           3133   ;        bmm150.c:1283: if (dev->pwr_cntrl_bit == BMM150_POWER_CNTRL_DISABLE)
117E 741E      3134            mov     a,#0x1E
1180 2A        3135            add     a,r2
1181 FE        3136            mov     r6,a
1182 E4        3137            clr     a
1183 3B        3138            addc    a,r3
1184 FF        3139            mov     r7,a
1185 8C00      3140            mov     ar0,r4
1187 8E82      3141            mov     dpl,r6
1189 8F83      3142            mov     dph,r7
118B 88F0      3143            mov     b,r0
118D 120000    3144            lcall   __gptrget
1190 6000      3145            jz      L018010?
1192 020000    3146            ljmp    L018004?
1195           3147   L018010?:
1195           3148   ;        bmm150.c:1285: rslt = set_power_control_bit(BMM150_POWER_CNTRL_ENABLE, dev);
1195 8AB8      3149            mov     _set_power_control_bit_PARM_2,r2
1197 8BB9      3150            mov     (_set_power_control_bit_PARM_2 + 1),r3
1199 8CBA      3151            mov     (_set_power_control_bit_PARM_2 + 2),r4
119B 758201    3152            mov     dpl,#0x01
119E C002      3153            push    ar2
11A0 C003      3154            push    ar3
11A2 C004      3155            push    ar4
11A4 120000    3156            lcall   _set_power_control_bit
11A7 AD82      3157            mov     r5,dpl
11A9 D004      3158            pop     ar4
11AB D003      3159            pop     ar3
11AD D002      3160            pop     ar2
11AF           3161   ;        bmm150.c:1288: dev->delay_us(BMM150_START_UP_TIME, dev->intf_ptr);
11AF 740A      3162            mov     a,#0x0A
11B1 2A        3163            add     a,r2
11B2 FE        3164            mov     r6,a
11B3 E4        3165            clr     a
11B4 3B        3166            addc    a,r3
11B5 FF        3167            mov     r7,a
11B6 8C00      3168            mov     ar0,r4
11B8 8E82      3169            mov     dpl,r6
11BA 8F83      3170            mov     dph,r7
11BC 88F0      3171            mov     b,r0
11BE 120000    3172            lcall   __gptrget
11C1 FE        3173            mov     r6,a
11C2 A3        3174            inc     dptr
11C3 120000    3175            lcall   __gptrget
11C6 FF        3176            mov     r7,a
11C7 7402      3177            mov     a,#0x02
11C9 2A        3178            add     a,r2
11CA FA        3179            mov     r2,a
11CB E4        3180            clr     a
11CC 3B        3181            addc    a,r3
11CD FB        3182            mov     r3,a
11CE 8A82      3183            mov     dpl,r2
11D0 8B83      3184            mov     dph,r3
11D2 8CF0      3185            mov     b,r4
11D4 120000    3186            lcall   __gptrget
11D7 FA        3187            mov     r2,a
11D8 A3        3188            inc     dptr
11D9 120000    3189            lcall   __gptrget
11DC FB        3190            mov     r3,a
11DD A3        3191            inc     dptr
11DE 120000    3192            lcall   __gptrget
11E1 FC        3193            mov     r4,a
11E2 C005      3194            push    ar5
11E4 C006      3195            push    ar6
11E6 C007      3196            push    ar7
11E8 C002      3197            push    ar2
11EA C003      3198            push    ar3
11EC C004      3199            push    ar4
11EE 74A8      3200            mov     a,#L018011?
11F0 C0E0      3201            push    acc
11F2 7487      3202            mov     a,#(L018011? >> 8)
11F4 C0E0      3203            push    acc
11F6 C006      3204            push    ar6
11F8 C007      3205            push    ar7
11FA 900BB8    3206            mov     dptr,#0x0BB8
11FD E4        3207            clr     a
11FE F5F0      3208            mov     b,a
1200 22        3209            ret
1201           3210   L018011?:
1201 1581      3211            dec     sp
1203 1581      3212            dec     sp
1205 1581      3213            dec     sp
1207 D007      3214            pop     ar7
1209 D006      3215            pop     ar6
120B D005      3216            pop     ar5
120D           3217   L018004?:
120D           3218   ;        bmm150.c:1292: return rslt;
120D 8D82      3219            mov     dpl,r5
120F 22        3220            ret
1210           3221   ;------------------------------------------------------------
1210           3222   ;Allocation info for local variables in function 'set_xy_rep'
1210           3223   ;------------------------------------------------------------
1210           3224   ;dev                       Allocated with name '_set_xy_rep_PARM_2'
1210           3225   ;settings                  Allocated to registers r2 r3 r4 
1210           3226   ;rslt                      Allocated to registers 
1210           3227   ;rep_xy                    Allocated with name '_set_xy_rep_rep_xy_1_138'
1210           3228   ;------------------------------------------------------------
1210           3229   ;        bmm150.c:1298: __xdata static int8_t set_xy_rep(const struct bmm150_settings *settings, struct bmm150_dev *dev)
1210           3230   ;        -----------------------------------------
1210           3231   ;         function set_xy_rep
1210           3232   ;        -----------------------------------------
1210           3233   _set_xy_rep:
1210 AA82      3234            mov     r2,dpl
1212 AB83      3235            mov     r3,dph
1214 ACF0      3236            mov     r4,b
1216           3237   ;        bmm150.c:1304: rep_xy = settings->xy_rep;
1216 7403      3238            mov     a,#0x03
1218 2A        3239            add     a,r2
1219 FA        3240            mov     r2,a
121A E4        3241            clr     a
121B 3B        3242            addc    a,r3
121C FB        3243            mov     r3,a
121D 8A82      3244            mov     dpl,r2
121F 8B83      3245            mov     dph,r3
1221 8CF0      3246            mov     b,r4
1223 120000    3247            lcall   __gptrget
1226 F5C8      3248            mov     _set_xy_rep_rep_xy_1_138,a
1228           3249   ;        bmm150.c:1305: rslt = bmm150_set_regs(BMM150_REG_REP_XY, &rep_xy, 1, dev);
1228 7500C8    3250            mov     _bmm150_set_regs_PARM_2,#_set_xy_rep_rep_xy_1_138
122B 750100    3251            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
122E 750240    3252            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
1231 75B001    3253            mov     _bmm150_set_regs_PARM_3,#0x01
1234 E4        3254            clr     a
1235 F5B1      3255            mov     (_bmm150_set_regs_PARM_3 + 1),a
1237 F5B2      3256            mov     (_bmm150_set_regs_PARM_3 + 2),a
1239 F5B3      3257            mov     (_bmm150_set_regs_PARM_3 + 3),a
123B 857860    3258            mov     _bmm150_set_regs_PARM_4,_set_xy_rep_PARM_2
123E 857961    3259            mov     (_bmm150_set_regs_PARM_4 + 1),(_set_xy_rep_PARM_2 + 1)
1241 857A62    3260            mov     (_bmm150_set_regs_PARM_4 + 2),(_set_xy_rep_PARM_2 + 2)
1244 758251    3261            mov     dpl,#0x51
1247           3262   ;        bmm150.c:1307: return rslt;
1247 020000    3263            ljmp    _bmm150_set_regs
124A           3264   ;------------------------------------------------------------
124A           3265   ;Allocation info for local variables in function 'set_z_rep'
124A           3266   ;------------------------------------------------------------
124A           3267   ;dev                       Allocated with name '_set_z_rep_PARM_2'
124A           3268   ;settings                  Allocated to registers r2 r3 r4 
124A           3269   ;rslt                      Allocated to registers 
124A           3270   ;rep_z                     Allocated with name '_set_z_rep_rep_z_1_140'
124A           3271   ;------------------------------------------------------------
124A           3272   ;        bmm150.c:1313: __xdata static int8_t set_z_rep(const struct bmm150_settings *settings, struct bmm150_dev *dev)
124A           3273   ;        -----------------------------------------
124A           3274   ;         function set_z_rep
124A           3275   ;        -----------------------------------------
124A           3276   _set_z_rep:
124A AA82      3277            mov     r2,dpl
124C AB83      3278            mov     r3,dph
124E ACF0      3279            mov     r4,b
1250           3280   ;        bmm150.c:1319: rep_z = settings->z_rep;
1250 7404      3281            mov     a,#0x04
1252 2A        3282            add     a,r2
1253 FA        3283            mov     r2,a
1254 E4        3284            clr     a
1255 3B        3285            addc    a,r3
1256 FB        3286            mov     r3,a
1257 8A82      3287            mov     dpl,r2
1259 8B83      3288            mov     dph,r3
125B 8CF0      3289            mov     b,r4
125D 120000    3290            lcall   __gptrget
1260 F568      3291            mov     _set_z_rep_rep_z_1_140,a
1262           3292   ;        bmm150.c:1320: rslt = bmm150_set_regs(BMM150_REG_REP_Z, &rep_z, 1, dev);
1262 750068    3293            mov     _bmm150_set_regs_PARM_2,#_set_z_rep_rep_z_1_140
1265 750100    3294            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
1268 750240    3295            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
126B 75B001    3296            mov     _bmm150_set_regs_PARM_3,#0x01
126E E4        3297            clr     a
126F F5B1      3298            mov     (_bmm150_set_regs_PARM_3 + 1),a
1271 F5B2      3299            mov     (_bmm150_set_regs_PARM_3 + 2),a
1273 F5B3      3300            mov     (_bmm150_set_regs_PARM_3 + 3),a
1275 851860    3301            mov     _bmm150_set_regs_PARM_4,_set_z_rep_PARM_2
1278 851961    3302            mov     (_bmm150_set_regs_PARM_4 + 1),(_set_z_rep_PARM_2 + 1)
127B 851A62    3303            mov     (_bmm150_set_regs_PARM_4 + 2),(_set_z_rep_PARM_2 + 2)
127E 758252    3304            mov     dpl,#0x52
1281           3305   ;        bmm150.c:1322: return rslt;
1281 020000    3306            ljmp    _bmm150_set_regs
1284           3307   ;------------------------------------------------------------
1284           3308   ;Allocation info for local variables in function 'set_odr'
1284           3309   ;------------------------------------------------------------
1284           3310   ;dev                       Allocated with name '_set_odr_PARM_2'
1284           3311   ;settings                  Allocated to registers r2 r3 r4 
1284           3312   ;rslt                      Allocated to registers r5 
1284           3313   ;reg_data                  Allocated with name '_set_odr_reg_data_1_142'
1284           3314   ;------------------------------------------------------------
1284           3315   ;        bmm150.c:1328: __xdata static int8_t set_odr(const struct bmm150_settings *settings, struct bmm150_dev *dev)
1284           3316   ;        -----------------------------------------
1284           3317   ;         function set_odr
1284           3318   ;        -----------------------------------------
1284           3319   _set_odr:
1284 AA82      3320            mov     r2,dpl
1286 AB83      3321            mov     r3,dph
1288 ACF0      3322            mov     r4,b
128A           3323   ;        bmm150.c:1334: rslt = bmm150_get_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
128A C002      3324            push    ar2
128C C003      3325            push    ar3
128E C004      3326            push    ar4
1290 C0A8      3327            push    _set_odr_PARM_2
1292 C0A9      3328            push    (_set_odr_PARM_2 + 1)
1294 C0AA      3329            push    (_set_odr_PARM_2 + 2)
1296 7401      3330            mov     a,#0x01
1298 C0E0      3331            push    acc
129A E4        3332            clr     a
129B C0E0      3333            push    acc
129D C0E0      3334            push    acc
129F C0E0      3335            push    acc
12A1 74F8      3336            mov     a,#_set_odr_reg_data_1_142
12A3 C0E0      3337            push    acc
12A5 7457      3338            mov     a,#(_set_odr_reg_data_1_142 >> 8)
12A7 C0E0      3339            push    acc
12A9 7440      3340            mov     a,#0x40
12AB C0E0      3341            push    acc
12AD 75824C    3342            mov     dpl,#0x4C
12B0 120000    3343            lcall   _bmm150_get_regs
12B3 AD82      3344            mov     r5,dpl
12B5 E581      3345            mov     a,sp
12B7 24F6      3346            add     a,#0xf6
12B9 F581      3347            mov     sp,a
12BB D004      3348            pop     ar4
12BD D003      3349            pop     ar3
12BF D002      3350            pop     ar2
12C1           3351   ;        bmm150.c:1336: if (rslt == BMM150_OK)
12C1 ED        3352            mov     a,r5
12C2 7000      3353            jnz     L021002?
12C4           3354   ;        bmm150.c:1339: reg_data = BMM150_SET_BITS(reg_data, BMM150_ODR, settings->data_rate);
12C4 74C7      3355            mov     a,#0xC7
12C6 55F8      3356            anl     a,_set_odr_reg_data_1_142
12C8 FE        3357            mov     r6,a
12C9 7402      3358            mov     a,#0x02
12CB 2A        3359            add     a,r2
12CC FA        3360            mov     r2,a
12CD E4        3361            clr     a
12CE 3B        3362            addc    a,r3
12CF FB        3363            mov     r3,a
12D0 8A82      3364            mov     dpl,r2
12D2 8B83      3365            mov     dph,r3
12D4 8CF0      3366            mov     b,r4
12D6 120000    3367            lcall   __gptrget
12D9 FA        3368            mov     r2,a
12DA E4        3369            clr     a
12DB C4        3370            swap    a
12DC 03        3371            rr      a
12DD 54F8      3372            anl     a,#0xf8
12DF CA        3373            xch     a,r2
12E0 C4        3374            swap    a
12E1 03        3375            rr      a
12E2 CA        3376            xch     a,r2
12E3 6A        3377            xrl     a,r2
12E4 CA        3378            xch     a,r2
12E5 54F8      3379            anl     a,#0xf8
12E7 CA        3380            xch     a,r2
12E8 6A        3381            xrl     a,r2
12E9 530238    3382            anl     ar2,#0x38
12EC E4        3383            clr     a
12ED FB        3384            mov     r3,a
12EE FC        3385            mov     r4,a
12EF EE        3386            mov     a,r6
12F0 4202      3387            orl     ar2,a
12F2 EC        3388            mov     a,r4
12F3 4203      3389            orl     ar3,a
12F5 8AF8      3390            mov     _set_odr_reg_data_1_142,r2
12F7           3391   ;        bmm150.c:1340: rslt = bmm150_set_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
12F7 7500F8    3392            mov     _bmm150_set_regs_PARM_2,#_set_odr_reg_data_1_142
12FA 750100    3393            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
12FD 750240    3394            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
1300 75B001    3395            mov     _bmm150_set_regs_PARM_3,#0x01
1303 E4        3396            clr     a
1304 F5B1      3397            mov     (_bmm150_set_regs_PARM_3 + 1),a
1306 F5B2      3398            mov     (_bmm150_set_regs_PARM_3 + 2),a
1308 F5B3      3399            mov     (_bmm150_set_regs_PARM_3 + 3),a
130A 85A860    3400            mov     _bmm150_set_regs_PARM_4,_set_odr_PARM_2
130D 85A961    3401            mov     (_bmm150_set_regs_PARM_4 + 1),(_set_odr_PARM_2 + 1)
1310 85AA62    3402            mov     (_bmm150_set_regs_PARM_4 + 2),(_set_odr_PARM_2 + 2)
1313 75824C    3403            mov     dpl,#0x4C
1316 120000    3404            lcall   _bmm150_set_regs
1319 AD82      3405            mov     r5,dpl
131B           3406   L021002?:
131B           3407   ;        bmm150.c:1343: return rslt;
131B 8D82      3408            mov     dpl,r5
131D 22        3409            ret
131E           3410   ;------------------------------------------------------------
131E           3411   ;Allocation info for local variables in function 'set_odr_xyz_rep'
131E           3412   ;------------------------------------------------------------
131E           3413   ;dev                       Allocated with name '_set_odr_xyz_rep_PARM_2'
131E           3414   ;settings                  Allocated to registers r2 r3 r4 
131E           3415   ;rslt                      Allocated to registers r5 
131E           3416   ;------------------------------------------------------------
131E           3417   ;        bmm150.c:1349: __xdata static int8_t set_odr_xyz_rep(const struct bmm150_settings *settings, struct bmm150_dev *dev)
131E           3418   ;        -----------------------------------------
131E           3419   ;         function set_odr_xyz_rep
131E           3420   ;        -----------------------------------------
131E           3421   _set_odr_xyz_rep:
131E AA82      3422            mov     r2,dpl
1320 AB83      3423            mov     r3,dph
1322 ACF0      3424            mov     r4,b
1324           3425   ;        bmm150.c:1354: rslt = set_odr(settings, dev);
1324 8548A8    3426            mov     _set_odr_PARM_2,_set_odr_xyz_rep_PARM_2
1327 8549A9    3427            mov     (_set_odr_PARM_2 + 1),(_set_odr_xyz_rep_PARM_2 + 1)
132A 854AAA    3428            mov     (_set_odr_PARM_2 + 2),(_set_odr_xyz_rep_PARM_2 + 2)
132D 8A82      3429            mov     dpl,r2
132F 8B83      3430            mov     dph,r3
1331 8CF0      3431            mov     b,r4
1333 C002      3432            push    ar2
1335 C003      3433            push    ar3
1337 C004      3434            push    ar4
1339 120000    3435            lcall   _set_odr
133C AD82      3436            mov     r5,dpl
133E D004      3437            pop     ar4
1340 D003      3438            pop     ar3
1342 D002      3439            pop     ar2
1344           3440   ;        bmm150.c:1356: if (rslt == BMM150_OK)
1344 ED        3441            mov     a,r5
1345 7000      3442            jnz     L022004?
1347           3443   ;        bmm150.c:1359: rslt = set_xy_rep(settings, dev);
1347 854878    3444            mov     _set_xy_rep_PARM_2,_set_odr_xyz_rep_PARM_2
134A 854979    3445            mov     (_set_xy_rep_PARM_2 + 1),(_set_odr_xyz_rep_PARM_2 + 1)
134D 854A7A    3446            mov     (_set_xy_rep_PARM_2 + 2),(_set_odr_xyz_rep_PARM_2 + 2)
1350 8A82      3447            mov     dpl,r2
1352 8B83      3448            mov     dph,r3
1354 8CF0      3449            mov     b,r4
1356 C002      3450            push    ar2
1358 C003      3451            push    ar3
135A C004      3452            push    ar4
135C 120000    3453            lcall   _set_xy_rep
135F AD82      3454            mov     r5,dpl
1361 D004      3455            pop     ar4
1363 D003      3456            pop     ar3
1365 D002      3457            pop     ar2
1367           3458   ;        bmm150.c:1361: if (rslt == BMM150_OK)
1367 ED        3459            mov     a,r5
1368 7000      3460            jnz     L022004?
136A           3461   ;        bmm150.c:1364: rslt = set_z_rep(settings, dev);
136A 854818    3462            mov     _set_z_rep_PARM_2,_set_odr_xyz_rep_PARM_2
136D 854919    3463            mov     (_set_z_rep_PARM_2 + 1),(_set_odr_xyz_rep_PARM_2 + 1)
1370 854A1A    3464            mov     (_set_z_rep_PARM_2 + 2),(_set_odr_xyz_rep_PARM_2 + 2)
1373 8A82      3465            mov     dpl,r2
1375 8B83      3466            mov     dph,r3
1377 8CF0      3467            mov     b,r4
1379 120000    3468            lcall   _set_z_rep
137C AD82      3469            mov     r5,dpl
137E           3470   L022004?:
137E           3471   ;        bmm150.c:1368: return rslt;
137E 8D82      3472            mov     dpl,r5
1380 22        3473            ret
1381           3474   ;------------------------------------------------------------
1381           3475   ;Allocation info for local variables in function 'set_control_measurement_xyz'
1381           3476   ;------------------------------------------------------------
1381           3477   ;dev                       Allocated with name '_set_control_measurement_xyz_PARM_2'
1381           3478   ;settings                  Allocated to registers r2 r3 r4 
1381           3479   ;rslt                      Allocated to registers r5 
1381           3480   ;reg_data                  Allocated with name '_set_control_measurement_xyz_reg_data_1_149'
1381           3481   ;------------------------------------------------------------
1381           3482   ;        bmm150.c:1375: __xdata static int8_t set_control_measurement_xyz(const struct bmm150_settings *settings, struct bmm150_dev *dev)
1381           3483   ;        -----------------------------------------
1381           3484   ;         function set_control_measurement_xyz
1381           3485   ;        -----------------------------------------
1381           3486   _set_control_measurement_xyz:
1381 AA82      3487            mov     r2,dpl
1383 AB83      3488            mov     r3,dph
1385 ACF0      3489            mov     r4,b
1387           3490   ;        bmm150.c:1380: rslt = bmm150_get_regs(BMM150_REG_AXES_ENABLE, &reg_data, 1, dev);
1387 C002      3491            push    ar2
1389 C003      3492            push    ar3
138B C004      3493            push    ar4
138D C0A8      3494            push    _set_control_measurement_xyz_PARM_2
138F C0A9      3495            push    (_set_control_measurement_xyz_PARM_2 + 1)
1391 C0AA      3496            push    (_set_control_measurement_xyz_PARM_2 + 2)
1393 7401      3497            mov     a,#0x01
1395 C0E0      3498            push    acc
1397 E4        3499            clr     a
1398 C0E0      3500            push    acc
139A C0E0      3501            push    acc
139C C0E0      3502            push    acc
139E 7408      3503            mov     a,#_set_control_measurement_xyz_reg_data_1_149
13A0 C0E0      3504            push    acc
13A2 7459      3505            mov     a,#(_set_control_measurement_xyz_reg_data_1_149 >> 8)
13A4 C0E0      3506            push    acc
13A6 7440      3507            mov     a,#0x40
13A8 C0E0      3508            push    acc
13AA 75824E    3509            mov     dpl,#0x4E
13AD 120000    3510            lcall   _bmm150_get_regs
13B0 AD82      3511            mov     r5,dpl
13B2 E581      3512            mov     a,sp
13B4 24F6      3513            add     a,#0xf6
13B6 F581      3514            mov     sp,a
13B8 D004      3515            pop     ar4
13BA D003      3516            pop     ar3
13BC D002      3517            pop     ar2
13BE           3518   ;        bmm150.c:1382: if (rslt == BMM150_OK)
13BE ED        3519            mov     a,r5
13BF 7000      3520            jnz     L023002?
13C1           3521   ;        bmm150.c:1385: reg_data = BMM150_SET_BITS(reg_data, BMM150_CONTROL_MEASURE, settings->xyz_axes_control);
13C1 74C7      3522            mov     a,#0xC7
13C3 5508      3523            anl     a,_set_control_measurement_xyz_reg_data_1_149
13C5 FE        3524            mov     r6,a
13C6 8A82      3525            mov     dpl,r2
13C8 8B83      3526            mov     dph,r3
13CA 8CF0      3527            mov     b,r4
13CC 120000    3528            lcall   __gptrget
13CF FA        3529            mov     r2,a
13D0 E4        3530            clr     a
13D1 C4        3531            swap    a
13D2 03        3532            rr      a
13D3 54F8      3533            anl     a,#0xf8
13D5 CA        3534            xch     a,r2
13D6 C4        3535            swap    a
13D7 03        3536            rr      a
13D8 CA        3537            xch     a,r2
13D9 6A        3538            xrl     a,r2
13DA CA        3539            xch     a,r2
13DB 54F8      3540            anl     a,#0xf8
13DD CA        3541            xch     a,r2
13DE 6A        3542            xrl     a,r2
13DF 530238    3543            anl     ar2,#0x38
13E2 E4        3544            clr     a
13E3 FB        3545            mov     r3,a
13E4 FC        3546            mov     r4,a
13E5 EE        3547            mov     a,r6
13E6 4202      3548            orl     ar2,a
13E8 EC        3549            mov     a,r4
13E9 4203      3550            orl     ar3,a
13EB 8A08      3551            mov     _set_control_measurement_xyz_reg_data_1_149,r2
13ED           3552   ;        bmm150.c:1386: rslt = bmm150_set_regs(BMM150_REG_AXES_ENABLE, &reg_data, 1, dev);
13ED 750008    3553            mov     _bmm150_set_regs_PARM_2,#_set_control_measurement_xyz_reg_data_1_149
13F0 750100    3554            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
13F3 750240    3555            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
13F6 75B001    3556            mov     _bmm150_set_regs_PARM_3,#0x01
13F9 E4        3557            clr     a
13FA F5B1      3558            mov     (_bmm150_set_regs_PARM_3 + 1),a
13FC F5B2      3559            mov     (_bmm150_set_regs_PARM_3 + 2),a
13FE F5B3      3560            mov     (_bmm150_set_regs_PARM_3 + 3),a
1400 85A860    3561            mov     _bmm150_set_regs_PARM_4,_set_control_measurement_xyz_PARM_2
1403 85A961    3562            mov     (_bmm150_set_regs_PARM_4 + 1),(_set_control_measurement_xyz_PARM_2 + 1)
1406 85AA62    3563            mov     (_bmm150_set_regs_PARM_4 + 2),(_set_control_measurement_xyz_PARM_2 + 2)
1409 75824E    3564            mov     dpl,#0x4E
140C 120000    3565            lcall   _bmm150_set_regs
140F AD82      3566            mov     r5,dpl
1411           3567   L023002?:
1411           3568   ;        bmm150.c:1389: return rslt;
1411 8D82      3569            mov     dpl,r5
1413 22        3570            ret
1414           3571   ;------------------------------------------------------------
1414           3572   ;Allocation info for local variables in function 'are_settings_changed'
1414           3573   ;------------------------------------------------------------
1414           3574   ;desired_settings          Allocated with name '_are_settings_changed_PARM_2'
1414           3575   ;sub_settings              Allocated to registers r2 r3 
1414           3576   ;settings_changed          Allocated to registers r2 
1414           3577   ;------------------------------------------------------------
1414           3578   ;        bmm150.c:1396: __xdata static uint8_t are_settings_changed(uint16_t sub_settings, uint16_t desired_settings)
1414           3579   ;        -----------------------------------------
1414           3580   ;         function are_settings_changed
1414           3581   ;        -----------------------------------------
1414           3582   _are_settings_changed:
1414 AA82      3583            mov     r2,dpl
1416 AB83      3584            mov     r3,dph
1418           3585   ;        bmm150.c:1400: if (sub_settings & desired_settings)
1418 E5E8      3586            mov     a,_are_settings_changed_PARM_2
141A 5202      3587            anl     ar2,a
141C E5E9      3588            mov     a,(_are_settings_changed_PARM_2 + 1)
141E 5203      3589            anl     ar3,a
1420 EA        3590            mov     a,r2
1421 4B        3591            orl     a,r3
1422 6000      3592            jz      L024002?
1424           3593   ;        bmm150.c:1403: settings_changed = BMM150_TRUE;
1424 7A01      3594            mov     r2,#0x01
1426 8000      3595            sjmp    L024003?
1428           3596   L024002?:
1428           3597   ;        bmm150.c:1408: settings_changed = BMM150_FALSE;
1428 7A00      3598            mov     r2,#0x00
142A           3599   L024003?:
142A           3600   ;        bmm150.c:1411: return settings_changed;
142A 8A82      3601            mov     dpl,r2
142C 22        3602            ret
142D           3603   ;------------------------------------------------------------
142D           3604   ;Allocation info for local variables in function 'mode_settings'
142D           3605   ;------------------------------------------------------------
142D           3606   ;settings                  Allocated with name '_mode_settings_PARM_2'
142D           3607   ;dev                       Allocated with name '_mode_settings_PARM_3'
142D           3608   ;desired_settings          Allocated to registers r2 r3 
142D           3609   ;rslt                      Allocated to registers r4 
142D           3610   ;------------------------------------------------------------
142D           3611   ;        bmm150.c:1418: __xdata static int8_t mode_settings(uint16_t desired_settings, const struct bmm150_settings *settings, struct bmm150_dev *dev)
142D           3612   ;        -----------------------------------------
142D           3613   ;         function mode_settings
142D           3614   ;        -----------------------------------------
142D           3615   _mode_settings:
142D AA82      3616            mov     r2,dpl
142F AB83      3617            mov     r3,dph
1431           3618   ;        bmm150.c:1420: int8_t rslt = BMM150_E_INVALID_CONFIG;
1431 7CFD      3619            mov     r4,#0xFD
1433           3620   ;        bmm150.c:1422: if (desired_settings & BMM150_SEL_DATA_RATE)
1433 EA        3621            mov     a,r2
1434 30E038    3622            jnb     acc.0,L025002?
1437           3623   ;        bmm150.c:1425: rslt = set_odr(settings, dev);
1437 85A8A8    3624            mov     _set_odr_PARM_2,_mode_settings_PARM_3
143A 85A9A9    3625            mov     (_set_odr_PARM_2 + 1),(_mode_settings_PARM_3 + 1)
143D 85AAAA    3626            mov     (_set_odr_PARM_2 + 2),(_mode_settings_PARM_3 + 2)
1440 855882    3627            mov     dpl,_mode_settings_PARM_2
1443 855983    3628            mov     dph,(_mode_settings_PARM_2 + 1)
1446 855AF0    3629            mov     b,(_mode_settings_PARM_2 + 2)
1449 C002      3630            push    ar2
144B C003      3631            push    ar3
144D 120000    3632            lcall   _set_odr
1450 AC82      3633            mov     r4,dpl
1452 D003      3634            pop     ar3
1454 D002      3635            pop     ar2
1456           3636   L025002?:
1456           3637   ;        bmm150.c:1428: if (desired_settings & BMM150_SEL_CONTROL_MEASURE)
1456 EA        3638            mov     a,r2
1457 30E178    3639            jnb     acc.1,L025004?
145A           3640   ;        bmm150.c:1431: rslt = set_control_measurement_xyz(settings, dev);
145A 85A8A8    3641            mov     _set_control_measurement_xyz_PARM_2,_mode_settings_PARM_3
145D 85A9A9    3642            mov     (_set_control_measurement_xyz_PARM_2 + 1),(_mode_settings_PARM_3 + 1)
1460 85AAAA    3643            mov     (_set_control_measurement_xyz_PARM_2 + 2),(_mode_settings_PARM_3 + 2)
1463 855882    3644            mov     dpl,_mode_settings_PARM_2
1466 855983    3645            mov     dph,(_mode_settings_PARM_2 + 1)
1469 855AF0    3646            mov     b,(_mode_settings_PARM_2 + 2)
146C C002      3647            push    ar2
146E C003      3648            push    ar3
1470 120000    3649            lcall   _set_control_measurement_xyz
1473 AC82      3650            mov     r4,dpl
1475 D003      3651            pop     ar3
1477 D002      3652            pop     ar2
1479           3653   L025004?:
1479           3654   ;        bmm150.c:1434: if (desired_settings & BMM150_SEL_XY_REP)
1479 EA        3655            mov     a,r2
147A 30E2B8    3656            jnb     acc.2,L025006?
147D           3657   ;        bmm150.c:1437: rslt = set_xy_rep(settings, dev);
147D 85A878    3658            mov     _set_xy_rep_PARM_2,_mode_settings_PARM_3
1480 85A979    3659            mov     (_set_xy_rep_PARM_2 + 1),(_mode_settings_PARM_3 + 1)
1483 85AA7A    3660            mov     (_set_xy_rep_PARM_2 + 2),(_mode_settings_PARM_3 + 2)
1486 855882    3661            mov     dpl,_mode_settings_PARM_2
1489 855983    3662            mov     dph,(_mode_settings_PARM_2 + 1)
148C 855AF0    3663            mov     b,(_mode_settings_PARM_2 + 2)
148F C002      3664            push    ar2
1491 C003      3665            push    ar3
1493 120000    3666            lcall   _set_xy_rep
1496 AC82      3667            mov     r4,dpl
1498 D003      3668            pop     ar3
149A D002      3669            pop     ar2
149C           3670   L025006?:
149C           3671   ;        bmm150.c:1440: if (desired_settings & BMM150_SEL_Z_REP)
149C EA        3672            mov     a,r2
149D 30E3F8    3673            jnb     acc.3,L025008?
14A0           3674   ;        bmm150.c:1443: rslt = set_z_rep(settings, dev);
14A0 85A818    3675            mov     _set_z_rep_PARM_2,_mode_settings_PARM_3
14A3 85A919    3676            mov     (_set_z_rep_PARM_2 + 1),(_mode_settings_PARM_3 + 1)
14A6 85AA1A    3677            mov     (_set_z_rep_PARM_2 + 2),(_mode_settings_PARM_3 + 2)
14A9 855882    3678            mov     dpl,_mode_settings_PARM_2
14AC 855983    3679            mov     dph,(_mode_settings_PARM_2 + 1)
14AF 855AF0    3680            mov     b,(_mode_settings_PARM_2 + 2)
14B2 120000    3681            lcall   _set_z_rep
14B5 AC82      3682            mov     r4,dpl
14B7           3683   L025008?:
14B7           3684   ;        bmm150.c:1446: return rslt;
14B7 8C82      3685            mov     dpl,r4
14B9 22        3686            ret
14BA           3687   ;------------------------------------------------------------
14BA           3688   ;Allocation info for local variables in function 'parse_setting'
14BA           3689   ;------------------------------------------------------------
14BA           3690   ;settings                  Allocated with name '_parse_setting_PARM_2'
14BA           3691   ;reg_data                  Allocated with name '_parse_setting_reg_data_1_161'
14BA           3692   ;sloc0                     Allocated with name '_parse_setting_sloc0_1_0'
14BA           3693   ;sloc1                     Allocated with name '_parse_setting_sloc1_1_0'
14BA           3694   ;------------------------------------------------------------
14BA           3695   ;        bmm150.c:1453: __xdata static void parse_setting(const uint8_t *reg_data, struct bmm150_settings *settings)
14BA           3696   ;        -----------------------------------------
14BA           3697   ;         function parse_setting
14BA           3698   ;        -----------------------------------------
14BA           3699   _parse_setting:
14BA 858288    3700            mov     _parse_setting_reg_data_1_161,dpl
14BD 858389    3701            mov     (_parse_setting_reg_data_1_161 + 1),dph
14C0 85F08A    3702            mov     (_parse_setting_reg_data_1_161 + 2),b
14C3           3703   ;        bmm150.c:1458: settings->z_rep = reg_data[7];
14C3 AD38      3704            mov     r5,_parse_setting_PARM_2
14C5 AE39      3705            mov     r6,(_parse_setting_PARM_2 + 1)
14C7 AF3A      3706            mov     r7,(_parse_setting_PARM_2 + 2)
14C9 7404      3707            mov     a,#0x04
14CB 2D        3708            add     a,r5
14CC F5D8      3709            mov     _parse_setting_sloc0_1_0,a
14CE E4        3710            clr     a
14CF 3E        3711            addc    a,r6
14D0 F5D9      3712            mov     (_parse_setting_sloc0_1_0 + 1),a
14D2 8FDA      3713            mov     (_parse_setting_sloc0_1_0 + 2),r7
14D4 7407      3714            mov     a,#0x07
14D6 2588      3715            add     a,_parse_setting_reg_data_1_161
14D8 FB        3716            mov     r3,a
14D9 E4        3717            clr     a
14DA 3589      3718            addc    a,(_parse_setting_reg_data_1_161 + 1)
14DC FC        3719            mov     r4,a
14DD AA8A      3720            mov     r2,(_parse_setting_reg_data_1_161 + 2)
14DF 8B82      3721            mov     dpl,r3
14E1 8C83      3722            mov     dph,r4
14E3 8AF0      3723            mov     b,r2
14E5 120000    3724            lcall   __gptrget
14E8 85D882    3725            mov     dpl,_parse_setting_sloc0_1_0
14EB 85D983    3726            mov     dph,(_parse_setting_sloc0_1_0 + 1)
14EE 85DAF0    3727            mov     b,(_parse_setting_sloc0_1_0 + 2)
14F1 120000    3728            lcall   __gptrput
14F4           3729   ;        bmm150.c:1459: settings->xy_rep = reg_data[6];
14F4 7403      3730            mov     a,#0x03
14F6 2D        3731            add     a,r5
14F7 F5D8      3732            mov     _parse_setting_sloc0_1_0,a
14F9 E4        3733            clr     a
14FA 3E        3734            addc    a,r6
14FB F5D9      3735            mov     (_parse_setting_sloc0_1_0 + 1),a
14FD 8FDA      3736            mov     (_parse_setting_sloc0_1_0 + 2),r7
14FF 7406      3737            mov     a,#0x06
1501 2588      3738            add     a,_parse_setting_reg_data_1_161
1503 F8        3739            mov     r0,a
1504 E4        3740            clr     a
1505 3589      3741            addc    a,(_parse_setting_reg_data_1_161 + 1)
1507 F9        3742            mov     r1,a
1508 AA8A      3743            mov     r2,(_parse_setting_reg_data_1_161 + 2)
150A 8882      3744            mov     dpl,r0
150C 8983      3745            mov     dph,r1
150E 8AF0      3746            mov     b,r2
1510 120000    3747            lcall   __gptrget
1513 85D882    3748            mov     dpl,_parse_setting_sloc0_1_0
1516 85D983    3749            mov     dph,(_parse_setting_sloc0_1_0 + 1)
1519 85DAF0    3750            mov     b,(_parse_setting_sloc0_1_0 + 2)
151C 120000    3751            lcall   __gptrput
151F           3752   ;        bmm150.c:1460: settings->int_settings.high_threshold = reg_data[5];
151F 7406      3753            mov     a,#0x06
1521 2D        3754            add     a,r5
1522 F5D8      3755            mov     _parse_setting_sloc0_1_0,a
1524 E4        3756            clr     a
1525 3E        3757            addc    a,r6
1526 F5D9      3758            mov     (_parse_setting_sloc0_1_0 + 1),a
1528 8FDA      3759            mov     (_parse_setting_sloc0_1_0 + 2),r7
152A 7410      3760            mov     a,#0x10
152C 2D        3761            add     a,r5
152D F528      3762            mov     _parse_setting_sloc1_1_0,a
152F E4        3763            clr     a
1530 3E        3764            addc    a,r6
1531 F529      3765            mov     (_parse_setting_sloc1_1_0 + 1),a
1533 8F2A      3766            mov     (_parse_setting_sloc1_1_0 + 2),r7
1535 7405      3767            mov     a,#0x05
1537 2588      3768            add     a,_parse_setting_reg_data_1_161
1539 FB        3769            mov     r3,a
153A E4        3770            clr     a
153B 3589      3771            addc    a,(_parse_setting_reg_data_1_161 + 1)
153D FC        3772            mov     r4,a
153E AA8A      3773            mov     r2,(_parse_setting_reg_data_1_161 + 2)
1540 8B82      3774            mov     dpl,r3
1542 8C83      3775            mov     dph,r4
1544 8AF0      3776            mov     b,r2
1546 120000    3777            lcall   __gptrget
1549 852882    3778            mov     dpl,_parse_setting_sloc1_1_0
154C 852983    3779            mov     dph,(_parse_setting_sloc1_1_0 + 1)
154F 852AF0    3780            mov     b,(_parse_setting_sloc1_1_0 + 2)
1552 120000    3781            lcall   __gptrput
1555           3782   ;        bmm150.c:1461: settings->int_settings.low_threshold = reg_data[4];
1555 740F      3783            mov     a,#0x0F
1557 2D        3784            add     a,r5
1558 F528      3785            mov     _parse_setting_sloc1_1_0,a
155A E4        3786            clr     a
155B 3E        3787            addc    a,r6
155C F529      3788            mov     (_parse_setting_sloc1_1_0 + 1),a
155E 8F2A      3789            mov     (_parse_setting_sloc1_1_0 + 2),r7
1560 7404      3790            mov     a,#0x04
1562 2588      3791            add     a,_parse_setting_reg_data_1_161
1564 F8        3792            mov     r0,a
1565 E4        3793            clr     a
1566 3589      3794            addc    a,(_parse_setting_reg_data_1_161 + 1)
1568 F9        3795            mov     r1,a
1569 AA8A      3796            mov     r2,(_parse_setting_reg_data_1_161 + 2)
156B 8882      3797            mov     dpl,r0
156D 8983      3798            mov     dph,r1
156F 8AF0      3799            mov     b,r2
1571 120000    3800            lcall   __gptrget
1574 852882    3801            mov     dpl,_parse_setting_sloc1_1_0
1577 852983    3802            mov     dph,(_parse_setting_sloc1_1_0 + 1)
157A 852AF0    3803            mov     b,(_parse_setting_sloc1_1_0 + 2)
157D 120000    3804            lcall   __gptrput
1580           3805   ;        bmm150.c:1462: settings->xyz_axes_control = BMM150_GET_BITS(reg_data[3], BMM150_CONTROL_MEASURE);
1580 7403      3806            mov     a,#0x03
1582 2588      3807            add     a,_parse_setting_reg_data_1_161
1584 FA        3808            mov     r2,a
1585 E4        3809            clr     a
1586 3589      3810            addc    a,(_parse_setting_reg_data_1_161 + 1)
1588 FB        3811            mov     r3,a
1589 AC8A      3812            mov     r4,(_parse_setting_reg_data_1_161 + 2)
158B 8A82      3813            mov     dpl,r2
158D 8B83      3814            mov     dph,r3
158F 8CF0      3815            mov     b,r4
1591 120000    3816            lcall   __gptrget
1594 FA        3817            mov     r2,a
1595 7438      3818            mov     a,#0x38
1597 5A        3819            anl     a,r2
1598 FC        3820            mov     r4,a
1599 E4        3821            clr     a
159A C4        3822            swap    a
159B 23        3823            rl      a
159C CC        3824            xch     a,r4
159D C4        3825            swap    a
159E 23        3826            rl      a
159F 541F      3827            anl     a,#0x1f
15A1 6C        3828            xrl     a,r4
15A2 CC        3829            xch     a,r4
15A3 541F      3830            anl     a,#0x1f
15A5 CC        3831            xch     a,r4
15A6 6C        3832            xrl     a,r4
15A7 CC        3833            xch     a,r4
15A8 8D82      3834            mov     dpl,r5
15AA 8E83      3835            mov     dph,r6
15AC 8FF0      3836            mov     b,r7
15AE EC        3837            mov     a,r4
15AF 120000    3838            lcall   __gptrput
15B2           3839   ;        bmm150.c:1463: settings->int_settings.drdy_pin_en = BMM150_GET_BITS(reg_data[3], BMM150_DRDY_EN);
15B2 7480      3840            mov     a,#0x80
15B4 5A        3841            anl     a,r2
15B5 FC        3842            mov     r4,a
15B6 E4        3843            clr     a
15B7 A2E7      3844            mov     c,acc.7
15B9 CC        3845            xch     a,r4
15BA 33        3846            rlc     a
15BB CC        3847            xch     a,r4
15BC 33        3848            rlc     a
15BD CC        3849            xch     a,r4
15BE 5401      3850            anl     a,#0x01
15C0 85D882    3851            mov     dpl,_parse_setting_sloc0_1_0
15C3 85D983    3852            mov     dph,(_parse_setting_sloc0_1_0 + 1)
15C6 85DAF0    3853            mov     b,(_parse_setting_sloc0_1_0 + 2)
15C9 EC        3854            mov     a,r4
15CA 120000    3855            lcall   __gptrput
15CD           3856   ;        bmm150.c:1464: settings->int_settings.int_pin_en = BMM150_GET_BITS(reg_data[3], BMM150_INT_PIN_EN);
15CD 7407      3857            mov     a,#0x07
15CF 2D        3858            add     a,r5
15D0 F528      3859            mov     _parse_setting_sloc1_1_0,a
15D2 E4        3860            clr     a
15D3 3E        3861            addc    a,r6
15D4 F529      3862            mov     (_parse_setting_sloc1_1_0 + 1),a
15D6 8F2A      3863            mov     (_parse_setting_sloc1_1_0 + 2),r7
15D8 7440      3864            mov     a,#0x40
15DA 5A        3865            anl     a,r2
15DB FC        3866            mov     r4,a
15DC E4        3867            clr     a
15DD A2E7      3868            mov     c,acc.7
15DF CC        3869            xch     a,r4
15E0 33        3870            rlc     a
15E1 CC        3871            xch     a,r4
15E2 33        3872            rlc     a
15E3 A2E7      3873            mov     c,acc.7
15E5 CC        3874            xch     a,r4
15E6 33        3875            rlc     a
15E7 CC        3876            xch     a,r4
15E8 33        3877            rlc     a
15E9 CC        3878            xch     a,r4
15EA 5403      3879            anl     a,#0x03
15EC 852882    3880            mov     dpl,_parse_setting_sloc1_1_0
15EF 852983    3881            mov     dph,(_parse_setting_sloc1_1_0 + 1)
15F2 852AF0    3882            mov     b,(_parse_setting_sloc1_1_0 + 2)
15F5 EC        3883            mov     a,r4
15F6 120000    3884            lcall   __gptrput
15F9           3885   ;        bmm150.c:1465: settings->int_settings.drdy_polarity = BMM150_GET_BITS(reg_data[3], BMM150_DRDY_POLARITY);
15F9 7408      3886            mov     a,#0x08
15FB 2D        3887            add     a,r5
15FC F528      3888            mov     _parse_setting_sloc1_1_0,a
15FE E4        3889            clr     a
15FF 3E        3890            addc    a,r6
1600 F529      3891            mov     (_parse_setting_sloc1_1_0 + 1),a
1602 8F2A      3892            mov     (_parse_setting_sloc1_1_0 + 2),r7
1604 7404      3893            mov     a,#0x04
1606 5A        3894            anl     a,r2
1607 FC        3895            mov     r4,a
1608 E4        3896            clr     a
1609 C3        3897            clr     c
160A 13        3898            rrc     a
160B CC        3899            xch     a,r4
160C 13        3900            rrc     a
160D CC        3901            xch     a,r4
160E C3        3902            clr     c
160F 13        3903            rrc     a
1610 CC        3904            xch     a,r4
1611 13        3905            rrc     a
1612 CC        3906            xch     a,r4
1613 852882    3907            mov     dpl,_parse_setting_sloc1_1_0
1616 852983    3908            mov     dph,(_parse_setting_sloc1_1_0 + 1)
1619 852AF0    3909            mov     b,(_parse_setting_sloc1_1_0 + 2)
161C EC        3910            mov     a,r4
161D 120000    3911            lcall   __gptrput
1620           3912   ;        bmm150.c:1466: settings->int_settings.int_latch = BMM150_GET_BITS(reg_data[3], BMM150_INT_LATCH);
1620 7409      3913            mov     a,#0x09
1622 2D        3914            add     a,r5
1623 F528      3915            mov     _parse_setting_sloc1_1_0,a
1625 E4        3916            clr     a
1626 3E        3917            addc    a,r6
1627 F529      3918            mov     (_parse_setting_sloc1_1_0 + 1),a
1629 8F2A      3919            mov     (_parse_setting_sloc1_1_0 + 2),r7
162B 7402      3920            mov     a,#0x02
162D 5A        3921            anl     a,r2
162E FC        3922            mov     r4,a
162F E4        3923            clr     a
1630 C3        3924            clr     c
1631 13        3925            rrc     a
1632 CC        3926            xch     a,r4
1633 13        3927            rrc     a
1634 CC        3928            xch     a,r4
1635 852882    3929            mov     dpl,_parse_setting_sloc1_1_0
1638 852983    3930            mov     dph,(_parse_setting_sloc1_1_0 + 1)
163B 852AF0    3931            mov     b,(_parse_setting_sloc1_1_0 + 2)
163E EC        3932            mov     a,r4
163F 120000    3933            lcall   __gptrput
1642           3934   ;        bmm150.c:1467: settings->int_settings.int_polarity = BMM150_GET_BITS_POS_0(reg_data[3], BMM150_INT_POLARITY);
1642 740A      3935            mov     a,#0x0A
1644 2D        3936            add     a,r5
1645 FC        3937            mov     r4,a
1646 E4        3938            clr     a
1647 3E        3939            addc    a,r6
1648 F8        3940            mov     r0,a
1649 8F01      3941            mov     ar1,r7
164B 530201    3942            anl     ar2,#0x01
164E 8C82      3943            mov     dpl,r4
1650 8883      3944            mov     dph,r0
1652 89F0      3945            mov     b,r1
1654 EA        3946            mov     a,r2
1655 120000    3947            lcall   __gptrput
1658           3948   ;        bmm150.c:1468: settings->int_settings.data_overrun_en = BMM150_GET_BITS(reg_data[2], BMM150_DATA_OVERRUN_INT);
1658 740B      3949            mov     a,#0x0B
165A 2D        3950            add     a,r5
165B F528      3951            mov     _parse_setting_sloc1_1_0,a
165D E4        3952            clr     a
165E 3E        3953            addc    a,r6
165F F529      3954            mov     (_parse_setting_sloc1_1_0 + 1),a
1661 8F2A      3955            mov     (_parse_setting_sloc1_1_0 + 2),r7
1663 7402      3956            mov     a,#0x02
1665 2588      3957            add     a,_parse_setting_reg_data_1_161
1667 F8        3958            mov     r0,a
1668 E4        3959            clr     a
1669 3589      3960            addc    a,(_parse_setting_reg_data_1_161 + 1)
166B F9        3961            mov     r1,a
166C AA8A      3962            mov     r2,(_parse_setting_reg_data_1_161 + 2)
166E 8882      3963            mov     dpl,r0
1670 8983      3964            mov     dph,r1
1672 8AF0      3965            mov     b,r2
1674 120000    3966            lcall   __gptrget
1677 F8        3967            mov     r0,a
1678 7480      3968            mov     a,#0x80
167A 58        3969            anl     a,r0
167B FB        3970            mov     r3,a
167C E4        3971            clr     a
167D A2E7      3972            mov     c,acc.7
167F CB        3973            xch     a,r3
1680 33        3974            rlc     a
1681 CB        3975            xch     a,r3
1682 33        3976            rlc     a
1683 CB        3977            xch     a,r3
1684 5401      3978            anl     a,#0x01
1686 852882    3979            mov     dpl,_parse_setting_sloc1_1_0
1689 852983    3980            mov     dph,(_parse_setting_sloc1_1_0 + 1)
168C 852AF0    3981            mov     b,(_parse_setting_sloc1_1_0 + 2)
168F EB        3982            mov     a,r3
1690 120000    3983            lcall   __gptrput
1693           3984   ;        bmm150.c:1469: settings->int_settings.overflow_int_en = BMM150_GET_BITS(reg_data[2], BMM150_OVERFLOW_INT);
1693 740C      3985            mov     a,#0x0C
1695 2D        3986            add     a,r5
1696 F528      3987            mov     _parse_setting_sloc1_1_0,a
1698 E4        3988            clr     a
1699 3E        3989            addc    a,r6
169A F529      3990            mov     (_parse_setting_sloc1_1_0 + 1),a
169C 8F2A      3991            mov     (_parse_setting_sloc1_1_0 + 2),r7
169E 7440      3992            mov     a,#0x40
16A0 58        3993            anl     a,r0
16A1 FB        3994            mov     r3,a
16A2 E4        3995            clr     a
16A3 A2E7      3996            mov     c,acc.7
16A5 CB        3997            xch     a,r3
16A6 33        3998            rlc     a
16A7 CB        3999            xch     a,r3
16A8 33        4000            rlc     a
16A9 A2E7      4001            mov     c,acc.7
16AB CB        4002            xch     a,r3
16AC 33        4003            rlc     a
16AD CB        4004            xch     a,r3
16AE 33        4005            rlc     a
16AF CB        4006            xch     a,r3
16B0 5403      4007            anl     a,#0x03
16B2 852882    4008            mov     dpl,_parse_setting_sloc1_1_0
16B5 852983    4009            mov     dph,(_parse_setting_sloc1_1_0 + 1)
16B8 852AF0    4010            mov     b,(_parse_setting_sloc1_1_0 + 2)
16BB EB        4011            mov     a,r3
16BC 120000    4012            lcall   __gptrput
16BF           4013   ;        bmm150.c:1470: settings->int_settings.high_int_en = BMM150_GET_BITS(reg_data[2], BMM150_HIGH_THRESHOLD_INT);
16BF 740D      4014            mov     a,#0x0D
16C1 2D        4015            add     a,r5
16C2 F528      4016            mov     _parse_setting_sloc1_1_0,a
16C4 E4        4017            clr     a
16C5 3E        4018            addc    a,r6
16C6 F529      4019            mov     (_parse_setting_sloc1_1_0 + 1),a
16C8 8F2A      4020            mov     (_parse_setting_sloc1_1_0 + 2),r7
16CA 7438      4021            mov     a,#0x38
16CC 58        4022            anl     a,r0
16CD FB        4023            mov     r3,a
16CE E4        4024            clr     a
16CF C4        4025            swap    a
16D0 23        4026            rl      a
16D1 CB        4027            xch     a,r3
16D2 C4        4028            swap    a
16D3 23        4029            rl      a
16D4 541F      4030            anl     a,#0x1f
16D6 6B        4031            xrl     a,r3
16D7 CB        4032            xch     a,r3
16D8 541F      4033            anl     a,#0x1f
16DA CB        4034            xch     a,r3
16DB 6B        4035            xrl     a,r3
16DC CB        4036            xch     a,r3
16DD 852882    4037            mov     dpl,_parse_setting_sloc1_1_0
16E0 852983    4038            mov     dph,(_parse_setting_sloc1_1_0 + 1)
16E3 852AF0    4039            mov     b,(_parse_setting_sloc1_1_0 + 2)
16E6 EB        4040            mov     a,r3
16E7 120000    4041            lcall   __gptrput
16EA           4042   ;        bmm150.c:1471: settings->int_settings.low_int_en = BMM150_GET_BITS_POS_0(reg_data[2], BMM150_LOW_THRESHOLD_INT);
16EA 740E      4043            mov     a,#0x0E
16EC 2D        4044            add     a,r5
16ED FB        4045            mov     r3,a
16EE E4        4046            clr     a
16EF 3E        4047            addc    a,r6
16F0 FC        4048            mov     r4,a
16F1 8F01      4049            mov     ar1,r7
16F3 530007    4050            anl     ar0,#0x07
16F6 8B82      4051            mov     dpl,r3
16F8 8C83      4052            mov     dph,r4
16FA 89F0      4053            mov     b,r1
16FC E8        4054            mov     a,r0
16FD 120000    4055            lcall   __gptrput
1700           4056   ;        bmm150.c:1472: settings->data_rate = BMM150_GET_BITS(reg_data[1], BMM150_ODR);
1700 7402      4057            mov     a,#0x02
1702 2D        4058            add     a,r5
1703 FD        4059            mov     r5,a
1704 E4        4060            clr     a
1705 3E        4061            addc    a,r6
1706 FE        4062            mov     r6,a
1707 7401      4063            mov     a,#0x01
1709 2588      4064            add     a,_parse_setting_reg_data_1_161
170B FA        4065            mov     r2,a
170C E4        4066            clr     a
170D 3589      4067            addc    a,(_parse_setting_reg_data_1_161 + 1)
170F FB        4068            mov     r3,a
1710 AC8A      4069            mov     r4,(_parse_setting_reg_data_1_161 + 2)
1712 8A82      4070            mov     dpl,r2
1714 8B83      4071            mov     dph,r3
1716 8CF0      4072            mov     b,r4
1718 120000    4073            lcall   __gptrget
171B FA        4074            mov     r2,a
171C 530238    4075            anl     ar2,#0x38
171F E4        4076            clr     a
1720 C4        4077            swap    a
1721 23        4078            rl      a
1722 CA        4079            xch     a,r2
1723 C4        4080            swap    a
1724 23        4081            rl      a
1725 541F      4082            anl     a,#0x1f
1727 6A        4083            xrl     a,r2
1728 CA        4084            xch     a,r2
1729 541F      4085            anl     a,#0x1f
172B CA        4086            xch     a,r2
172C 6A        4087            xrl     a,r2
172D CA        4088            xch     a,r2
172E 8D82      4089            mov     dpl,r5
1730 8E83      4090            mov     dph,r6
1732 8FF0      4091            mov     b,r7
1734 EA        4092            mov     a,r2
1735 020000    4093            ljmp    __gptrput
1738           4094   ;------------------------------------------------------------
1738           4095   ;Allocation info for local variables in function 'interrupt_pin_settings'
1738           4096   ;------------------------------------------------------------
1738           4097   ;settings                  Allocated with name '_interrupt_pin_settings_PARM_2'
1738           4098   ;dev                       Allocated with name '_interrupt_pin_settings_PARM_3'
1738           4099   ;desired_settings          Allocated with name '_interrupt_pin_settings_desired_settings_1_163'
1738           4100   ;rslt                      Allocated to registers r4 
1738           4101   ;reg_data                  Allocated with name '_interrupt_pin_settings_reg_data_1_164'
1738           4102   ;int_settings              Allocated with name '_interrupt_pin_settings_int_settings_1_164'
1738           4103   ;sloc0                     Allocated with name '_interrupt_pin_settings_sloc0_1_0'
1738           4104   ;------------------------------------------------------------
1738           4105   ;        bmm150.c:1480: __xdata static int8_t interrupt_pin_settings(uint16_t desired_settings,
1738           4106   ;        -----------------------------------------
1738           4107   ;         function interrupt_pin_settings
1738           4108   ;        -----------------------------------------
1738           4109   _interrupt_pin_settings:
1738 8582A8    4110            mov     _interrupt_pin_settings_desired_settings_1_163,dpl
173B 8583A9    4111            mov     (_interrupt_pin_settings_desired_settings_1_163 + 1),dph
173E           4112   ;        bmm150.c:1488: rslt = bmm150_get_regs(BMM150_REG_AXES_ENABLE, &reg_data, 1, dev);
173E C048      4113            push    _interrupt_pin_settings_PARM_3
1740 C049      4114            push    (_interrupt_pin_settings_PARM_3 + 1)
1742 C04A      4115            push    (_interrupt_pin_settings_PARM_3 + 2)
1744 7401      4116            mov     a,#0x01
1746 C0E0      4117            push    acc
1748 E4        4118            clr     a
1749 C0E0      4119            push    acc
174B C0E0      4120            push    acc
174D C0E0      4121            push    acc
174F 7408      4122            mov     a,#_interrupt_pin_settings_reg_data_1_164
1751 C0E0      4123            push    acc
1753 745B      4124            mov     a,#(_interrupt_pin_settings_reg_data_1_164 >> 8)
1755 C0E0      4125            push    acc
1757 7440      4126            mov     a,#0x40
1759 C0E0      4127            push    acc
175B 75824E    4128            mov     dpl,#0x4E
175E 120000    4129            lcall   _bmm150_get_regs
1761 AC82      4130            mov     r4,dpl
1763 E581      4131            mov     a,sp
1765 24F6      4132            add     a,#0xf6
1767 F581      4133            mov     sp,a
1769           4134   ;        bmm150.c:1490: if (rslt == BMM150_OK)
1769 EC        4135            mov     a,r4
176A 6000      4136            jz      L027021?
176C 020000    4137            ljmp    L027012?
176F           4138   L027021?:
176F           4139   ;        bmm150.c:1493: int_settings.drdy_pin_en = settings->int_settings.drdy_pin_en;
176F 85F8C8    4140            mov     _interrupt_pin_settings_sloc0_1_0,_interrupt_pin_settings_PARM_2
1772 85F9C9    4141            mov     (_interrupt_pin_settings_sloc0_1_0 + 1),(_interrupt_pin_settings_PARM_2 + 1)
1775 85FACA    4142            mov     (_interrupt_pin_settings_sloc0_1_0 + 2),(_interrupt_pin_settings_PARM_2 + 2)
1778 7406      4143            mov     a,#0x06
177A 25C8      4144            add     a,_interrupt_pin_settings_sloc0_1_0
177C FA        4145            mov     r2,a
177D E4        4146            clr     a
177E 35C9      4147            addc    a,(_interrupt_pin_settings_sloc0_1_0 + 1)
1780 FB        4148            mov     r3,a
1781 ADCA      4149            mov     r5,(_interrupt_pin_settings_sloc0_1_0 + 2)
1783 8A82      4150            mov     dpl,r2
1785 8B83      4151            mov     dph,r3
1787 8DF0      4152            mov     b,r5
1789 120000    4153            lcall   __gptrget
178C FA        4154            mov     r2,a
178D 8A68      4155            mov     _interrupt_pin_settings_int_settings_1_164,r2
178F           4156   ;        bmm150.c:1494: int_settings.int_pin_en = settings->int_settings.int_pin_en;
178F 7407      4157            mov     a,#0x07
1791 25C8      4158            add     a,_interrupt_pin_settings_sloc0_1_0
1793 FA        4159            mov     r2,a
1794 E4        4160            clr     a
1795 35C9      4161            addc    a,(_interrupt_pin_settings_sloc0_1_0 + 1)
1797 FB        4162            mov     r3,a
1798 ADCA      4163            mov     r5,(_interrupt_pin_settings_sloc0_1_0 + 2)
179A 8A82      4164            mov     dpl,r2
179C 8B83      4165            mov     dph,r3
179E 8DF0      4166            mov     b,r5
17A0 120000    4167            lcall   __gptrget
17A3 FA        4168            mov     r2,a
17A4 8A69      4169            mov     (_interrupt_pin_settings_int_settings_1_164 + 0x0001),r2
17A6           4170   ;        bmm150.c:1495: int_settings.drdy_polarity = settings->int_settings.drdy_polarity;
17A6 7408      4171            mov     a,#0x08
17A8 25C8      4172            add     a,_interrupt_pin_settings_sloc0_1_0
17AA FA        4173            mov     r2,a
17AB E4        4174            clr     a
17AC 35C9      4175            addc    a,(_interrupt_pin_settings_sloc0_1_0 + 1)
17AE FB        4176            mov     r3,a
17AF ADCA      4177            mov     r5,(_interrupt_pin_settings_sloc0_1_0 + 2)
17B1 8A82      4178            mov     dpl,r2
17B3 8B83      4179            mov     dph,r3
17B5 8DF0      4180            mov     b,r5
17B7 120000    4181            lcall   __gptrget
17BA FA        4182            mov     r2,a
17BB 8A6A      4183            mov     (_interrupt_pin_settings_int_settings_1_164 + 0x0002),r2
17BD           4184   ;        bmm150.c:1496: int_settings.int_polarity = settings->int_settings.int_polarity;
17BD 740A      4185            mov     a,#0x0A
17BF 25C8      4186            add     a,_interrupt_pin_settings_sloc0_1_0
17C1 FA        4187            mov     r2,a
17C2 E4        4188            clr     a
17C3 35C9      4189            addc    a,(_interrupt_pin_settings_sloc0_1_0 + 1)
17C5 FB        4190            mov     r3,a
17C6 ADCA      4191            mov     r5,(_interrupt_pin_settings_sloc0_1_0 + 2)
17C8 8A82      4192            mov     dpl,r2
17CA 8B83      4193            mov     dph,r3
17CC 8DF0      4194            mov     b,r5
17CE 120000    4195            lcall   __gptrget
17D1 FA        4196            mov     r2,a
17D2 8A6C      4197            mov     (_interrupt_pin_settings_int_settings_1_164 + 0x0004),r2
17D4           4198   ;        bmm150.c:1498: if (desired_settings & BMM150_SEL_DRDY_PIN_EN)
17D4 E5A8      4199            mov     a,_interrupt_pin_settings_desired_settings_1_163
17D6 30E4B8    4200            jnb     acc.4,L027002?
17D9           4201   ;        bmm150.c:1503: reg_data = BMM150_SET_BITS(reg_data, BMM150_DRDY_EN, int_settings.drdy_pin_en);
17D9 747F      4202            mov     a,#0x7F
17DB 5508      4203            anl     a,_interrupt_pin_settings_reg_data_1_164
17DD FA        4204            mov     r2,a
17DE AB68      4205            mov     r3,_interrupt_pin_settings_int_settings_1_164
17E0 E4        4206            clr     a
17E1 5401      4207            anl     a,#0x01
17E3 A2E0      4208            mov     c,acc.0
17E5 CB        4209            xch     a,r3
17E6 13        4210            rrc     a
17E7 CB        4211            xch     a,r3
17E8 13        4212            rrc     a
17E9 CB        4213            xch     a,r3
17EA 530380    4214            anl     ar3,#0x80
17ED E4        4215            clr     a
17EE FD        4216            mov     r5,a
17EF FE        4217            mov     r6,a
17F0 EA        4218            mov     a,r2
17F1 4203      4219            orl     ar3,a
17F3 EE        4220            mov     a,r6
17F4 4205      4221            orl     ar5,a
17F6 8B08      4222            mov     _interrupt_pin_settings_reg_data_1_164,r3
17F8           4223   L027002?:
17F8           4224   ;        bmm150.c:1506: if (desired_settings & BMM150_SEL_INT_PIN_EN)
17F8 E5A8      4225            mov     a,_interrupt_pin_settings_desired_settings_1_163
17FA 30E5F8    4226            jnb     acc.5,L027004?
17FD           4227   ;        bmm150.c:1509: reg_data = BMM150_SET_BITS(reg_data, BMM150_INT_PIN_EN, int_settings.int_pin_en);
17FD 74BF      4228            mov     a,#0xBF
17FF 5508      4229            anl     a,_interrupt_pin_settings_reg_data_1_164
1801 FA        4230            mov     r2,a
1802 AB69      4231            mov     r3,(_interrupt_pin_settings_int_settings_1_164 + 0x0001)
1804 E4        4232            clr     a
1805 5403      4233            anl     a,#0x03
1807 A2E0      4234            mov     c,acc.0
1809 CB        4235            xch     a,r3
180A 13        4236            rrc     a
180B CB        4237            xch     a,r3
180C 13        4238            rrc     a
180D A2E0      4239            mov     c,acc.0
180F CB        4240            xch     a,r3
1810 13        4241            rrc     a
1811 CB        4242            xch     a,r3
1812 13        4243            rrc     a
1813 CB        4244            xch     a,r3
1814 530340    4245            anl     ar3,#0x40
1817 E4        4246            clr     a
1818 FD        4247            mov     r5,a
1819 FE        4248            mov     r6,a
181A EA        4249            mov     a,r2
181B 4203      4250            orl     ar3,a
181D EE        4251            mov     a,r6
181E 4205      4252            orl     ar5,a
1820 8B08      4253            mov     _interrupt_pin_settings_reg_data_1_164,r3
1822           4254   L027004?:
1822           4255   ;        bmm150.c:1512: if (desired_settings & BMM150_SEL_DRDY_POLARITY)
1822 E5A8      4256            mov     a,_interrupt_pin_settings_desired_settings_1_163
1824 30E638    4257            jnb     acc.6,L027006?
1827           4258   ;        bmm150.c:1515: reg_data = BMM150_SET_BITS(reg_data, BMM150_DRDY_POLARITY, int_settings.drdy_polarity);
1827 74FB      4259            mov     a,#0xFB
1829 5508      4260            anl     a,_interrupt_pin_settings_reg_data_1_164
182B FA        4261            mov     r2,a
182C AB6A      4262            mov     r3,(_interrupt_pin_settings_int_settings_1_164 + 0x0002)
182E E4        4263            clr     a
182F CB        4264            xch     a,r3
1830 25E0      4265            add     a,acc
1832 CB        4266            xch     a,r3
1833 33        4267            rlc     a
1834 CB        4268            xch     a,r3
1835 25E0      4269            add     a,acc
1837 CB        4270            xch     a,r3
1838 33        4271            rlc     a
1839 530304    4272            anl     ar3,#0x04
183C E4        4273            clr     a
183D FD        4274            mov     r5,a
183E FE        4275            mov     r6,a
183F EA        4276            mov     a,r2
1840 4203      4277            orl     ar3,a
1842 EE        4278            mov     a,r6
1843 4205      4279            orl     ar5,a
1845 8B08      4280            mov     _interrupt_pin_settings_reg_data_1_164,r3
1847           4281   L027006?:
1847           4282   ;        bmm150.c:1518: if (desired_settings & BMM150_SEL_INT_LATCH)
1847 E5A8      4283            mov     a,_interrupt_pin_settings_desired_settings_1_163
1849 30E778    4284            jnb     acc.7,L027008?
184C           4285   ;        bmm150.c:1521: reg_data = BMM150_SET_BITS(reg_data, BMM150_INT_LATCH, int_settings.int_latch);
184C 74FD      4286            mov     a,#0xFD
184E 5508      4287            anl     a,_interrupt_pin_settings_reg_data_1_164
1850 FA        4288            mov     r2,a
1851 AB6B      4289            mov     r3,(_interrupt_pin_settings_int_settings_1_164 + 0x0003)
1853 E4        4290            clr     a
1854 CB        4291            xch     a,r3
1855 25E0      4292            add     a,acc
1857 CB        4293            xch     a,r3
1858 33        4294            rlc     a
1859 530302    4295            anl     ar3,#0x02
185C E4        4296            clr     a
185D FD        4297            mov     r5,a
185E FE        4298            mov     r6,a
185F EA        4299            mov     a,r2
1860 4203      4300            orl     ar3,a
1862 EE        4301            mov     a,r6
1863 4205      4302            orl     ar5,a
1865 8B08      4303            mov     _interrupt_pin_settings_reg_data_1_164,r3
1867           4304   L027008?:
1867           4305   ;        bmm150.c:1524: if (desired_settings & BMM150_SEL_INT_POLARITY)
1867 E5A9      4306            mov     a,(_interrupt_pin_settings_desired_settings_1_163 + 1)
1869 30E0B8    4307            jnb     acc.0,L027010?
186C           4308   ;        bmm150.c:1527: reg_data = BMM150_SET_BITS_POS_0(reg_data, BMM150_INT_POLARITY, int_settings.int_polarity);
186C 74FE      4309            mov     a,#0xFE
186E 5508      4310            anl     a,_interrupt_pin_settings_reg_data_1_164
1870 FA        4311            mov     r2,a
1871 AB6C      4312            mov     r3,(_interrupt_pin_settings_int_settings_1_164 + 0x0004)
1873 530301    4313            anl     ar3,#0x01
1876 E4        4314            clr     a
1877 FD        4315            mov     r5,a
1878 FE        4316            mov     r6,a
1879 EA        4317            mov     a,r2
187A 4203      4318            orl     ar3,a
187C EE        4319            mov     a,r6
187D 4205      4320            orl     ar5,a
187F 8B08      4321            mov     _interrupt_pin_settings_reg_data_1_164,r3
1881           4322   L027010?:
1881           4323   ;        bmm150.c:1531: rslt = bmm150_set_regs(BMM150_REG_AXES_ENABLE, &reg_data, 1, dev);
1881 750008    4324            mov     _bmm150_set_regs_PARM_2,#_interrupt_pin_settings_reg_data_1_164
1884 750100    4325            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
1887 750240    4326            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
188A 75B001    4327            mov     _bmm150_set_regs_PARM_3,#0x01
188D E4        4328            clr     a
188E F5B1      4329            mov     (_bmm150_set_regs_PARM_3 + 1),a
1890 F5B2      4330            mov     (_bmm150_set_regs_PARM_3 + 2),a
1892 F5B3      4331            mov     (_bmm150_set_regs_PARM_3 + 3),a
1894 854860    4332            mov     _bmm150_set_regs_PARM_4,_interrupt_pin_settings_PARM_3
1897 854961    4333            mov     (_bmm150_set_regs_PARM_4 + 1),(_interrupt_pin_settings_PARM_3 + 1)
189A 854A62    4334            mov     (_bmm150_set_regs_PARM_4 + 2),(_interrupt_pin_settings_PARM_3 + 2)
189D 75824E    4335            mov     dpl,#0x4E
18A0 120000    4336            lcall   _bmm150_set_regs
18A3 AC82      4337            mov     r4,dpl
18A5           4338   L027012?:
18A5           4339   ;        bmm150.c:1534: return rslt;
18A5 8C82      4340            mov     dpl,r4
18A7 22        4341            ret
18A8           4342   ;------------------------------------------------------------
18A8           4343   ;Allocation info for local variables in function 'interrupt_config'
18A8           4344   ;------------------------------------------------------------
18A8           4345   ;settings                  Allocated with name '_interrupt_config_PARM_2'
18A8           4346   ;dev                       Allocated with name '_interrupt_config_PARM_3'
18A8           4347   ;desired_settings          Allocated with name '_interrupt_config_desired_settings_1_171'
18A8           4348   ;rslt                      Allocated to registers r4 
18A8           4349   ;reg_data                  Allocated with name '_interrupt_config_reg_data_1_172'
18A8           4350   ;int_settings              Allocated with name '_interrupt_config_int_settings_1_172'
18A8           4351   ;sloc0                     Allocated with name '_interrupt_config_sloc0_1_0'
18A8           4352   ;------------------------------------------------------------
18A8           4353   ;        bmm150.c:1543: __xdata static int8_t interrupt_config(uint16_t desired_settings, const struct bmm150_settings *settings,
18A8           4354   ;        -----------------------------------------
18A8           4355   ;         function interrupt_config
18A8           4356   ;        -----------------------------------------
18A8           4357   _interrupt_config:
18A8 8582C8    4358            mov     _interrupt_config_desired_settings_1_171,dpl
18AB 8583C9    4359            mov     (_interrupt_config_desired_settings_1_171 + 1),dph
18AE           4360   ;        bmm150.c:1550: rslt = bmm150_get_regs(BMM150_REG_INT_CONFIG, &reg_data, 1, dev);
18AE C068      4361            push    _interrupt_config_PARM_3
18B0 C069      4362            push    (_interrupt_config_PARM_3 + 1)
18B2 C06A      4363            push    (_interrupt_config_PARM_3 + 2)
18B4 7401      4364            mov     a,#0x01
18B6 C0E0      4365            push    acc
18B8 E4        4366            clr     a
18B9 C0E0      4367            push    acc
18BB C0E0      4368            push    acc
18BD C0E0      4369            push    acc
18BF 7428      4370            mov     a,#_interrupt_config_reg_data_1_172
18C1 C0E0      4371            push    acc
18C3 745D      4372            mov     a,#(_interrupt_config_reg_data_1_172 >> 8)
18C5 C0E0      4373            push    acc
18C7 7440      4374            mov     a,#0x40
18C9 C0E0      4375            push    acc
18CB 75824D    4376            mov     dpl,#0x4D
18CE 120000    4377            lcall   _bmm150_get_regs
18D1 AC82      4378            mov     r4,dpl
18D3 E581      4379            mov     a,sp
18D5 24F6      4380            add     a,#0xf6
18D7 F581      4381            mov     sp,a
18D9           4382   ;        bmm150.c:1552: if (rslt == BMM150_OK)
18D9 EC        4383            mov     a,r4
18DA 6000      4384            jz      L028018?
18DC 020000    4385            ljmp    L028010?
18DF           4386   L028018?:
18DF           4387   ;        bmm150.c:1555: int_settings.drdy_pin_en = settings->int_settings.drdy_pin_en;
18DF 8518D8    4388            mov     _interrupt_config_sloc0_1_0,_interrupt_config_PARM_2
18E2 8519D9    4389            mov     (_interrupt_config_sloc0_1_0 + 1),(_interrupt_config_PARM_2 + 1)
18E5 851ADA    4390            mov     (_interrupt_config_sloc0_1_0 + 2),(_interrupt_config_PARM_2 + 2)
18E8 7406      4391            mov     a,#0x06
18EA 25D8      4392            add     a,_interrupt_config_sloc0_1_0
18EC FA        4393            mov     r2,a
18ED E4        4394            clr     a
18EE 35D9      4395            addc    a,(_interrupt_config_sloc0_1_0 + 1)
18F0 FB        4396            mov     r3,a
18F1 ADDA      4397            mov     r5,(_interrupt_config_sloc0_1_0 + 2)
18F3 8A82      4398            mov     dpl,r2
18F5 8B83      4399            mov     dph,r3
18F7 8DF0      4400            mov     b,r5
18F9 120000    4401            lcall   __gptrget
18FC FA        4402            mov     r2,a
18FD 8A88      4403            mov     _interrupt_config_int_settings_1_172,r2
18FF           4404   ;        bmm150.c:1556: int_settings.int_pin_en = settings->int_settings.int_pin_en;
18FF 7407      4405            mov     a,#0x07
1901 25D8      4406            add     a,_interrupt_config_sloc0_1_0
1903 FA        4407            mov     r2,a
1904 E4        4408            clr     a
1905 35D9      4409            addc    a,(_interrupt_config_sloc0_1_0 + 1)
1907 FB        4410            mov     r3,a
1908 ADDA      4411            mov     r5,(_interrupt_config_sloc0_1_0 + 2)
190A 8A82      4412            mov     dpl,r2
190C 8B83      4413            mov     dph,r3
190E 8DF0      4414            mov     b,r5
1910 120000    4415            lcall   __gptrget
1913 FA        4416            mov     r2,a
1914 8A89      4417            mov     (_interrupt_config_int_settings_1_172 + 0x0001),r2
1916           4418   ;        bmm150.c:1557: int_settings.drdy_polarity = settings->int_settings.drdy_polarity;
1916 7408      4419            mov     a,#0x08
1918 25D8      4420            add     a,_interrupt_config_sloc0_1_0
191A FA        4421            mov     r2,a
191B E4        4422            clr     a
191C 35D9      4423            addc    a,(_interrupt_config_sloc0_1_0 + 1)
191E FB        4424            mov     r3,a
191F ADDA      4425            mov     r5,(_interrupt_config_sloc0_1_0 + 2)
1921 8A82      4426            mov     dpl,r2
1923 8B83      4427            mov     dph,r3
1925 8DF0      4428            mov     b,r5
1927 120000    4429            lcall   __gptrget
192A FA        4430            mov     r2,a
192B 8A8A      4431            mov     (_interrupt_config_int_settings_1_172 + 0x0002),r2
192D           4432   ;        bmm150.c:1558: int_settings.int_polarity = settings->int_settings.int_polarity;
192D 740A      4433            mov     a,#0x0A
192F 25D8      4434            add     a,_interrupt_config_sloc0_1_0
1931 FA        4435            mov     r2,a
1932 E4        4436            clr     a
1933 35D9      4437            addc    a,(_interrupt_config_sloc0_1_0 + 1)
1935 FB        4438            mov     r3,a
1936 ADDA      4439            mov     r5,(_interrupt_config_sloc0_1_0 + 2)
1938 8A82      4440            mov     dpl,r2
193A 8B83      4441            mov     dph,r3
193C 8DF0      4442            mov     b,r5
193E 120000    4443            lcall   __gptrget
1941 FA        4444            mov     r2,a
1942 8A8C      4445            mov     (_interrupt_config_int_settings_1_172 + 0x0004),r2
1944           4446   ;        bmm150.c:1560: if (desired_settings & BMM150_SEL_DATA_OVERRUN_INT)
1944 E5C9      4447            mov     a,(_interrupt_config_desired_settings_1_171 + 1)
1946 30E178    4448            jnb     acc.1,L028002?
1949           4449   ;        bmm150.c:1563: reg_data = BMM150_SET_BITS(reg_data, BMM150_DATA_OVERRUN_INT, int_settings.data_overrun_en);
1949 747F      4450            mov     a,#0x7F
194B 5528      4451            anl     a,_interrupt_config_reg_data_1_172
194D FA        4452            mov     r2,a
194E AB8D      4453            mov     r3,(_interrupt_config_int_settings_1_172 + 0x0005)
1950 E4        4454            clr     a
1951 5401      4455            anl     a,#0x01
1953 A2E0      4456            mov     c,acc.0
1955 CB        4457            xch     a,r3
1956 13        4458            rrc     a
1957 CB        4459            xch     a,r3
1958 13        4460            rrc     a
1959 CB        4461            xch     a,r3
195A 530380    4462            anl     ar3,#0x80
195D E4        4463            clr     a
195E FD        4464            mov     r5,a
195F FE        4465            mov     r6,a
1960 EA        4466            mov     a,r2
1961 4203      4467            orl     ar3,a
1963 EE        4468            mov     a,r6
1964 4205      4469            orl     ar5,a
1966 8B28      4470            mov     _interrupt_config_reg_data_1_172,r3
1968           4471   L028002?:
1968           4472   ;        bmm150.c:1566: if (desired_settings & BMM150_SEL_OVERFLOW_INT)
1968 E5C9      4473            mov     a,(_interrupt_config_desired_settings_1_171 + 1)
196A 30E2B8    4474            jnb     acc.2,L028004?
196D           4475   ;        bmm150.c:1569: reg_data = BMM150_SET_BITS(reg_data, BMM150_OVERFLOW_INT, int_settings.overflow_int_en);
196D 74BF      4476            mov     a,#0xBF
196F 5528      4477            anl     a,_interrupt_config_reg_data_1_172
1971 FA        4478            mov     r2,a
1972 AB8E      4479            mov     r3,(_interrupt_config_int_settings_1_172 + 0x0006)
1974 E4        4480            clr     a
1975 5403      4481            anl     a,#0x03
1977 A2E0      4482            mov     c,acc.0
1979 CB        4483            xch     a,r3
197A 13        4484            rrc     a
197B CB        4485            xch     a,r3
197C 13        4486            rrc     a
197D A2E0      4487            mov     c,acc.0
197F CB        4488            xch     a,r3
1980 13        4489            rrc     a
1981 CB        4490            xch     a,r3
1982 13        4491            rrc     a
1983 CB        4492            xch     a,r3
1984 530340    4493            anl     ar3,#0x40
1987 E4        4494            clr     a
1988 FD        4495            mov     r5,a
1989 FE        4496            mov     r6,a
198A EA        4497            mov     a,r2
198B 4203      4498            orl     ar3,a
198D EE        4499            mov     a,r6
198E 4205      4500            orl     ar5,a
1990 8B28      4501            mov     _interrupt_config_reg_data_1_172,r3
1992           4502   L028004?:
1992           4503   ;        bmm150.c:1572: if (desired_settings & BMM150_SEL_HIGH_THRESHOLD_INT)
1992 E5C9      4504            mov     a,(_interrupt_config_desired_settings_1_171 + 1)
1994 30E3F8    4505            jnb     acc.3,L028006?
1997           4506   ;        bmm150.c:1575: reg_data = BMM150_SET_BITS(reg_data, BMM150_HIGH_THRESHOLD_INT, int_settings.high_int_en);
1997 74C7      4507            mov     a,#0xC7
1999 5528      4508            anl     a,_interrupt_config_reg_data_1_172
199B FA        4509            mov     r2,a
199C AB8F      4510            mov     r3,(_interrupt_config_int_settings_1_172 + 0x0007)
199E E4        4511            clr     a
199F C4        4512            swap    a
19A0 03        4513            rr      a
19A1 54F8      4514            anl     a,#0xf8
19A3 CB        4515            xch     a,r3
19A4 C4        4516            swap    a
19A5 03        4517            rr      a
19A6 CB        4518            xch     a,r3
19A7 6B        4519            xrl     a,r3
19A8 CB        4520            xch     a,r3
19A9 54F8      4521            anl     a,#0xf8
19AB CB        4522            xch     a,r3
19AC 6B        4523            xrl     a,r3
19AD 530338    4524            anl     ar3,#0x38
19B0 E4        4525            clr     a
19B1 FD        4526            mov     r5,a
19B2 FE        4527            mov     r6,a
19B3 EA        4528            mov     a,r2
19B4 4203      4529            orl     ar3,a
19B6 EE        4530            mov     a,r6
19B7 4205      4531            orl     ar5,a
19B9 8B28      4532            mov     _interrupt_config_reg_data_1_172,r3
19BB           4533   L028006?:
19BB           4534   ;        bmm150.c:1578: if (desired_settings & BMM150_SEL_LOW_THRESHOLD_INT)
19BB E5C9      4535            mov     a,(_interrupt_config_desired_settings_1_171 + 1)
19BD 30E438    4536            jnb     acc.4,L028008?
19C0           4537   ;        bmm150.c:1581: reg_data = BMM150_SET_BITS_POS_0(reg_data, BMM150_LOW_THRESHOLD_INT, int_settings.low_int_en);
19C0 74F8      4538            mov     a,#0xF8
19C2 5528      4539            anl     a,_interrupt_config_reg_data_1_172
19C4 FA        4540            mov     r2,a
19C5 AB90      4541            mov     r3,(_interrupt_config_int_settings_1_172 + 0x0008)
19C7 530307    4542            anl     ar3,#0x07
19CA E4        4543            clr     a
19CB FD        4544            mov     r5,a
19CC FE        4545            mov     r6,a
19CD EA        4546            mov     a,r2
19CE 4203      4547            orl     ar3,a
19D0 EE        4548            mov     a,r6
19D1 4205      4549            orl     ar5,a
19D3 8B28      4550            mov     _interrupt_config_reg_data_1_172,r3
19D5           4551   L028008?:
19D5           4552   ;        bmm150.c:1585: rslt = bmm150_set_regs(BMM150_REG_INT_CONFIG, &reg_data, 1, dev);
19D5 750028    4553            mov     _bmm150_set_regs_PARM_2,#_interrupt_config_reg_data_1_172
19D8 750100    4554            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
19DB 750240    4555            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
19DE 75B001    4556            mov     _bmm150_set_regs_PARM_3,#0x01
19E1 E4        4557            clr     a
19E2 F5B1      4558            mov     (_bmm150_set_regs_PARM_3 + 1),a
19E4 F5B2      4559            mov     (_bmm150_set_regs_PARM_3 + 2),a
19E6 F5B3      4560            mov     (_bmm150_set_regs_PARM_3 + 3),a
19E8 856860    4561            mov     _bmm150_set_regs_PARM_4,_interrupt_config_PARM_3
19EB 856961    4562            mov     (_bmm150_set_regs_PARM_4 + 1),(_interrupt_config_PARM_3 + 1)
19EE 856A62    4563            mov     (_bmm150_set_regs_PARM_4 + 2),(_interrupt_config_PARM_3 + 2)
19F1 75824D    4564            mov     dpl,#0x4D
19F4 120000    4565            lcall   _bmm150_set_regs
19F7 AC82      4566            mov     r4,dpl
19F9           4567   L028010?:
19F9           4568   ;        bmm150.c:1588: return rslt;
19F9 8C82      4569            mov     dpl,r4
19FB 22        4570            ret
19FC           4571   ;------------------------------------------------------------
19FC           4572   ;Allocation info for local variables in function 'interrupt_threshold_settings'
19FC           4573   ;------------------------------------------------------------
19FC           4574   ;settings                  Allocated with name '_interrupt_threshold_settings_PARM_2'
19FC           4575   ;dev                       Allocated with name '_interrupt_threshold_settings_PARM_3'
19FC           4576   ;desired_settings          Allocated to registers r2 r3 
19FC           4577   ;rslt                      Allocated to registers r4 
19FC           4578   ;reg_data                  Allocated with name '_interrupt_threshold_settings_reg_data_1_179'
19FC           4579   ;------------------------------------------------------------
19FC           4580   ;        bmm150.c:1595: __xdata static int8_t interrupt_threshold_settings(uint16_t desired_settings,
19FC           4581   ;        -----------------------------------------
19FC           4582   ;         function interrupt_threshold_settings
19FC           4583   ;        -----------------------------------------
19FC           4584   _interrupt_threshold_settings:
19FC AA82      4585            mov     r2,dpl
19FE AB83      4586            mov     r3,dph
1A00           4587   ;        bmm150.c:1599: int8_t rslt = BMM150_E_INVALID_CONFIG;
1A00 7CFD      4588            mov     r4,#0xFD
1A02           4589   ;        bmm150.c:1602: if (desired_settings & BMM150_SEL_LOW_THRESHOLD_SETTING)
1A02 EB        4590            mov     a,r3
1A03 30E578    4591            jnb     acc.5,L029002?
1A06           4592   ;        bmm150.c:1605: reg_data = settings->int_settings.low_threshold;
1A06 740F      4593            mov     a,#0x0F
1A08 2538      4594            add     a,_interrupt_threshold_settings_PARM_2
1A0A FD        4595            mov     r5,a
1A0B E4        4596            clr     a
1A0C 3539      4597            addc    a,(_interrupt_threshold_settings_PARM_2 + 1)
1A0E FE        4598            mov     r6,a
1A0F AF3A      4599            mov     r7,(_interrupt_threshold_settings_PARM_2 + 2)
1A11 8D82      4600            mov     dpl,r5
1A13 8E83      4601            mov     dph,r6
1A15 8FF0      4602            mov     b,r7
1A17 120000    4603            lcall   __gptrget
1A1A F5F8      4604            mov     _interrupt_threshold_settings_reg_data_1_179,a
1A1C           4605   ;        bmm150.c:1606: rslt = bmm150_set_regs(BMM150_REG_LOW_THRESHOLD, &reg_data, 1, dev);
1A1C 7500F8    4606            mov     _bmm150_set_regs_PARM_2,#_interrupt_threshold_settings_reg_data_1_179
1A1F 750100    4607            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
1A22 750240    4608            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
1A25 75B001    4609            mov     _bmm150_set_regs_PARM_3,#0x01
1A28 E4        4610            clr     a
1A29 F5B1      4611            mov     (_bmm150_set_regs_PARM_3 + 1),a
1A2B F5B2      4612            mov     (_bmm150_set_regs_PARM_3 + 2),a
1A2D F5B3      4613            mov     (_bmm150_set_regs_PARM_3 + 3),a
1A2F 859860    4614            mov     _bmm150_set_regs_PARM_4,_interrupt_threshold_settings_PARM_3
1A32 859961    4615            mov     (_bmm150_set_regs_PARM_4 + 1),(_interrupt_threshold_settings_PARM_3 + 1)
1A35 859A62    4616            mov     (_bmm150_set_regs_PARM_4 + 2),(_interrupt_threshold_settings_PARM_3 + 2)
1A38 75824F    4617            mov     dpl,#0x4F
1A3B C002      4618            push    ar2
1A3D C003      4619            push    ar3
1A3F 120000    4620            lcall   _bmm150_set_regs
1A42 AC82      4621            mov     r4,dpl
1A44 D003      4622            pop     ar3
1A46 D002      4623            pop     ar2
1A48           4624   L029002?:
1A48           4625   ;        bmm150.c:1609: if (desired_settings & BMM150_SEL_HIGH_THRESHOLD_SETTING)
1A48 EB        4626            mov     a,r3
1A49 30E6B8    4627            jnb     acc.6,L029004?
1A4C           4628   ;        bmm150.c:1612: reg_data = settings->int_settings.high_threshold;
1A4C 7410      4629            mov     a,#0x10
1A4E 2538      4630            add     a,_interrupt_threshold_settings_PARM_2
1A50 FA        4631            mov     r2,a
1A51 E4        4632            clr     a
1A52 3539      4633            addc    a,(_interrupt_threshold_settings_PARM_2 + 1)
1A54 FB        4634            mov     r3,a
1A55 AD3A      4635            mov     r5,(_interrupt_threshold_settings_PARM_2 + 2)
1A57 8A82      4636            mov     dpl,r2
1A59 8B83      4637            mov     dph,r3
1A5B 8DF0      4638            mov     b,r5
1A5D 120000    4639            lcall   __gptrget
1A60 F5F8      4640            mov     _interrupt_threshold_settings_reg_data_1_179,a
1A62           4641   ;        bmm150.c:1613: rslt = bmm150_set_regs(BMM150_REG_HIGH_THRESHOLD, &reg_data, 1, dev);
1A62 7500F8    4642            mov     _bmm150_set_regs_PARM_2,#_interrupt_threshold_settings_reg_data_1_179
1A65 750100    4643            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
1A68 750240    4644            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
1A6B 75B001    4645            mov     _bmm150_set_regs_PARM_3,#0x01
1A6E E4        4646            clr     a
1A6F F5B1      4647            mov     (_bmm150_set_regs_PARM_3 + 1),a
1A71 F5B2      4648            mov     (_bmm150_set_regs_PARM_3 + 2),a
1A73 F5B3      4649            mov     (_bmm150_set_regs_PARM_3 + 3),a
1A75 859860    4650            mov     _bmm150_set_regs_PARM_4,_interrupt_threshold_settings_PARM_3
1A78 859961    4651            mov     (_bmm150_set_regs_PARM_4 + 1),(_interrupt_threshold_settings_PARM_3 + 1)
1A7B 859A62    4652            mov     (_bmm150_set_regs_PARM_4 + 2),(_interrupt_threshold_settings_PARM_3 + 2)
1A7E 758250    4653            mov     dpl,#0x50
1A81 120000    4654            lcall   _bmm150_set_regs
1A84 AC82      4655            mov     r4,dpl
1A86           4656   L029004?:
1A86           4657   ;        bmm150.c:1616: return rslt;
1A86 8C82      4658            mov     dpl,r4
1A88 22        4659            ret
1A89           4660   ;------------------------------------------------------------
1A89           4661   ;Allocation info for local variables in function 'compensate_x'
1A89           4662   ;------------------------------------------------------------
1A89           4663   ;data_rhall                Allocated with name '_compensate_x_PARM_2'
1A89           4664   ;dev                       Allocated with name '_compensate_x_PARM_3'
1A89           4665   ;mag_data_x                Allocated with name '_compensate_x_mag_data_x_1_182'
1A89           4666   ;retval                    Allocated with name '_compensate_x_retval_1_183'
1A89           4667   ;process_comp_x0           Allocated with name '_compensate_x_process_comp_x0_1_183'
1A89           4668   ;process_comp_x1           Allocated to registers r2 r3 r4 r5 
1A89           4669   ;process_comp_x2           Allocated to registers 
1A89           4670   ;process_comp_x3           Allocated with name '_compensate_x_process_comp_x3_1_183'
1A89           4671   ;process_comp_x4           Allocated with name '_compensate_x_process_comp_x4_1_183'
1A89           4672   ;process_comp_x5           Allocated to registers 
1A89           4673   ;process_comp_x6           Allocated to registers r2 r3 r4 r5 
1A89           4674   ;process_comp_x7           Allocated to registers r2 r3 r4 r5 
1A89           4675   ;process_comp_x8           Allocated to registers 
1A89           4676   ;process_comp_x9           Allocated to registers 
1A89           4677   ;process_comp_x10          Allocated to registers r2 r3 r4 r5 
1A89           4678   ;sloc0                     Allocated with name '_compensate_x_sloc0_1_0'
1A89           4679   ;sloc1                     Allocated with name '_compensate_x_sloc1_1_0'
1A89           4680   ;------------------------------------------------------------
1A89           4681   ;        bmm150.c:1731: __xdata static int16_t compensate_x(int16_t mag_data_x, uint16_t data_rhall, const struct bmm150_dev *dev)
1A89           4682   ;        -----------------------------------------
1A89           4683   ;         function compensate_x
1A89           4684   ;        -----------------------------------------
1A89           4685   _compensate_x:
1A89 8582E8    4686            mov     _compensate_x_mag_data_x_1_182,dpl
1A8C 8583E9    4687            mov     (_compensate_x_mag_data_x_1_182 + 1),dph
1A8F           4688   ;        bmm150.c:1747: if (mag_data_x != BMM150_OVERFLOW_ADCVAL_XYAXES_FLIP)
1A8F E4        4689            clr     a
1A90 B5E8F8    4690            cjne    a,_compensate_x_mag_data_x_1_182,L030019?
1A93 74F0      4691            mov     a,#0xF0
1A95 B5E9F8    4692            cjne    a,(_compensate_x_mag_data_x_1_182 + 1),L030019?
1A98 020000    4693            ljmp    L030011?
1A9B           4694   L030019?:
1A9B           4695   ;        bmm150.c:1749: if (data_rhall != 0)
1A9B E548      4696            mov     a,_compensate_x_PARM_2
1A9D 4549      4697            orl     a,(_compensate_x_PARM_2 + 1)
1A9F 6000      4698            jz      L030005?
1AA1           4699   ;        bmm150.c:1752: process_comp_x0 = data_rhall;
1AA1 854898    4700            mov     _compensate_x_process_comp_x0_1_183,_compensate_x_PARM_2
1AA4 854999    4701            mov     (_compensate_x_process_comp_x0_1_183 + 1),(_compensate_x_PARM_2 + 1)
1AA7 8000      4702            sjmp    L030006?
1AA9           4703   L030005?:
1AA9           4704   ;        bmm150.c:1754: else if (dev->trim_data.dig_xyz1 != 0)
1AA9 741A      4705            mov     a,#0x1A
1AAB 2598      4706            add     a,_compensate_x_PARM_3
1AAD FE        4707            mov     r6,a
1AAE E4        4708            clr     a
1AAF 3599      4709            addc    a,(_compensate_x_PARM_3 + 1)
1AB1 FF        4710            mov     r7,a
1AB2 A89A      4711            mov     r0,(_compensate_x_PARM_3 + 2)
1AB4 8E82      4712            mov     dpl,r6
1AB6 8F83      4713            mov     dph,r7
1AB8 88F0      4714            mov     b,r0
1ABA 120000    4715            lcall   __gptrget
1ABD FE        4716            mov     r6,a
1ABE A3        4717            inc     dptr
1ABF 120000    4718            lcall   __gptrget
1AC2 FF        4719            mov     r7,a
1AC3 4E        4720            orl     a,r6
1AC4 6000      4721            jz      L030002?
1AC6           4722   ;        bmm150.c:1756: process_comp_x0 = dev->trim_data.dig_xyz1;
1AC6 8E98      4723            mov     _compensate_x_process_comp_x0_1_183,r6
1AC8 8F99      4724            mov     (_compensate_x_process_comp_x0_1_183 + 1),r7
1ACA 8000      4725            sjmp    L030006?
1ACC           4726   L030002?:
1ACC           4727   ;        bmm150.c:1760: process_comp_x0 = 0;
1ACC E4        4728            clr     a
1ACD F598      4729            mov     _compensate_x_process_comp_x0_1_183,a
1ACF F599      4730            mov     (_compensate_x_process_comp_x0_1_183 + 1),a
1AD1           4731   L030006?:
1AD1           4732   ;        bmm150.c:1763: if (process_comp_x0 != 0)
1AD1 E598      4733            mov     a,_compensate_x_process_comp_x0_1_183
1AD3 4599      4734            orl     a,(_compensate_x_process_comp_x0_1_183 + 1)
1AD5 7000      4735            jnz     L030022?
1AD7 020000    4736            ljmp    L030008?
1ADA           4737   L030022?:
1ADA           4738   ;        bmm150.c:1766: process_comp_x1 = ((int32_t)dev->trim_data.dig_xyz1) * 16384;
1ADA AE98      4739            mov     r6,_compensate_x_PARM_3
1ADC AF99      4740            mov     r7,(_compensate_x_PARM_3 + 1)
1ADE A89A      4741            mov     r0,(_compensate_x_PARM_3 + 2)
1AE0 740C      4742            mov     a,#0x0C
1AE2 2E        4743            add     a,r6
1AE3 F5A8      4744            mov     _compensate_x_sloc0_1_0,a
1AE5 E4        4745            clr     a
1AE6 3F        4746            addc    a,r7
1AE7 F5A9      4747            mov     (_compensate_x_sloc0_1_0 + 1),a
1AE9 88AA      4748            mov     (_compensate_x_sloc0_1_0 + 2),r0
1AEB 741A      4749            mov     a,#0x1A
1AED 2E        4750            add     a,r6
1AEE FA        4751            mov     r2,a
1AEF E4        4752            clr     a
1AF0 3F        4753            addc    a,r7
1AF1 FB        4754            mov     r3,a
1AF2 8804      4755            mov     ar4,r0
1AF4 8A82      4756            mov     dpl,r2
1AF6 8B83      4757            mov     dph,r3
1AF8 8CF0      4758            mov     b,r4
1AFA 120000    4759            lcall   __gptrget
1AFD FA        4760            mov     r2,a
1AFE A3        4761            inc     dptr
1AFF 120000    4762            lcall   __gptrget
1B02 FB        4763            mov     r3,a
1B03 E4        4764            clr     a
1B04 FC        4765            mov     r4,a
1B05 EB        4766            mov     a,r3
1B06 CC        4767            xch     a,r4
1B07 5403      4768            anl     a,#0x03
1B09 A2E0      4769            mov     c,acc.0
1B0B CC        4770            xch     a,r4
1B0C 13        4771            rrc     a
1B0D CC        4772            xch     a,r4
1B0E 13        4773            rrc     a
1B0F A2E0      4774            mov     c,acc.0
1B11 CC        4775            xch     a,r4
1B12 13        4776            rrc     a
1B13 CC        4777            xch     a,r4
1B14 13        4778            rrc     a
1B15 CC        4779            xch     a,r4
1B16 FD        4780            mov     r5,a
1B17 EA        4781            mov     a,r2
1B18 03        4782            rr      a
1B19 03        4783            rr      a
1B1A 54C0      4784            anl     a,#0xc0
1B1C FB        4785            mov     r3,a
1B1D EA        4786            mov     a,r2
1B1E 03        4787            rr      a
1B1F 03        4788            rr      a
1B20 543F      4789            anl     a,#0x3f
1B22 4C        4790            orl     a,r4
1B23 FC        4791            mov     r4,a
1B24 7A00      4792            mov     r2,#0x00
1B26           4793   ;        bmm150.c:1767: process_comp_x2 = ((uint16_t)(process_comp_x1 / process_comp_x0)) - ((uint16_t)0x4000);
1B26 859800    4794            mov     __divslong_PARM_2,_compensate_x_process_comp_x0_1_183
1B29 859901    4795            mov     (__divslong_PARM_2 + 1),(_compensate_x_process_comp_x0_1_183 + 1)
1B2C 750200    4796            mov     (__divslong_PARM_2 + 2),#0x00
1B2F 750300    4797            mov     (__divslong_PARM_2 + 3),#0x00
1B32 8A82      4798            mov     dpl,r2
1B34 8B83      4799            mov     dph,r3
1B36 8CF0      4800            mov     b,r4
1B38 ED        4801            mov     a,r5
1B39 C006      4802            push    ar6
1B3B C007      4803            push    ar7
1B3D C000      4804            push    ar0
1B3F 120000    4805            lcall   __divslong
1B42 AA82      4806            mov     r2,dpl
1B44 AB83      4807            mov     r3,dph
1B46 8A38      4808            mov     _compensate_x_retval_1_183,r2
1B48 EB        4809            mov     a,r3
1B49 24C0      4810            add     a,#0xc0
1B4B           4811   ;        bmm150.c:1769: process_comp_x3 = (((int32_t)retval) * ((int32_t)retval));
1B4B F539      4812            mov     (_compensate_x_retval_1_183 + 1),a
1B4D 8538F8    4813            mov     _compensate_x_sloc1_1_0,_compensate_x_retval_1_183
1B50 F5F9      4814            mov     (_compensate_x_sloc1_1_0 + 1),a
1B52 33        4815            rlc     a
1B53 95E0      4816            subb    a,acc
1B55 F5FA      4817            mov     (_compensate_x_sloc1_1_0 + 2),a
1B57 F5FB      4818            mov     (_compensate_x_sloc1_1_0 + 3),a
1B59 85F800    4819            mov     __mullong_PARM_2,_compensate_x_sloc1_1_0
1B5C 85F901    4820            mov     (__mullong_PARM_2 + 1),(_compensate_x_sloc1_1_0 + 1)
1B5F 85FA02    4821            mov     (__mullong_PARM_2 + 2),(_compensate_x_sloc1_1_0 + 2)
1B62 85FB03    4822            mov     (__mullong_PARM_2 + 3),(_compensate_x_sloc1_1_0 + 3)
1B65 85F882    4823            mov     dpl,_compensate_x_sloc1_1_0
1B68 85F983    4824            mov     dph,(_compensate_x_sloc1_1_0 + 1)
1B6B 85FAF0    4825            mov     b,(_compensate_x_sloc1_1_0 + 2)
1B6E E5FB      4826            mov     a,(_compensate_x_sloc1_1_0 + 3)
1B70 120000    4827            lcall   __mullong
1B73 8582F8    4828            mov     _compensate_x_process_comp_x3_1_183,dpl
1B76 8583F9    4829            mov     (_compensate_x_process_comp_x3_1_183 + 1),dph
1B79 85F0FA    4830            mov     (_compensate_x_process_comp_x3_1_183 + 2),b
1B7C F5FB      4831            mov     (_compensate_x_process_comp_x3_1_183 + 3),a
1B7E D000      4832            pop     ar0
1B80 D007      4833            pop     ar7
1B82 D006      4834            pop     ar6
1B84           4835   ;        bmm150.c:1770: process_comp_x4 = (((int32_t)dev->trim_data.dig_xy2) * (process_comp_x3 / 128));
1B84 7419      4836            mov     a,#0x19
1B86 2E        4837            add     a,r6
1B87 FB        4838            mov     r3,a
1B88 E4        4839            clr     a
1B89 3F        4840            addc    a,r7
1B8A FA        4841            mov     r2,a
1B8B 8804      4842            mov     ar4,r0
1B8D 8B82      4843            mov     dpl,r3
1B8F 8A83      4844            mov     dph,r2
1B91 8CF0      4845            mov     b,r4
1B93 120000    4846            lcall   __gptrget
1B96 FB        4847            mov     r3,a
1B97 33        4848            rlc     a
1B98 95E0      4849            subb    a,acc
1B9A FA        4850            mov     r2,a
1B9B FC        4851            mov     r4,a
1B9C FD        4852            mov     r5,a
1B9D 750080    4853            mov     __divslong_PARM_2,#0x80
1BA0 E4        4854            clr     a
1BA1 F501      4855            mov     (__divslong_PARM_2 + 1),a
1BA3 F502      4856            mov     (__divslong_PARM_2 + 2),a
1BA5 F503      4857            mov     (__divslong_PARM_2 + 3),a
1BA7 85F882    4858            mov     dpl,_compensate_x_process_comp_x3_1_183
1BAA 85F983    4859            mov     dph,(_compensate_x_process_comp_x3_1_183 + 1)
1BAD 85FAF0    4860            mov     b,(_compensate_x_process_comp_x3_1_183 + 2)
1BB0 E5FB      4861            mov     a,(_compensate_x_process_comp_x3_1_183 + 3)
1BB2 C002      4862            push    ar2
1BB4 C003      4863            push    ar3
1BB6 C004      4864            push    ar4
1BB8 C005      4865            push    ar5
1BBA C006      4866            push    ar6
1BBC C007      4867            push    ar7
1BBE C000      4868            push    ar0
1BC0 120000    4869            lcall   __divslong
1BC3 858200    4870            mov     __mullong_PARM_2,dpl
1BC6 858301    4871            mov     (__mullong_PARM_2 + 1),dph
1BC9 85F002    4872            mov     (__mullong_PARM_2 + 2),b
1BCC F503      4873            mov     (__mullong_PARM_2 + 3),a
1BCE D000      4874            pop     ar0
1BD0 D007      4875            pop     ar7
1BD2 D006      4876            pop     ar6
1BD4 D005      4877            pop     ar5
1BD6 D004      4878            pop     ar4
1BD8 D003      4879            pop     ar3
1BDA D002      4880            pop     ar2
1BDC 8B82      4881            mov     dpl,r3
1BDE 8A83      4882            mov     dph,r2
1BE0 8CF0      4883            mov     b,r4
1BE2 ED        4884            mov     a,r5
1BE3 C006      4885            push    ar6
1BE5 C007      4886            push    ar7
1BE7 C000      4887            push    ar0
1BE9 120000    4888            lcall   __mullong
1BEC 858258    4889            mov     _compensate_x_process_comp_x4_1_183,dpl
1BEF 858359    4890            mov     (_compensate_x_process_comp_x4_1_183 + 1),dph
1BF2 85F05A    4891            mov     (_compensate_x_process_comp_x4_1_183 + 2),b
1BF5 F55B      4892            mov     (_compensate_x_process_comp_x4_1_183 + 3),a
1BF7 D000      4893            pop     ar0
1BF9 D007      4894            pop     ar7
1BFB D006      4895            pop     ar6
1BFD           4896   ;        bmm150.c:1771: process_comp_x5 = (int32_t)(((int16_t)dev->trim_data.dig_xy1) * 128);
1BFD 7418      4897            mov     a,#0x18
1BFF 2E        4898            add     a,r6
1C00 F9        4899            mov     r1,a
1C01 E4        4900            clr     a
1C02 3F        4901            addc    a,r7
1C03 FA        4902            mov     r2,a
1C04 8803      4903            mov     ar3,r0
1C06 8982      4904            mov     dpl,r1
1C08 8A83      4905            mov     dph,r2
1C0A 8BF0      4906            mov     b,r3
1C0C 120000    4907            lcall   __gptrget
1C0F F9        4908            mov     r1,a
1C10 E4        4909            clr     a
1C11 5401      4910            anl     a,#0x01
1C13 A2E0      4911            mov     c,acc.0
1C15 C9        4912            xch     a,r1
1C16 13        4913            rrc     a
1C17 C9        4914            xch     a,r1
1C18 13        4915            rrc     a
1C19 C9        4916            xch     a,r1
1C1A 8900      4917            mov     __mullong_PARM_2,r1
1C1C F501      4918            mov     (__mullong_PARM_2 + 1),a
1C1E 33        4919            rlc     a
1C1F 95E0      4920            subb    a,acc
1C21 F502      4921            mov     (__mullong_PARM_2 + 2),a
1C23 F503      4922            mov     (__mullong_PARM_2 + 3),a
1C25           4923   ;        bmm150.c:1772: process_comp_x6 = ((int32_t)retval) * process_comp_x5;
1C25 85F882    4924            mov     dpl,_compensate_x_sloc1_1_0
1C28 85F983    4925            mov     dph,(_compensate_x_sloc1_1_0 + 1)
1C2B 85FAF0    4926            mov     b,(_compensate_x_sloc1_1_0 + 2)
1C2E E5FB      4927            mov     a,(_compensate_x_sloc1_1_0 + 3)
1C30 C006      4928            push    ar6
1C32 C007      4929            push    ar7
1C34 C000      4930            push    ar0
1C36 120000    4931            lcall   __mullong
1C39 AA82      4932            mov     r2,dpl
1C3B AB83      4933            mov     r3,dph
1C3D ACF0      4934            mov     r4,b
1C3F FD        4935            mov     r5,a
1C40           4936   ;        bmm150.c:1773: process_comp_x7 = (((process_comp_x4 + process_comp_x6) / 512) + ((int32_t)0x100000));
1C40 EA        4937            mov     a,r2
1C41 2558      4938            add     a,_compensate_x_process_comp_x4_1_183
1C43 FA        4939            mov     r2,a
1C44 EB        4940            mov     a,r3
1C45 3559      4941            addc    a,(_compensate_x_process_comp_x4_1_183 + 1)
1C47 FB        4942            mov     r3,a
1C48 EC        4943            mov     a,r4
1C49 355A      4944            addc    a,(_compensate_x_process_comp_x4_1_183 + 2)
1C4B FC        4945            mov     r4,a
1C4C ED        4946            mov     a,r5
1C4D 355B      4947            addc    a,(_compensate_x_process_comp_x4_1_183 + 3)
1C4F FD        4948            mov     r5,a
1C50 750000    4949            mov     __divslong_PARM_2,#0x00
1C53 750102    4950            mov     (__divslong_PARM_2 + 1),#0x02
1C56 750200    4951            mov     (__divslong_PARM_2 + 2),#0x00
1C59 750300    4952            mov     (__divslong_PARM_2 + 3),#0x00
1C5C 8A82      4953            mov     dpl,r2
1C5E 8B83      4954            mov     dph,r3
1C60 8CF0      4955            mov     b,r4
1C62 ED        4956            mov     a,r5
1C63 120000    4957            lcall   __divslong
1C66 AA82      4958            mov     r2,dpl
1C68 AB83      4959            mov     r3,dph
1C6A ACF0      4960            mov     r4,b
1C6C FD        4961            mov     r5,a
1C6D D000      4962            pop     ar0
1C6F D007      4963            pop     ar7
1C71 D006      4964            pop     ar6
1C73 7410      4965            mov     a,#0x10
1C75 2C        4966            add     a,r4
1C76 FC        4967            mov     r4,a
1C77 E4        4968            clr     a
1C78 3D        4969            addc    a,r5
1C79 FD        4970            mov     r5,a
1C7A           4971   ;        bmm150.c:1774: process_comp_x8 = ((int32_t)(((int16_t)dev->trim_data.dig_x2) + ((int16_t)0xA0)));
1C7A 740E      4972            mov     a,#0x0E
1C7C 2E        4973            add     a,r6
1C7D FE        4974            mov     r6,a
1C7E E4        4975            clr     a
1C7F 3F        4976            addc    a,r7
1C80 FF        4977            mov     r7,a
1C81 8E82      4978            mov     dpl,r6
1C83 8F83      4979            mov     dph,r7
1C85 88F0      4980            mov     b,r0
1C87 120000    4981            lcall   __gptrget
1C8A FE        4982            mov     r6,a
1C8B 33        4983            rlc     a
1C8C 95E0      4984            subb    a,acc
1C8E FF        4985            mov     r7,a
1C8F 74A0      4986            mov     a,#0xA0
1C91 2E        4987            add     a,r6
1C92 FE        4988            mov     r6,a
1C93 E4        4989            clr     a
1C94 3F        4990            addc    a,r7
1C95 8E00      4991            mov     __mullong_PARM_2,r6
1C97 F501      4992            mov     (__mullong_PARM_2 + 1),a
1C99 33        4993            rlc     a
1C9A 95E0      4994            subb    a,acc
1C9C F502      4995            mov     (__mullong_PARM_2 + 2),a
1C9E F503      4996            mov     (__mullong_PARM_2 + 3),a
1CA0           4997   ;        bmm150.c:1775: process_comp_x9 = ((process_comp_x7 * process_comp_x8) / 4096);
1CA0 8A82      4998            mov     dpl,r2
1CA2 8B83      4999            mov     dph,r3
1CA4 8CF0      5000            mov     b,r4
1CA6 ED        5001            mov     a,r5
1CA7 120000    5002            lcall   __mullong
1CAA 750000    5003            mov     __divslong_PARM_2,#0x00
1CAD 750110    5004            mov     (__divslong_PARM_2 + 1),#0x10
1CB0 750200    5005            mov     (__divslong_PARM_2 + 2),#0x00
1CB3 750300    5006            mov     (__divslong_PARM_2 + 3),#0x00
1CB6 120000    5007            lcall   __divslong
1CB9 858200    5008            mov     __mullong_PARM_2,dpl
1CBC 858301    5009            mov     (__mullong_PARM_2 + 1),dph
1CBF 85F002    5010            mov     (__mullong_PARM_2 + 2),b
1CC2 F503      5011            mov     (__mullong_PARM_2 + 3),a
1CC4           5012   ;        bmm150.c:1776: process_comp_x10 = ((int32_t)mag_data_x) * process_comp_x9;
1CC4 AAE8      5013            mov     r2,_compensate_x_mag_data_x_1_182
1CC6 E5E9      5014            mov     a,(_compensate_x_mag_data_x_1_182 + 1)
1CC8 FB        5015            mov     r3,a
1CC9 33        5016            rlc     a
1CCA 95E0      5017            subb    a,acc
1CCC FC        5018            mov     r4,a
1CCD 8A82      5019            mov     dpl,r2
1CCF 8B83      5020            mov     dph,r3
1CD1 8CF0      5021            mov     b,r4
1CD3 120000    5022            lcall   __mullong
1CD6           5023   ;        bmm150.c:1777: retval = ((int16_t)(process_comp_x10 / 8192));
1CD6 750000    5024            mov     __divslong_PARM_2,#0x00
1CD9 750120    5025            mov     (__divslong_PARM_2 + 1),#0x20
1CDC 750200    5026            mov     (__divslong_PARM_2 + 2),#0x00
1CDF 750300    5027            mov     (__divslong_PARM_2 + 3),#0x00
1CE2 120000    5028            lcall   __divslong
1CE5 AA82      5029            mov     r2,dpl
1CE7 AB83      5030            mov     r3,dph
1CE9 8A38      5031            mov     _compensate_x_retval_1_183,r2
1CEB 8B39      5032            mov     (_compensate_x_retval_1_183 + 1),r3
1CED           5033   ;        bmm150.c:1778: retval = (retval + (((int16_t)dev->trim_data.dig_x1) * 8)) / 16;
1CED 85A882    5034            mov     dpl,_compensate_x_sloc0_1_0
1CF0 85A983    5035            mov     dph,(_compensate_x_sloc0_1_0 + 1)
1CF3 85AAF0    5036            mov     b,(_compensate_x_sloc0_1_0 + 2)
1CF6 120000    5037            lcall   __gptrget
1CF9 FA        5038            mov     r2,a
1CFA 33        5039            rlc     a
1CFB 95E0      5040            subb    a,acc
1CFD C4        5041            swap    a
1CFE 03        5042            rr      a
1CFF 54F8      5043            anl     a,#0xf8
1D01 CA        5044            xch     a,r2
1D02 C4        5045            swap    a
1D03 03        5046            rr      a
1D04 CA        5047            xch     a,r2
1D05 6A        5048            xrl     a,r2
1D06 CA        5049            xch     a,r2
1D07 54F8      5050            anl     a,#0xf8
1D09 CA        5051            xch     a,r2
1D0A 6A        5052            xrl     a,r2
1D0B FB        5053            mov     r3,a
1D0C EA        5054            mov     a,r2
1D0D 2538      5055            add     a,_compensate_x_retval_1_183
1D0F F582      5056            mov     dpl,a
1D11 EB        5057            mov     a,r3
1D12 3539      5058            addc    a,(_compensate_x_retval_1_183 + 1)
1D14 F583      5059            mov     dph,a
1D16 750010    5060            mov     __divsint_PARM_2,#0x10
1D19 E4        5061            clr     a
1D1A F501      5062            mov     (__divsint_PARM_2 + 1),a
1D1C 120000    5063            lcall   __divsint
1D1F 858238    5064            mov     _compensate_x_retval_1_183,dpl
1D22 858339    5065            mov     (_compensate_x_retval_1_183 + 1),dph
1D25 8000      5066            sjmp    L030012?
1D27           5067   L030008?:
1D27           5068   ;        bmm150.c:1782: retval = BMM150_OVERFLOW_OUTPUT;
1D27 753800    5069            mov     _compensate_x_retval_1_183,#0x00
1D2A 753980    5070            mov     (_compensate_x_retval_1_183 + 1),#0x80
1D2D 8000      5071            sjmp    L030012?
1D2F           5072   L030011?:
1D2F           5073   ;        bmm150.c:1788: retval = BMM150_OVERFLOW_OUTPUT;
1D2F 753800    5074            mov     _compensate_x_retval_1_183,#0x00
1D32 753980    5075            mov     (_compensate_x_retval_1_183 + 1),#0x80
1D35           5076   L030012?:
1D35           5077   ;        bmm150.c:1791: return retval;
1D35 853882    5078            mov     dpl,_compensate_x_retval_1_183
1D38 853983    5079            mov     dph,(_compensate_x_retval_1_183 + 1)
1D3B 22        5080            ret
1D3C           5081   ;------------------------------------------------------------
1D3C           5082   ;Allocation info for local variables in function 'compensate_y'
1D3C           5083   ;------------------------------------------------------------
1D3C           5084   ;data_rhall                Allocated with name '_compensate_y_PARM_2'
1D3C           5085   ;dev                       Allocated with name '_compensate_y_PARM_3'
1D3C           5086   ;mag_data_y                Allocated with name '_compensate_y_mag_data_y_1_191'
1D3C           5087   ;retval                    Allocated with name '_compensate_y_retval_1_192'
1D3C           5088   ;process_comp_y0           Allocated with name '_compensate_y_process_comp_y0_1_192'
1D3C           5089   ;process_comp_y1           Allocated to registers r2 r3 r4 r5 
1D3C           5090   ;process_comp_y2           Allocated to registers 
1D3C           5091   ;process_comp_y3           Allocated with name '_compensate_y_process_comp_y3_1_192'
1D3C           5092   ;process_comp_y4           Allocated with name '_compensate_y_process_comp_y4_1_192'
1D3C           5093   ;process_comp_y5           Allocated to registers 
1D3C           5094   ;process_comp_y6           Allocated with name '_compensate_y_process_comp_y6_1_192'
1D3C           5095   ;process_comp_y7           Allocated to registers 
1D3C           5096   ;process_comp_y8           Allocated to registers 
1D3C           5097   ;process_comp_y9           Allocated to registers r2 r3 r4 r5 
1D3C           5098   ;sloc0                     Allocated with name '_compensate_y_sloc0_1_0'
1D3C           5099   ;------------------------------------------------------------
1D3C           5100   ;        bmm150.c:1798: __xdata static int16_t compensate_y(int16_t mag_data_y, uint16_t data_rhall, const struct bmm150_dev *dev)
1D3C           5101   ;        -----------------------------------------
1D3C           5102   ;         function compensate_y
1D3C           5103   ;        -----------------------------------------
1D3C           5104   _compensate_y:
1D3C 8582E8    5105            mov     _compensate_y_mag_data_y_1_191,dpl
1D3F 8583E9    5106            mov     (_compensate_y_mag_data_y_1_191 + 1),dph
1D42           5107   ;        bmm150.c:1813: if (mag_data_y != BMM150_OVERFLOW_ADCVAL_XYAXES_FLIP)
1D42 E4        5108            clr     a
1D43 B5E8B0    5109            cjne    a,_compensate_y_mag_data_y_1_191,L031019?
1D46 74F0      5110            mov     a,#0xF0
1D48 B5E9B0    5111            cjne    a,(_compensate_y_mag_data_y_1_191 + 1),L031019?
1D4B 020000    5112            ljmp    L031011?
1D4E           5113   L031019?:
1D4E           5114   ;        bmm150.c:1815: if (data_rhall != 0)
1D4E E548      5115            mov     a,_compensate_y_PARM_2
1D50 4549      5116            orl     a,(_compensate_y_PARM_2 + 1)
1D52 6000      5117            jz      L031005?
1D54           5118   ;        bmm150.c:1818: process_comp_y0 = data_rhall;
1D54 854898    5119            mov     _compensate_y_process_comp_y0_1_192,_compensate_y_PARM_2
1D57 854999    5120            mov     (_compensate_y_process_comp_y0_1_192 + 1),(_compensate_y_PARM_2 + 1)
1D5A 8000      5121            sjmp    L031006?
1D5C           5122   L031005?:
1D5C           5123   ;        bmm150.c:1820: else if (dev->trim_data.dig_xyz1 != 0)
1D5C 741A      5124            mov     a,#0x1A
1D5E 2598      5125            add     a,_compensate_y_PARM_3
1D60 FE        5126            mov     r6,a
1D61 E4        5127            clr     a
1D62 3599      5128            addc    a,(_compensate_y_PARM_3 + 1)
1D64 FF        5129            mov     r7,a
1D65 A89A      5130            mov     r0,(_compensate_y_PARM_3 + 2)
1D67 8E82      5131            mov     dpl,r6
1D69 8F83      5132            mov     dph,r7
1D6B 88F0      5133            mov     b,r0
1D6D 120000    5134            lcall   __gptrget
1D70 FE        5135            mov     r6,a
1D71 A3        5136            inc     dptr
1D72 120000    5137            lcall   __gptrget
1D75 FF        5138            mov     r7,a
1D76 4E        5139            orl     a,r6
1D77 6000      5140            jz      L031002?
1D79           5141   ;        bmm150.c:1822: process_comp_y0 = dev->trim_data.dig_xyz1;
1D79 8E98      5142            mov     _compensate_y_process_comp_y0_1_192,r6
1D7B 8F99      5143            mov     (_compensate_y_process_comp_y0_1_192 + 1),r7
1D7D 8000      5144            sjmp    L031006?
1D7F           5145   L031002?:
1D7F           5146   ;        bmm150.c:1826: process_comp_y0 = 0;
1D7F E4        5147            clr     a
1D80 F598      5148            mov     _compensate_y_process_comp_y0_1_192,a
1D82 F599      5149            mov     (_compensate_y_process_comp_y0_1_192 + 1),a
1D84           5150   L031006?:
1D84           5151   ;        bmm150.c:1829: if (process_comp_y0 != 0)
1D84 E598      5152            mov     a,_compensate_y_process_comp_y0_1_192
1D86 4599      5153            orl     a,(_compensate_y_process_comp_y0_1_192 + 1)
1D88 7000      5154            jnz     L031022?
1D8A 020000    5155            ljmp    L031008?
1D8D           5156   L031022?:
1D8D           5157   ;        bmm150.c:1832: process_comp_y1 = (((int32_t)dev->trim_data.dig_xyz1) * 16384) / process_comp_y0;
1D8D AE98      5158            mov     r6,_compensate_y_PARM_3
1D8F AF99      5159            mov     r7,(_compensate_y_PARM_3 + 1)
1D91 A89A      5160            mov     r0,(_compensate_y_PARM_3 + 2)
1D93 741A      5161            mov     a,#0x1A
1D95 2E        5162            add     a,r6
1D96 F9        5163            mov     r1,a
1D97 E4        5164            clr     a
1D98 3F        5165            addc    a,r7
1D99 FC        5166            mov     r4,a
1D9A 8805      5167            mov     ar5,r0
1D9C 8982      5168            mov     dpl,r1
1D9E 8C83      5169            mov     dph,r4
1DA0 8DF0      5170            mov     b,r5
1DA2 120000    5171            lcall   __gptrget
1DA5 F9        5172            mov     r1,a
1DA6 A3        5173            inc     dptr
1DA7 120000    5174            lcall   __gptrget
1DAA FC        5175            mov     r4,a
1DAB E4        5176            clr     a
1DAC FD        5177            mov     r5,a
1DAD EC        5178            mov     a,r4
1DAE CD        5179            xch     a,r5
1DAF 5403      5180            anl     a,#0x03
1DB1 A2E0      5181            mov     c,acc.0
1DB3 CD        5182            xch     a,r5
1DB4 13        5183            rrc     a
1DB5 CD        5184            xch     a,r5
1DB6 13        5185            rrc     a
1DB7 A2E0      5186            mov     c,acc.0
1DB9 CD        5187            xch     a,r5
1DBA 13        5188            rrc     a
1DBB CD        5189            xch     a,r5
1DBC 13        5190            rrc     a
1DBD CD        5191            xch     a,r5
1DBE FA        5192            mov     r2,a
1DBF E9        5193            mov     a,r1
1DC0 03        5194            rr      a
1DC1 03        5195            rr      a
1DC2 54C0      5196            anl     a,#0xc0
1DC4 FC        5197            mov     r4,a
1DC5 E9        5198            mov     a,r1
1DC6 03        5199            rr      a
1DC7 03        5200            rr      a
1DC8 543F      5201            anl     a,#0x3f
1DCA 4D        5202            orl     a,r5
1DCB FD        5203            mov     r5,a
1DCC 7900      5204            mov     r1,#0x00
1DCE 859800    5205            mov     __divslong_PARM_2,_compensate_y_process_comp_y0_1_192
1DD1 859901    5206            mov     (__divslong_PARM_2 + 1),(_compensate_y_process_comp_y0_1_192 + 1)
1DD4 750200    5207            mov     (__divslong_PARM_2 + 2),#0x00
1DD7 750300    5208            mov     (__divslong_PARM_2 + 3),#0x00
1DDA 8982      5209            mov     dpl,r1
1DDC 8C83      5210            mov     dph,r4
1DDE 8DF0      5211            mov     b,r5
1DE0 EA        5212            mov     a,r2
1DE1 C006      5213            push    ar6
1DE3 C007      5214            push    ar7
1DE5 C000      5215            push    ar0
1DE7 120000    5216            lcall   __divslong
1DEA AA82      5217            mov     r2,dpl
1DEC AB83      5218            mov     r3,dph
1DEE           5219   ;        bmm150.c:1833: process_comp_y2 = ((uint16_t)process_comp_y1) - ((uint16_t)0x4000);
1DEE 8A38      5220            mov     _compensate_y_retval_1_192,r2
1DF0 EB        5221            mov     a,r3
1DF1 24C0      5222            add     a,#0xc0
1DF3           5223   ;        bmm150.c:1835: process_comp_y3 = ((int32_t) retval) * ((int32_t)retval);
1DF3 F539      5224            mov     (_compensate_y_retval_1_192 + 1),a
1DF5 853808    5225            mov     _compensate_y_sloc0_1_0,_compensate_y_retval_1_192
1DF8 F509      5226            mov     (_compensate_y_sloc0_1_0 + 1),a
1DFA 33        5227            rlc     a
1DFB 95E0      5228            subb    a,acc
1DFD F50A      5229            mov     (_compensate_y_sloc0_1_0 + 2),a
1DFF F50B      5230            mov     (_compensate_y_sloc0_1_0 + 3),a
1E01 850800    5231            mov     __mullong_PARM_2,_compensate_y_sloc0_1_0
1E04 850901    5232            mov     (__mullong_PARM_2 + 1),(_compensate_y_sloc0_1_0 + 1)
1E07 850A02    5233            mov     (__mullong_PARM_2 + 2),(_compensate_y_sloc0_1_0 + 2)
1E0A 850B03    5234            mov     (__mullong_PARM_2 + 3),(_compensate_y_sloc0_1_0 + 3)
1E0D 850882    5235            mov     dpl,_compensate_y_sloc0_1_0
1E10 850983    5236            mov     dph,(_compensate_y_sloc0_1_0 + 1)
1E13 850AF0    5237            mov     b,(_compensate_y_sloc0_1_0 + 2)
1E16 E50B      5238            mov     a,(_compensate_y_sloc0_1_0 + 3)
1E18 120000    5239            lcall   __mullong
1E1B 8582F8    5240            mov     _compensate_y_process_comp_y3_1_192,dpl
1E1E 8583F9    5241            mov     (_compensate_y_process_comp_y3_1_192 + 1),dph
1E21 85F0FA    5242            mov     (_compensate_y_process_comp_y3_1_192 + 2),b
1E24 F5FB      5243            mov     (_compensate_y_process_comp_y3_1_192 + 3),a
1E26 D000      5244            pop     ar0
1E28 D007      5245            pop     ar7
1E2A D006      5246            pop     ar6
1E2C           5247   ;        bmm150.c:1836: process_comp_y4 = ((int32_t)dev->trim_data.dig_xy2) * (process_comp_y3 / 128);
1E2C 7419      5248            mov     a,#0x19
1E2E 2E        5249            add     a,r6
1E2F FB        5250            mov     r3,a
1E30 E4        5251            clr     a
1E31 3F        5252            addc    a,r7
1E32 FA        5253            mov     r2,a
1E33 8804      5254            mov     ar4,r0
1E35 8B82      5255            mov     dpl,r3
1E37 8A83      5256            mov     dph,r2
1E39 8CF0      5257            mov     b,r4
1E3B 120000    5258            lcall   __gptrget
1E3E FB        5259            mov     r3,a
1E3F 33        5260            rlc     a
1E40 95E0      5261            subb    a,acc
1E42 FA        5262            mov     r2,a
1E43 FC        5263            mov     r4,a
1E44 FD        5264            mov     r5,a
1E45 750080    5265            mov     __divslong_PARM_2,#0x80
1E48 E4        5266            clr     a
1E49 F501      5267            mov     (__divslong_PARM_2 + 1),a
1E4B F502      5268            mov     (__divslong_PARM_2 + 2),a
1E4D F503      5269            mov     (__divslong_PARM_2 + 3),a
1E4F 85F882    5270            mov     dpl,_compensate_y_process_comp_y3_1_192
1E52 85F983    5271            mov     dph,(_compensate_y_process_comp_y3_1_192 + 1)
1E55 85FAF0    5272            mov     b,(_compensate_y_process_comp_y3_1_192 + 2)
1E58 E5FB      5273            mov     a,(_compensate_y_process_comp_y3_1_192 + 3)
1E5A C002      5274            push    ar2
1E5C C003      5275            push    ar3
1E5E C004      5276            push    ar4
1E60 C005      5277            push    ar5
1E62 C006      5278            push    ar6
1E64 C007      5279            push    ar7
1E66 C000      5280            push    ar0
1E68 120000    5281            lcall   __divslong
1E6B 858200    5282            mov     __mullong_PARM_2,dpl
1E6E 858301    5283            mov     (__mullong_PARM_2 + 1),dph
1E71 85F002    5284            mov     (__mullong_PARM_2 + 2),b
1E74 F503      5285            mov     (__mullong_PARM_2 + 3),a
1E76 D000      5286            pop     ar0
1E78 D007      5287            pop     ar7
1E7A D006      5288            pop     ar6
1E7C D005      5289            pop     ar5
1E7E D004      5290            pop     ar4
1E80 D003      5291            pop     ar3
1E82 D002      5292            pop     ar2
1E84 8B82      5293            mov     dpl,r3
1E86 8A83      5294            mov     dph,r2
1E88 8CF0      5295            mov     b,r4
1E8A ED        5296            mov     a,r5
1E8B C006      5297            push    ar6
1E8D C007      5298            push    ar7
1E8F C000      5299            push    ar0
1E91 120000    5300            lcall   __mullong
1E94 858258    5301            mov     _compensate_y_process_comp_y4_1_192,dpl
1E97 858359    5302            mov     (_compensate_y_process_comp_y4_1_192 + 1),dph
1E9A 85F05A    5303            mov     (_compensate_y_process_comp_y4_1_192 + 2),b
1E9D F55B      5304            mov     (_compensate_y_process_comp_y4_1_192 + 3),a
1E9F D000      5305            pop     ar0
1EA1 D007      5306            pop     ar7
1EA3 D006      5307            pop     ar6
1EA5           5308   ;        bmm150.c:1837: process_comp_y5 = ((int32_t)(((int16_t)dev->trim_data.dig_xy1) * 128));
1EA5 7418      5309            mov     a,#0x18
1EA7 2E        5310            add     a,r6
1EA8 F9        5311            mov     r1,a
1EA9 E4        5312            clr     a
1EAA 3F        5313            addc    a,r7
1EAB FA        5314            mov     r2,a
1EAC 8803      5315            mov     ar3,r0
1EAE 8982      5316            mov     dpl,r1
1EB0 8A83      5317            mov     dph,r2
1EB2 8BF0      5318            mov     b,r3
1EB4 120000    5319            lcall   __gptrget
1EB7 F9        5320            mov     r1,a
1EB8 E4        5321            clr     a
1EB9 5401      5322            anl     a,#0x01
1EBB A2E0      5323            mov     c,acc.0
1EBD C9        5324            xch     a,r1
1EBE 13        5325            rrc     a
1EBF C9        5326            xch     a,r1
1EC0 13        5327            rrc     a
1EC1 C9        5328            xch     a,r1
1EC2 8900      5329            mov     __mullong_PARM_2,r1
1EC4 F501      5330            mov     (__mullong_PARM_2 + 1),a
1EC6 33        5331            rlc     a
1EC7 95E0      5332            subb    a,acc
1EC9 F502      5333            mov     (__mullong_PARM_2 + 2),a
1ECB F503      5334            mov     (__mullong_PARM_2 + 3),a
1ECD           5335   ;        bmm150.c:1838: process_comp_y6 = ((process_comp_y4 + (((int32_t)retval) * process_comp_y5)) / 512);
1ECD 850882    5336            mov     dpl,_compensate_y_sloc0_1_0
1ED0 850983    5337            mov     dph,(_compensate_y_sloc0_1_0 + 1)
1ED3 850AF0    5338            mov     b,(_compensate_y_sloc0_1_0 + 2)
1ED6 E50B      5339            mov     a,(_compensate_y_sloc0_1_0 + 3)
1ED8 C006      5340            push    ar6
1EDA C007      5341            push    ar7
1EDC C000      5342            push    ar0
1EDE 120000    5343            lcall   __mullong
1EE1 AA82      5344            mov     r2,dpl
1EE3 AB83      5345            mov     r3,dph
1EE5 ACF0      5346            mov     r4,b
1EE7 FD        5347            mov     r5,a
1EE8 EA        5348            mov     a,r2
1EE9 2558      5349            add     a,_compensate_y_process_comp_y4_1_192
1EEB FA        5350            mov     r2,a
1EEC EB        5351            mov     a,r3
1EED 3559      5352            addc    a,(_compensate_y_process_comp_y4_1_192 + 1)
1EEF FB        5353            mov     r3,a
1EF0 EC        5354            mov     a,r4
1EF1 355A      5355            addc    a,(_compensate_y_process_comp_y4_1_192 + 2)
1EF3 FC        5356            mov     r4,a
1EF4 ED        5357            mov     a,r5
1EF5 355B      5358            addc    a,(_compensate_y_process_comp_y4_1_192 + 3)
1EF7 FD        5359            mov     r5,a
1EF8 750000    5360            mov     __divslong_PARM_2,#0x00
1EFB 750102    5361            mov     (__divslong_PARM_2 + 1),#0x02
1EFE 750200    5362            mov     (__divslong_PARM_2 + 2),#0x00
1F01 750300    5363            mov     (__divslong_PARM_2 + 3),#0x00
1F04 8A82      5364            mov     dpl,r2
1F06 8B83      5365            mov     dph,r3
1F08 8CF0      5366            mov     b,r4
1F0A ED        5367            mov     a,r5
1F0B 120000    5368            lcall   __divslong
1F0E 8582B8    5369            mov     _compensate_y_process_comp_y6_1_192,dpl
1F11 8583B9    5370            mov     (_compensate_y_process_comp_y6_1_192 + 1),dph
1F14 85F0BA    5371            mov     (_compensate_y_process_comp_y6_1_192 + 2),b
1F17 F5BB      5372            mov     (_compensate_y_process_comp_y6_1_192 + 3),a
1F19 D000      5373            pop     ar0
1F1B D007      5374            pop     ar7
1F1D D006      5375            pop     ar6
1F1F           5376   ;        bmm150.c:1839: process_comp_y7 = ((int32_t)(((int16_t)dev->trim_data.dig_y2) + ((int16_t)0xA0)));
1F1F 740F      5377            mov     a,#0x0F
1F21 2E        5378            add     a,r6
1F22 F9        5379            mov     r1,a
1F23 E4        5380            clr     a
1F24 3F        5381            addc    a,r7
1F25 FA        5382            mov     r2,a
1F26 8803      5383            mov     ar3,r0
1F28 8982      5384            mov     dpl,r1
1F2A 8A83      5385            mov     dph,r2
1F2C 8BF0      5386            mov     b,r3
1F2E 120000    5387            lcall   __gptrget
1F31 F9        5388            mov     r1,a
1F32 33        5389            rlc     a
1F33 95E0      5390            subb    a,acc
1F35 FA        5391            mov     r2,a
1F36 74A0      5392            mov     a,#0xA0
1F38 29        5393            add     a,r1
1F39 F9        5394            mov     r1,a
1F3A E4        5395            clr     a
1F3B 3A        5396            addc    a,r2
1F3C 8900      5397            mov     __mullong_PARM_2,r1
1F3E F501      5398            mov     (__mullong_PARM_2 + 1),a
1F40 33        5399            rlc     a
1F41 95E0      5400            subb    a,acc
1F43 F502      5401            mov     (__mullong_PARM_2 + 2),a
1F45 F503      5402            mov     (__mullong_PARM_2 + 3),a
1F47           5403   ;        bmm150.c:1840: process_comp_y8 = (((process_comp_y6 + ((int32_t)0x100000)) * process_comp_y7) / 4096);
1F47 AAB8      5404            mov     r2,_compensate_y_process_comp_y6_1_192
1F49 ABB9      5405            mov     r3,(_compensate_y_process_comp_y6_1_192 + 1)
1F4B 7410      5406            mov     a,#0x10
1F4D 25BA      5407            add     a,(_compensate_y_process_comp_y6_1_192 + 2)
1F4F FC        5408            mov     r4,a
1F50 E4        5409            clr     a
1F51 35BB      5410            addc    a,(_compensate_y_process_comp_y6_1_192 + 3)
1F53 8A82      5411            mov     dpl,r2
1F55 8B83      5412            mov     dph,r3
1F57 8CF0      5413            mov     b,r4
1F59 C006      5414            push    ar6
1F5B C007      5415            push    ar7
1F5D C000      5416            push    ar0
1F5F 120000    5417            lcall   __mullong
1F62 750000    5418            mov     __divslong_PARM_2,#0x00
1F65 750110    5419            mov     (__divslong_PARM_2 + 1),#0x10
1F68 750200    5420            mov     (__divslong_PARM_2 + 2),#0x00
1F6B 750300    5421            mov     (__divslong_PARM_2 + 3),#0x00
1F6E 120000    5422            lcall   __divslong
1F71 858200    5423            mov     __mullong_PARM_2,dpl
1F74 858301    5424            mov     (__mullong_PARM_2 + 1),dph
1F77 85F002    5425            mov     (__mullong_PARM_2 + 2),b
1F7A F503      5426            mov     (__mullong_PARM_2 + 3),a
1F7C           5427   ;        bmm150.c:1841: process_comp_y9 = (((int32_t)mag_data_y) * process_comp_y8);
1F7C AAE8      5428            mov     r2,_compensate_y_mag_data_y_1_191
1F7E E5E9      5429            mov     a,(_compensate_y_mag_data_y_1_191 + 1)
1F80 FB        5430            mov     r3,a
1F81 33        5431            rlc     a
1F82 95E0      5432            subb    a,acc
1F84 FC        5433            mov     r4,a
1F85 8A82      5434            mov     dpl,r2
1F87 8B83      5435            mov     dph,r3
1F89 8CF0      5436            mov     b,r4
1F8B 120000    5437            lcall   __mullong
1F8E           5438   ;        bmm150.c:1842: retval = (int16_t)(process_comp_y9 / 8192);
1F8E 750000    5439            mov     __divslong_PARM_2,#0x00
1F91 750120    5440            mov     (__divslong_PARM_2 + 1),#0x20
1F94 750200    5441            mov     (__divslong_PARM_2 + 2),#0x00
1F97 750300    5442            mov     (__divslong_PARM_2 + 3),#0x00
1F9A 120000    5443            lcall   __divslong
1F9D AA82      5444            mov     r2,dpl
1F9F AB83      5445            mov     r3,dph
1FA1 D000      5446            pop     ar0
1FA3 D007      5447            pop     ar7
1FA5 D006      5448            pop     ar6
1FA7 8A38      5449            mov     _compensate_y_retval_1_192,r2
1FA9 8B39      5450            mov     (_compensate_y_retval_1_192 + 1),r3
1FAB           5451   ;        bmm150.c:1843: retval = (retval + (((int16_t)dev->trim_data.dig_y1) * 8)) / 16;
1FAB 740D      5452            mov     a,#0x0D
1FAD 2E        5453            add     a,r6
1FAE FE        5454            mov     r6,a
1FAF E4        5455            clr     a
1FB0 3F        5456            addc    a,r7
1FB1 FF        5457            mov     r7,a
1FB2 8E82      5458            mov     dpl,r6
1FB4 8F83      5459            mov     dph,r7
1FB6 88F0      5460            mov     b,r0
1FB8 120000    5461            lcall   __gptrget
1FBB FE        5462            mov     r6,a
1FBC 33        5463            rlc     a
1FBD 95E0      5464            subb    a,acc
1FBF C4        5465            swap    a
1FC0 03        5466            rr      a
1FC1 54F8      5467            anl     a,#0xf8
1FC3 CE        5468            xch     a,r6
1FC4 C4        5469            swap    a
1FC5 03        5470            rr      a
1FC6 CE        5471            xch     a,r6
1FC7 6E        5472            xrl     a,r6
1FC8 CE        5473            xch     a,r6
1FC9 54F8      5474            anl     a,#0xf8
1FCB CE        5475            xch     a,r6
1FCC 6E        5476            xrl     a,r6
1FCD FA        5477            mov     r2,a
1FCE EE        5478            mov     a,r6
1FCF 2538      5479            add     a,_compensate_y_retval_1_192
1FD1 F582      5480            mov     dpl,a
1FD3 EA        5481            mov     a,r2
1FD4 3539      5482            addc    a,(_compensate_y_retval_1_192 + 1)
1FD6 F583      5483            mov     dph,a
1FD8 750010    5484            mov     __divsint_PARM_2,#0x10
1FDB E4        5485            clr     a
1FDC F501      5486            mov     (__divsint_PARM_2 + 1),a
1FDE 120000    5487            lcall   __divsint
1FE1 858238    5488            mov     _compensate_y_retval_1_192,dpl
1FE4 858339    5489            mov     (_compensate_y_retval_1_192 + 1),dph
1FE7 8000      5490            sjmp    L031012?
1FE9           5491   L031008?:
1FE9           5492   ;        bmm150.c:1847: retval = BMM150_OVERFLOW_OUTPUT;
1FE9 753800    5493            mov     _compensate_y_retval_1_192,#0x00
1FEC 753980    5494            mov     (_compensate_y_retval_1_192 + 1),#0x80
1FEF 8000      5495            sjmp    L031012?
1FF1           5496   L031011?:
1FF1           5497   ;        bmm150.c:1853: retval = BMM150_OVERFLOW_OUTPUT;
1FF1 753800    5498            mov     _compensate_y_retval_1_192,#0x00
1FF4 753980    5499            mov     (_compensate_y_retval_1_192 + 1),#0x80
1FF7           5500   L031012?:
1FF7           5501   ;        bmm150.c:1856: return retval;
1FF7 853882    5502            mov     dpl,_compensate_y_retval_1_192
1FFA 853983    5503            mov     dph,(_compensate_y_retval_1_192 + 1)
1FFD 22        5504            ret
1FFE           5505   ;------------------------------------------------------------
1FFE           5506   ;Allocation info for local variables in function 'compensate_z'
1FFE           5507   ;------------------------------------------------------------
1FFE           5508   ;data_rhall                Allocated with name '_compensate_z_PARM_2'
1FFE           5509   ;dev                       Allocated with name '_compensate_z_PARM_3'
1FFE           5510   ;mag_data_z                Allocated with name '_compensate_z_mag_data_z_1_200'
1FFE           5511   ;retval                    Allocated to registers r2 r3 r4 r5 
1FFE           5512   ;process_comp_z0           Allocated with name '_compensate_z_process_comp_z0_1_201'
1FFE           5513   ;process_comp_z1           Allocated with name '_compensate_z_process_comp_z1_1_201'
1FFE           5514   ;process_comp_z2           Allocated with name '_compensate_z_process_comp_z2_1_201'
1FFE           5515   ;process_comp_z3           Allocated to registers r2 r3 r4 r5 
1FFE           5516   ;process_comp_z4           Allocated to registers r2 r3 
1FFE           5517   ;sloc0                     Allocated with name '_compensate_z_sloc0_1_0'
1FFE           5518   ;sloc1                     Allocated with name '_compensate_z_sloc1_1_0'
1FFE           5519   ;sloc2                     Allocated with name '_compensate_z_sloc2_1_0'
1FFE           5520   ;------------------------------------------------------------
1FFE           5521   ;        bmm150.c:1863: __xdata static int16_t compensate_z(int16_t mag_data_z, uint16_t data_rhall, const struct bmm150_dev *dev)
1FFE           5522   ;        -----------------------------------------
1FFE           5523   ;         function compensate_z
1FFE           5524   ;        -----------------------------------------
1FFE           5525   _compensate_z:
1FFE 8582F8    5526            mov     _compensate_z_mag_data_z_1_200,dpl
2001 8583F9    5527            mov     (_compensate_z_mag_data_z_1_200 + 1),dph
2004           5528   ;        bmm150.c:1872: if (mag_data_z != BMM150_OVERFLOW_ADCVAL_ZAXIS_HALL)
2004 E4        5529            clr     a
2005 B5F8B0    5530            cjne    a,_compensate_z_mag_data_z_1_200,L032024?
2008 74C0      5531            mov     a,#0xC0
200A B5F9B0    5532            cjne    a,(_compensate_z_mag_data_z_1_200 + 1),L032024?
200D 020000    5533            ljmp    L032013?
2010           5534   L032024?:
2010           5535   ;        bmm150.c:1874: if ((dev->trim_data.dig_z2 != 0) && (dev->trim_data.dig_z1 != 0) && (data_rhall != 0) &&
2010 ACA8      5536            mov     r4,_compensate_z_PARM_3
2012 ADA9      5537            mov     r5,(_compensate_z_PARM_3 + 1)
2014 AEAA      5538            mov     r6,(_compensate_z_PARM_3 + 2)
2016 7412      5539            mov     a,#0x12
2018 2C        5540            add     a,r4
2019 FF        5541            mov     r7,a
201A E4        5542            clr     a
201B 3D        5543            addc    a,r5
201C F8        5544            mov     r0,a
201D 8E01      5545            mov     ar1,r6
201F 8F82      5546            mov     dpl,r7
2021 8883      5547            mov     dph,r0
2023 89F0      5548            mov     b,r1
2025 120000    5549            lcall   __gptrget
2028 F508      5550            mov     _compensate_z_sloc2_1_0,a
202A A3        5551            inc     dptr
202B 120000    5552            lcall   __gptrget
202E F509      5553            mov     (_compensate_z_sloc2_1_0 + 1),a
2030 E508      5554            mov     a,_compensate_z_sloc2_1_0
2032 4509      5555            orl     a,(_compensate_z_sloc2_1_0 + 1)
2034 7000      5556            jnz     L032025?
2036 020000    5557            ljmp    L032007?
2039           5558   L032025?:
2039 7410      5559            mov     a,#0x10
203B 2C        5560            add     a,r4
203C F9        5561            mov     r1,a
203D E4        5562            clr     a
203E 3D        5563            addc    a,r5
203F FA        5564            mov     r2,a
2040 8E03      5565            mov     ar3,r6
2042 8982      5566            mov     dpl,r1
2044 8A83      5567            mov     dph,r2
2046 8BF0      5568            mov     b,r3
2048 120000    5569            lcall   __gptrget
204B F5B8      5570            mov     _compensate_z_sloc1_1_0,a
204D A3        5571            inc     dptr
204E 120000    5572            lcall   __gptrget
2051 F5B9      5573            mov     (_compensate_z_sloc1_1_0 + 1),a
2053 E5B8      5574            mov     a,_compensate_z_sloc1_1_0
2055 45B9      5575            orl     a,(_compensate_z_sloc1_1_0 + 1)
2057 7000      5576            jnz     L032026?
2059 020000    5577            ljmp    L032007?
205C           5578   L032026?:
205C E558      5579            mov     a,_compensate_z_PARM_2
205E 4559      5580            orl     a,(_compensate_z_PARM_2 + 1)
2060 7000      5581            jnz     L032027?
2062 020000    5582            ljmp    L032007?
2065           5583   L032027?:
2065           5584   ;        bmm150.c:1875: (dev->trim_data.dig_xyz1 != 0))
2065 741A      5585            mov     a,#0x1A
2067 2C        5586            add     a,r4
2068 F9        5587            mov     r1,a
2069 E4        5588            clr     a
206A 3D        5589            addc    a,r5
206B FA        5590            mov     r2,a
206C 8E03      5591            mov     ar3,r6
206E 8982      5592            mov     dpl,r1
2070 8A83      5593            mov     dph,r2
2072 8BF0      5594            mov     b,r3
2074 120000    5595            lcall   __gptrget
2077 F568      5596            mov     _compensate_z_sloc0_1_0,a
2079 A3        5597            inc     dptr
207A 120000    5598            lcall   __gptrget
207D F569      5599            mov     (_compensate_z_sloc0_1_0 + 1),a
207F E568      5600            mov     a,_compensate_z_sloc0_1_0
2081 4569      5601            orl     a,(_compensate_z_sloc0_1_0 + 1)
2083 7000      5602            jnz     L032028?
2085 020000    5603            ljmp    L032007?
2088           5604   L032028?:
2088           5605   ;        bmm150.c:1878: process_comp_z0 = ((int16_t)data_rhall) - ((int16_t) dev->trim_data.dig_xyz1);
2088 E558      5606            mov     a,_compensate_z_PARM_2
208A C3        5607            clr     c
208B 9568      5608            subb    a,_compensate_z_sloc0_1_0
208D F558      5609            mov     _compensate_z_process_comp_z0_1_201,a
208F E559      5610            mov     a,(_compensate_z_PARM_2 + 1)
2091 9569      5611            subb    a,(_compensate_z_sloc0_1_0 + 1)
2093 F559      5612            mov     (_compensate_z_process_comp_z0_1_201 + 1),a
2095           5613   ;        bmm150.c:1879: process_comp_z1 = (((int32_t)dev->trim_data.dig_z3) * ((int32_t)(process_comp_z0))) / 4;
2095 7414      5614            mov     a,#0x14
2097 2C        5615            add     a,r4
2098 FB        5616            mov     r3,a
2099 E4        5617            clr     a
209A 3D        5618            addc    a,r5
209B FA        5619            mov     r2,a
209C 8E01      5620            mov     ar1,r6
209E 8B82      5621            mov     dpl,r3
20A0 8A83      5622            mov     dph,r2
20A2 89F0      5623            mov     b,r1
20A4 120000    5624            lcall   __gptrget
20A7 FB        5625            mov     r3,a
20A8 A3        5626            inc     dptr
20A9 120000    5627            lcall   __gptrget
20AC FA        5628            mov     r2,a
20AD 33        5629            rlc     a
20AE 95E0      5630            subb    a,acc
20B0 F9        5631            mov     r1,a
20B1 FF        5632            mov     r7,a
20B2 855800    5633            mov     __mullong_PARM_2,_compensate_z_process_comp_z0_1_201
20B5 E559      5634            mov     a,(_compensate_z_process_comp_z0_1_201 + 1)
20B7 F501      5635            mov     (__mullong_PARM_2 + 1),a
20B9 33        5636            rlc     a
20BA 95E0      5637            subb    a,acc
20BC F502      5638            mov     (__mullong_PARM_2 + 2),a
20BE F503      5639            mov     (__mullong_PARM_2 + 3),a
20C0 8B82      5640            mov     dpl,r3
20C2 8A83      5641            mov     dph,r2
20C4 89F0      5642            mov     b,r1
20C6 EF        5643            mov     a,r7
20C7 C004      5644            push    ar4
20C9 C005      5645            push    ar5
20CB C006      5646            push    ar6
20CD 120000    5647            lcall   __mullong
20D0 AA82      5648            mov     r2,dpl
20D2 AB83      5649            mov     r3,dph
20D4 AFF0      5650            mov     r7,b
20D6 F8        5651            mov     r0,a
20D7 750004    5652            mov     __divslong_PARM_2,#0x04
20DA E4        5653            clr     a
20DB F501      5654            mov     (__divslong_PARM_2 + 1),a
20DD F502      5655            mov     (__divslong_PARM_2 + 2),a
20DF F503      5656            mov     (__divslong_PARM_2 + 3),a
20E1 8A82      5657            mov     dpl,r2
20E3 8B83      5658            mov     dph,r3
20E5 8FF0      5659            mov     b,r7
20E7 E8        5660            mov     a,r0
20E8 120000    5661            lcall   __divslong
20EB 8582B8    5662            mov     _compensate_z_process_comp_z1_1_201,dpl
20EE 8583B9    5663            mov     (_compensate_z_process_comp_z1_1_201 + 1),dph
20F1 85F0BA    5664            mov     (_compensate_z_process_comp_z1_1_201 + 2),b
20F4 F5BB      5665            mov     (_compensate_z_process_comp_z1_1_201 + 3),a
20F6 D006      5666            pop     ar6
20F8 D005      5667            pop     ar5
20FA D004      5668            pop     ar4
20FC           5669   ;        bmm150.c:1880: process_comp_z2 = (((int32_t)(mag_data_z - dev->trim_data.dig_z4)) * 32768);
20FC 7416      5670            mov     a,#0x16
20FE 2C        5671            add     a,r4
20FF FC        5672            mov     r4,a
2100 E4        5673            clr     a
2101 3D        5674            addc    a,r5
2102 FD        5675            mov     r5,a
2103 8C82      5676            mov     dpl,r4
2105 8D83      5677            mov     dph,r5
2107 8EF0      5678            mov     b,r6
2109 120000    5679            lcall   __gptrget
210C FC        5680            mov     r4,a
210D A3        5681            inc     dptr
210E 120000    5682            lcall   __gptrget
2111 FD        5683            mov     r5,a
2112 E5F8      5684            mov     a,_compensate_z_mag_data_z_1_200
2114 C3        5685            clr     c
2115 9C        5686            subb    a,r4
2116 FC        5687            mov     r4,a
2117 E5F9      5688            mov     a,(_compensate_z_mag_data_z_1_200 + 1)
2119 9D        5689            subb    a,r5
211A FD        5690            mov     r5,a
211B 33        5691            rlc     a
211C 95E0      5692            subb    a,acc
211E 8D1A      5693            mov     (_compensate_z_process_comp_z2_1_201 + 2),r5
2120 5401      5694            anl     a,#0x01
2122 A2E0      5695            mov     c,acc.0
2124 C51A      5696            xch     a,(_compensate_z_process_comp_z2_1_201 + 2)
2126 13        5697            rrc     a
2127 C51A      5698            xch     a,(_compensate_z_process_comp_z2_1_201 + 2)
2129 13        5699            rrc     a
212A C51A      5700            xch     a,(_compensate_z_process_comp_z2_1_201 + 2)
212C F51B      5701            mov     (_compensate_z_process_comp_z2_1_201 + 3),a
212E EC        5702            mov     a,r4
212F 03        5703            rr      a
2130 5480      5704            anl     a,#0x80
2132 F519      5705            mov     (_compensate_z_process_comp_z2_1_201 + 1),a
2134 EC        5706            mov     a,r4
2135 C3        5707            clr     c
2136 13        5708            rrc     a
2137 451A      5709            orl     a,(_compensate_z_process_comp_z2_1_201 + 2)
2139 F51A      5710            mov     (_compensate_z_process_comp_z2_1_201 + 2),a
213B 751800    5711            mov     _compensate_z_process_comp_z2_1_201,#0x00
213E           5712   ;        bmm150.c:1881: process_comp_z3 = ((int32_t)dev->trim_data.dig_z1) * (((int16_t)data_rhall) * 2);
213E ACB8      5713            mov     r4,_compensate_z_sloc1_1_0
2140 ADB9      5714            mov     r5,(_compensate_z_sloc1_1_0 + 1)
2142 E4        5715            clr     a
2143 FE        5716            mov     r6,a
2144 F9        5717            mov     r1,a
2145 E558      5718            mov     a,_compensate_z_PARM_2
2147 25E0      5719            add     a,acc
2149 FA        5720            mov     r2,a
214A E559      5721            mov     a,(_compensate_z_PARM_2 + 1)
214C 33        5722            rlc     a
214D 8A00      5723            mov     __mullong_PARM_2,r2
214F F501      5724            mov     (__mullong_PARM_2 + 1),a
2151 33        5725            rlc     a
2152 95E0      5726            subb    a,acc
2154 F502      5727            mov     (__mullong_PARM_2 + 2),a
2156 F503      5728            mov     (__mullong_PARM_2 + 3),a
2158 8C82      5729            mov     dpl,r4
215A 8D83      5730            mov     dph,r5
215C 8EF0      5731            mov     b,r6
215E E9        5732            mov     a,r1
215F 120000    5733            lcall   __mullong
2162 AA82      5734            mov     r2,dpl
2164 AB83      5735            mov     r3,dph
2166 ACF0      5736            mov     r4,b
2168 FD        5737            mov     r5,a
2169           5738   ;        bmm150.c:1882: process_comp_z4 = (int16_t)((process_comp_z3 + (32768)) / 65536);
2169 7480      5739            mov     a,#0x80
216B 2B        5740            add     a,r3
216C FB        5741            mov     r3,a
216D E4        5742            clr     a
216E 3C        5743            addc    a,r4
216F FC        5744            mov     r4,a
2170 E4        5745            clr     a
2171 3D        5746            addc    a,r5
2172 FD        5747            mov     r5,a
2173 750000    5748            mov     __divslong_PARM_2,#0x00
2176 750100    5749            mov     (__divslong_PARM_2 + 1),#0x00
2179 750201    5750            mov     (__divslong_PARM_2 + 2),#0x01
217C 750300    5751            mov     (__divslong_PARM_2 + 3),#0x00
217F 8A82      5752            mov     dpl,r2
2181 8B83      5753            mov     dph,r3
2183 8CF0      5754            mov     b,r4
2185 ED        5755            mov     a,r5
2186 120000    5756            lcall   __divslong
2189 AA82      5757            mov     r2,dpl
218B AB83      5758            mov     r3,dph
218D           5759   ;        bmm150.c:1883: retval = ((process_comp_z2 - process_comp_z1) / (dev->trim_data.dig_z2 + process_comp_z4));
218D E518      5760            mov     a,_compensate_z_process_comp_z2_1_201
218F C3        5761            clr     c
2190 95B8      5762            subb    a,_compensate_z_process_comp_z1_1_201
2192 FC        5763            mov     r4,a
2193 E519      5764            mov     a,(_compensate_z_process_comp_z2_1_201 + 1)
2195 95B9      5765            subb    a,(_compensate_z_process_comp_z1_1_201 + 1)
2197 FD        5766            mov     r5,a
2198 E51A      5767            mov     a,(_compensate_z_process_comp_z2_1_201 + 2)
219A 95BA      5768            subb    a,(_compensate_z_process_comp_z1_1_201 + 2)
219C FE        5769            mov     r6,a
219D E51B      5770            mov     a,(_compensate_z_process_comp_z2_1_201 + 3)
219F 95BB      5771            subb    a,(_compensate_z_process_comp_z1_1_201 + 3)
21A1 FF        5772            mov     r7,a
21A2 EA        5773            mov     a,r2
21A3 2508      5774            add     a,_compensate_z_sloc2_1_0
21A5 FA        5775            mov     r2,a
21A6 EB        5776            mov     a,r3
21A7 3509      5777            addc    a,(_compensate_z_sloc2_1_0 + 1)
21A9 8A00      5778            mov     __divslong_PARM_2,r2
21AB F501      5779            mov     (__divslong_PARM_2 + 1),a
21AD 33        5780            rlc     a
21AE 95E0      5781            subb    a,acc
21B0 F502      5782            mov     (__divslong_PARM_2 + 2),a
21B2 F503      5783            mov     (__divslong_PARM_2 + 3),a
21B4 8C82      5784            mov     dpl,r4
21B6 8D83      5785            mov     dph,r5
21B8 8EF0      5786            mov     b,r6
21BA EF        5787            mov     a,r7
21BB 120000    5788            lcall   __divslong
21BE AA82      5789            mov     r2,dpl
21C0 AB83      5790            mov     r3,dph
21C2 ACF0      5791            mov     r4,b
21C4 FD        5792            mov     r5,a
21C5           5793   ;        bmm150.c:1886: if (retval > BMM150_POSITIVE_SATURATION_Z)
21C5 C3        5794            clr     c
21C6 74FF      5795            mov     a,#0xFF
21C8 9A        5796            subb    a,r2
21C9 747F      5797            mov     a,#0x7F
21CB 9B        5798            subb    a,r3
21CC E4        5799            clr     a
21CD 9C        5800            subb    a,r4
21CE E4        5801            clr     a
21CF 6480      5802            xrl     a,#0x80
21D1 8DF0      5803            mov     b,r5
21D3 63F080    5804            xrl     b,#0x80
21D6 95F0      5805            subb    a,b
21D8 5000      5806            jnc     L032004?
21DA           5807   ;        bmm150.c:1888: retval = BMM150_POSITIVE_SATURATION_Z;
21DA 7AFF      5808            mov     r2,#0xFF
21DC 7B7F      5809            mov     r3,#0x7F
21DE 7C00      5810            mov     r4,#0x00
21E0 7D00      5811            mov     r5,#0x00
21E2 8000      5812            sjmp    L032005?
21E4           5813   L032004?:
21E4           5814   ;        bmm150.c:1890: else if (retval < BMM150_NEGATIVE_SATURATION_Z)
21E4 C3        5815            clr     c
21E5 EA        5816            mov     a,r2
21E6 9401      5817            subb    a,#0x01
21E8 EB        5818            mov     a,r3
21E9 9480      5819            subb    a,#0x80
21EB EC        5820            mov     a,r4
21EC 94FF      5821            subb    a,#0xFF
21EE ED        5822            mov     a,r5
21EF 6480      5823            xrl     a,#0x80
21F1 947F      5824            subb    a,#0x7f
21F3 5000      5825            jnc     L032005?
21F5           5826   ;        bmm150.c:1892: retval = BMM150_NEGATIVE_SATURATION_Z;
21F5 7A01      5827            mov     r2,#0x01
21F7 7B80      5828            mov     r3,#0x80
21F9 7CFF      5829            mov     r4,#0xFF
21FB 7DFF      5830            mov     r5,#0xFF
21FD           5831   L032005?:
21FD           5832   ;        bmm150.c:1896: retval = retval / 16;
21FD 750010    5833            mov     __divslong_PARM_2,#0x10
2200 E4        5834            clr     a
2201 F501      5835            mov     (__divslong_PARM_2 + 1),a
2203 F502      5836            mov     (__divslong_PARM_2 + 2),a
2205 F503      5837            mov     (__divslong_PARM_2 + 3),a
2207 8A82      5838            mov     dpl,r2
2209 8B83      5839            mov     dph,r3
220B 8CF0      5840            mov     b,r4
220D ED        5841            mov     a,r5
220E 120000    5842            lcall   __divslong
2211 AA82      5843            mov     r2,dpl
2213 AB83      5844            mov     r3,dph
2215 ACF0      5845            mov     r4,b
2217 FD        5846            mov     r5,a
2218 8000      5847            sjmp    L032014?
221A           5848   L032007?:
221A           5849   ;        bmm150.c:1900: retval = BMM150_OVERFLOW_OUTPUT;
221A 7A00      5850            mov     r2,#0x00
221C 7B80      5851            mov     r3,#0x80
221E 7CFF      5852            mov     r4,#0xFF
2220 7DFF      5853            mov     r5,#0xFF
2222 8000      5854            sjmp    L032014?
2224           5855   L032013?:
2224           5856   ;        bmm150.c:1906: retval = BMM150_OVERFLOW_OUTPUT;
2224 7A00      5857            mov     r2,#0x00
2226 7B80      5858            mov     r3,#0x80
2228 7CFF      5859            mov     r4,#0xFF
222A 7DFF      5860            mov     r5,#0xFF
222C           5861   L032014?:
222C           5862   ;        bmm150.c:1909: return (int16_t)retval;
222C 8A82      5863            mov     dpl,r2
222E 8B83      5864            mov     dph,r3
2230 22        5865            ret
2231           5866   ;------------------------------------------------------------
2231           5867   ;Allocation info for local variables in function 'perform_normal_self_test'
2231           5868   ;------------------------------------------------------------
2231           5869   ;dev                       Allocated to registers r2 r3 r4 
2231           5870   ;rslt                      Allocated to registers r5 
2231           5871   ;self_test_bit             Allocated with name '_perform_normal_self_test_self_test_bit_1_209'
2231           5872   ;------------------------------------------------------------
2231           5873   ;        bmm150.c:1918: __xdata static int8_t perform_normal_self_test(struct bmm150_dev *dev)
2231           5874   ;        -----------------------------------------
2231           5875   ;         function perform_normal_self_test
2231           5876   ;        -----------------------------------------
2231           5877   _perform_normal_self_test:
2231 AA82      5878            mov     r2,dpl
2233 AB83      5879            mov     r3,dph
2235 ACF0      5880            mov     r4,b
2237           5881   ;        bmm150.c:1924: rslt = enable_normal_self_test(&self_test_bit, dev);
2237 8AB8      5882            mov     _enable_normal_self_test_PARM_2,r2
2239 8BB9      5883            mov     (_enable_normal_self_test_PARM_2 + 1),r3
223B 8CBA      5884            mov     (_enable_normal_self_test_PARM_2 + 2),r4
223D 906868    5885            mov     dptr,#_perform_normal_self_test_self_test_bit_1_209
2240 75F040    5886            mov     b,#0x40
2243 C002      5887            push    ar2
2245 C003      5888            push    ar3
2247 C004      5889            push    ar4
2249 120000    5890            lcall   _enable_normal_self_test
224C AD82      5891            mov     r5,dpl
224E D004      5892            pop     ar4
2250 D003      5893            pop     ar3
2252 D002      5894            pop     ar2
2254           5895   ;        bmm150.c:1927: if ((rslt == BMM150_OK) && (self_test_bit == 0))
2254 ED        5896            mov     a,r5
2255 7000      5897            jnz     L033002?
2257 E568      5898            mov     a,_perform_normal_self_test_self_test_bit_1_209
2259 7000      5899            jnz     L033002?
225B           5900   ;        bmm150.c:1930: rslt = validate_normal_self_test(dev);
225B 8A82      5901            mov     dpl,r2
225D 8B83      5902            mov     dph,r3
225F 8CF0      5903            mov     b,r4
2261 120000    5904            lcall   _validate_normal_self_test
2264 AD82      5905            mov     r5,dpl
2266           5906   L033002?:
2266           5907   ;        bmm150.c:1933: return rslt;
2266 8D82      5908            mov     dpl,r5
2268 22        5909            ret
2269           5910   ;------------------------------------------------------------
2269           5911   ;Allocation info for local variables in function 'enable_normal_self_test'
2269           5912   ;------------------------------------------------------------
2269           5913   ;dev                       Allocated with name '_enable_normal_self_test_PARM_2'
2269           5914   ;self_test_enable          Allocated with name '_enable_normal_self_test_self_test_enable_1_211'
2269           5915   ;rslt                      Allocated with name '_enable_normal_self_test_rslt_1_212'
2269           5916   ;reg_data                  Allocated with name '_enable_normal_self_test_reg_data_1_212'
2269           5917   ;self_test_val             Allocated to registers 
2269           5918   ;------------------------------------------------------------
2269           5919   ;        bmm150.c:1941: __xdata static int8_t enable_normal_self_test(uint8_t *self_test_enable, struct bmm150_dev *dev)
2269           5920   ;        -----------------------------------------
2269           5921   ;         function enable_normal_self_test
2269           5922   ;        -----------------------------------------
2269           5923   _enable_normal_self_test:
2269 858218    5924            mov     _enable_normal_self_test_self_test_enable_1_211,dpl
226C 858319    5925            mov     (_enable_normal_self_test_self_test_enable_1_211 + 1),dph
226F 85F01A    5926            mov     (_enable_normal_self_test_self_test_enable_1_211 + 2),b
2272           5927   ;        bmm150.c:1948: rslt = bmm150_get_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
2272 C0B8      5928            push    _enable_normal_self_test_PARM_2
2274 C0B9      5929            push    (_enable_normal_self_test_PARM_2 + 1)
2276 C0BA      5930            push    (_enable_normal_self_test_PARM_2 + 2)
2278 7401      5931            mov     a,#0x01
227A C0E0      5932            push    acc
227C E4        5933            clr     a
227D C0E0      5934            push    acc
227F C0E0      5935            push    acc
2281 C0E0      5936            push    acc
2283 74D8      5937            mov     a,#_enable_normal_self_test_reg_data_1_212
2285 C0E0      5938            push    acc
2287 7469      5939            mov     a,#(_enable_normal_self_test_reg_data_1_212 >> 8)
2289 C0E0      5940            push    acc
228B 7440      5941            mov     a,#0x40
228D C0E0      5942            push    acc
228F 75824C    5943            mov     dpl,#0x4C
2292 120000    5944            lcall   _bmm150_get_regs
2295 858278    5945            mov     _enable_normal_self_test_rslt_1_212,dpl
2298 E581      5946            mov     a,sp
229A 24F6      5947            add     a,#0xf6
229C F581      5948            mov     sp,a
229E           5949   ;        bmm150.c:1950: if (rslt == BMM150_OK)
229E E578      5950            mov     a,_enable_normal_self_test_rslt_1_212
22A0 6000      5951            jz      L034009?
22A2 020000    5952            ljmp    L034004?
22A5           5953   L034009?:
22A5           5954   ;        bmm150.c:1954: reg_data = BMM150_SET_BITS_POS_0(reg_data, BMM150_SELF_TEST, self_test_val);
22A5 74FE      5955            mov     a,#0xFE
22A7 55D8      5956            anl     a,_enable_normal_self_test_reg_data_1_212
22A9 FE        5957            mov     r6,a
22AA 430601    5958            orl     ar6,#0x01
22AD 8ED8      5959            mov     _enable_normal_self_test_reg_data_1_212,r6
22AF           5960   ;        bmm150.c:1957: rslt = bmm150_set_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
22AF 7500D8    5961            mov     _bmm150_set_regs_PARM_2,#_enable_normal_self_test_reg_data_1_212
22B2 750100    5962            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
22B5 750240    5963            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
22B8 75B001    5964            mov     _bmm150_set_regs_PARM_3,#0x01
22BB E4        5965            clr     a
22BC F5B1      5966            mov     (_bmm150_set_regs_PARM_3 + 1),a
22BE F5B2      5967            mov     (_bmm150_set_regs_PARM_3 + 2),a
22C0 F5B3      5968            mov     (_bmm150_set_regs_PARM_3 + 3),a
22C2 85B860    5969            mov     _bmm150_set_regs_PARM_4,_enable_normal_self_test_PARM_2
22C5 85B961    5970            mov     (_bmm150_set_regs_PARM_4 + 1),(_enable_normal_self_test_PARM_2 + 1)
22C8 85BA62    5971            mov     (_bmm150_set_regs_PARM_4 + 2),(_enable_normal_self_test_PARM_2 + 2)
22CB 75824C    5972            mov     dpl,#0x4C
22CE 120000    5973            lcall   _bmm150_set_regs
22D1 858278    5974            mov     _enable_normal_self_test_rslt_1_212,dpl
22D4           5975   ;        bmm150.c:1958: dev->delay_us(BMM150_DELAY_NORMAL_SELF_TEST, dev->intf_ptr);
22D4 AEB8      5976            mov     r6,_enable_normal_self_test_PARM_2
22D6 AFB9      5977            mov     r7,(_enable_normal_self_test_PARM_2 + 1)
22D8 A8BA      5978            mov     r0,(_enable_normal_self_test_PARM_2 + 2)
22DA 740A      5979            mov     a,#0x0A
22DC 2E        5980            add     a,r6
22DD F9        5981            mov     r1,a
22DE E4        5982            clr     a
22DF 3F        5983            addc    a,r7
22E0 FA        5984            mov     r2,a
22E1 8803      5985            mov     ar3,r0
22E3 8982      5986            mov     dpl,r1
22E5 8A83      5987            mov     dph,r2
22E7 8BF0      5988            mov     b,r3
22E9 120000    5989            lcall   __gptrget
22EC F9        5990            mov     r1,a
22ED A3        5991            inc     dptr
22EE 120000    5992            lcall   __gptrget
22F1 FA        5993            mov     r2,a
22F2 7402      5994            mov     a,#0x02
22F4 2E        5995            add     a,r6
22F5 FB        5996            mov     r3,a
22F6 E4        5997            clr     a
22F7 3F        5998            addc    a,r7
22F8 FC        5999            mov     r4,a
22F9 8805      6000            mov     ar5,r0
22FB 8B82      6001            mov     dpl,r3
22FD 8C83      6002            mov     dph,r4
22FF 8DF0      6003            mov     b,r5
2301 120000    6004            lcall   __gptrget
2304 FB        6005            mov     r3,a
2305 A3        6006            inc     dptr
2306 120000    6007            lcall   __gptrget
2309 FC        6008            mov     r4,a
230A A3        6009            inc     dptr
230B 120000    6010            lcall   __gptrget
230E FD        6011            mov     r5,a
230F C002      6012            push    ar2
2311 C006      6013            push    ar6
2313 C007      6014            push    ar7
2315 C000      6015            push    ar0
2317 C001      6016            push    ar1
2319 C003      6017            push    ar3
231B C004      6018            push    ar4
231D C005      6019            push    ar5
231F 74E0      6020            mov     a,#L034010?
2321 C0E0      6021            push    acc
2323 7498      6022            mov     a,#(L034010? >> 8)
2325 C0E0      6023            push    acc
2327 C001      6024            push    ar1
2329 C002      6025            push    ar2
232B 9007D0    6026            mov     dptr,#0x07D0
232E E4        6027            clr     a
232F F5F0      6028            mov     b,a
2331 22        6029            ret
2332           6030   L034010?:
2332 1581      6031            dec     sp
2334 1581      6032            dec     sp
2336 1581      6033            dec     sp
2338 D001      6034            pop     ar1
233A D000      6035            pop     ar0
233C D007      6036            pop     ar7
233E D006      6037            pop     ar6
2340 D002      6038            pop     ar2
2342           6039   ;        bmm150.c:1960: if (rslt == BMM150_OK)
2342 E578      6040            mov     a,_enable_normal_self_test_rslt_1_212
2344 7000      6041            jnz     L034004?
2346           6042   ;        bmm150.c:1963: rslt = bmm150_get_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
2346 C006      6043            push    ar6
2348 C007      6044            push    ar7
234A C000      6045            push    ar0
234C 7401      6046            mov     a,#0x01
234E C0E0      6047            push    acc
2350 E4        6048            clr     a
2351 C0E0      6049            push    acc
2353 C0E0      6050            push    acc
2355 C0E0      6051            push    acc
2357 74D8      6052            mov     a,#_enable_normal_self_test_reg_data_1_212
2359 C0E0      6053            push    acc
235B 7469      6054            mov     a,#(_enable_normal_self_test_reg_data_1_212 >> 8)
235D C0E0      6055            push    acc
235F 7440      6056            mov     a,#0x40
2361 C0E0      6057            push    acc
2363 75824C    6058            mov     dpl,#0x4C
2366 120000    6059            lcall   _bmm150_get_regs
2369 858278    6060            mov     _enable_normal_self_test_rslt_1_212,dpl
236C E581      6061            mov     a,sp
236E 24F6      6062            add     a,#0xf6
2370 F581      6063            mov     sp,a
2372           6064   ;        bmm150.c:1968: *self_test_enable = BMM150_GET_BITS_POS_0(reg_data, BMM150_SELF_TEST);
2372 AAD8      6065            mov     r2,_enable_normal_self_test_reg_data_1_212
2374 530201    6066            anl     ar2,#0x01
2377 7B00      6067            mov     r3,#0x00
2379 851882    6068            mov     dpl,_enable_normal_self_test_self_test_enable_1_211
237C 851983    6069            mov     dph,(_enable_normal_self_test_self_test_enable_1_211 + 1)
237F 851AF0    6070            mov     b,(_enable_normal_self_test_self_test_enable_1_211 + 2)
2382 EA        6071            mov     a,r2
2383 120000    6072            lcall   __gptrput
2386           6073   L034004?:
2386           6074   ;        bmm150.c:1972: return rslt;
2386 857882    6075            mov     dpl,_enable_normal_self_test_rslt_1_212
2389 22        6076            ret
238A           6077   ;------------------------------------------------------------
238A           6078   ;Allocation info for local variables in function 'validate_normal_self_test'
238A           6079   ;------------------------------------------------------------
238A           6080   ;dev                       Allocated to registers r2 r3 r4 
238A           6081   ;rslt                      Allocated to registers r2 
238A           6082   ;status                    Allocated to registers r3 
238A           6083   ;self_test_rslt            Allocated with name '_validate_normal_self_test_self_test_rslt_1_216'
238A           6084   ;------------------------------------------------------------
238A           6085   ;        bmm150.c:1980: __xdata static int8_t validate_normal_self_test(struct bmm150_dev *dev)
238A           6086   ;        -----------------------------------------
238A           6087   ;         function validate_normal_self_test
238A           6088   ;        -----------------------------------------
238A           6089   _validate_normal_self_test:
238A AA82      6090            mov     r2,dpl
238C AB83      6091            mov     r3,dph
238E ACF0      6092            mov     r4,b
2390           6093   ;        bmm150.c:1987: rslt = bmm150_get_regs(BMM150_REG_DATA_X_LSB, self_test_rslt, BMM150_LEN_SELF_TEST, dev);
2390 C002      6094            push    ar2
2392 C003      6095            push    ar3
2394 C004      6096            push    ar4
2396 7405      6097            mov     a,#0x05
2398 C0E0      6098            push    acc
239A E4        6099            clr     a
239B C0E0      6100            push    acc
239D C0E0      6101            push    acc
239F C0E0      6102            push    acc
23A1 7438      6103            mov     a,#_validate_normal_self_test_self_test_rslt_1_216
23A3 C0E0      6104            push    acc
23A5 746A      6105            mov     a,#(_validate_normal_self_test_self_test_rslt_1_216 >> 8)
23A7 C0E0      6106            push    acc
23A9 7440      6107            mov     a,#0x40
23AB C0E0      6108            push    acc
23AD 758242    6109            mov     dpl,#0x42
23B0 120000    6110            lcall   _bmm150_get_regs
23B3 AA82      6111            mov     r2,dpl
23B5 E581      6112            mov     a,sp
23B7 24F6      6113            add     a,#0xf6
23B9 F581      6114            mov     sp,a
23BB           6115   ;        bmm150.c:1989: if (rslt == BMM150_OK)
23BB EA        6116            mov     a,r2
23BC           6117   ;        bmm150.c:1993: self_test_rslt[0] = BMM150_GET_BITS_POS_0(self_test_rslt[0], BMM150_SELF_TEST);
23BC 7000      6118            jnz     L035008?
23BE AB38      6119            mov     r3,_validate_normal_self_test_self_test_rslt_1_216
23C0 530301    6120            anl     ar3,#0x01
23C3 8B38      6121            mov     _validate_normal_self_test_self_test_rslt_1_216,r3
23C5           6122   ;        bmm150.c:1996: self_test_rslt[2] = BMM150_GET_BITS_POS_0(self_test_rslt[2], BMM150_SELF_TEST);
23C5 AC3A      6123            mov     r4,(_validate_normal_self_test_self_test_rslt_1_216 + 0x0002)
23C7 530401    6124            anl     ar4,#0x01
23CA 8C3A      6125            mov     (_validate_normal_self_test_self_test_rslt_1_216 + 0x0002),r4
23CC           6126   ;        bmm150.c:1999: self_test_rslt[4] = BMM150_GET_BITS_POS_0(self_test_rslt[4], BMM150_SELF_TEST);
23CC AD3C      6127            mov     r5,(_validate_normal_self_test_self_test_rslt_1_216 + 0x0004)
23CE 530501    6128            anl     ar5,#0x01
23D1 7E00      6129            mov     r6,#0x00
23D3           6130   ;        bmm150.c:2004: status = (uint8_t)((self_test_rslt[4] << 2) | (self_test_rslt[2] << 1) | self_test_rslt[0]);
23D3 ED        6131            mov     a,r5
23D4 F53C      6132            mov     (_validate_normal_self_test_self_test_rslt_1_216 + 0x0004),a
23D6 25E0      6133            add     a,acc
23D8 25E0      6134            add     a,acc
23DA FD        6135            mov     r5,a
23DB EC        6136            mov     a,r4
23DC 2C        6137            add     a,r4
23DD 4D        6138            orl     a,r5
23DE 4203      6139            orl     ar3,a
23E0           6140   ;        bmm150.c:2007: if (status == BMM150_SELF_TEST_STATUS_SUCCESS)
23E0 8B04      6141            mov     ar4,r3
23E2 7D00      6142            mov     r5,#0x00
23E4 BC0760    6143            cjne    r4,#0x07,L035005?
23E7 BD0060    6144            cjne    r5,#0x00,L035005?
23EA           6145   ;        bmm150.c:2010: rslt = BMM150_OK;
23EA 7A00      6146            mov     r2,#0x00
23EC 8000      6147            sjmp    L035008?
23EE           6148   L035005?:
23EE           6149   ;        bmm150.c:2014: if (status == BMM150_SELF_TEST_STATUS_XYZ_FAIL)
23EE EB        6150            mov     a,r3
23EF 7000      6151            jnz     L035002?
23F1           6152   ;        bmm150.c:2017: rslt = BMM150_W_NORMAL_SELF_TEST_XYZ_FAIL;
23F1 7A07      6153            mov     r2,#0x07
23F3 8000      6154            sjmp    L035008?
23F5           6155   L035002?:
23F5           6156   ;        bmm150.c:2022: rslt = (int8_t)status;
23F5 8B02      6157            mov     ar2,r3
23F7           6158   L035008?:
23F7           6159   ;        bmm150.c:2027: return rslt;
23F7 8A82      6160            mov     dpl,r2
23F9 22        6161            ret
23FA           6162   ;------------------------------------------------------------
23FA           6163   ;Allocation info for local variables in function 'adv_self_test_settings'
23FA           6164   ;------------------------------------------------------------
23FA           6165   ;dev                       Allocated to registers r2 r3 r4 
23FA           6166   ;rslt                      Allocated to registers r5 
23FA           6167   ;settings                  Allocated with name '_adv_self_test_settings_settings_1_223'
23FA           6168   ;------------------------------------------------------------
23FA           6169   ;        bmm150.c:2079: __xdata static int8_t adv_self_test_settings(struct bmm150_dev *dev)
23FA           6170   ;        -----------------------------------------
23FA           6171   ;         function adv_self_test_settings
23FA           6172   ;        -----------------------------------------
23FA           6173   _adv_self_test_settings:
23FA AA82      6174            mov     r2,dpl
23FC AB83      6175            mov     r3,dph
23FE ACF0      6176            mov     r4,b
2400           6177   ;        bmm150.c:2085: settings.pwr_mode = BMM150_POWERMODE_SLEEP;
2400 759903    6178            mov     (_adv_self_test_settings_settings_1_223 + 0x0001),#0x03
2403           6179   ;        bmm150.c:2086: rslt = bmm150_set_op_mode(&settings, dev);
2403 8A10      6180            mov     _bmm150_set_op_mode_PARM_2,r2
2405 8B11      6181            mov     (_bmm150_set_op_mode_PARM_2 + 1),r3
2407 8C12      6182            mov     (_bmm150_set_op_mode_PARM_2 + 2),r4
2409 906A98    6183            mov     dptr,#_adv_self_test_settings_settings_1_223
240C 75F040    6184            mov     b,#0x40
240F C002      6185            push    ar2
2411 C003      6186            push    ar3
2413 C004      6187            push    ar4
2415 120000    6188            lcall   _bmm150_set_op_mode
2418 AD82      6189            mov     r5,dpl
241A D004      6190            pop     ar4
241C D003      6191            pop     ar3
241E D002      6192            pop     ar2
2420           6193   ;        bmm150.c:2088: if (rslt == BMM150_OK)
2420 ED        6194            mov     a,r5
2421 7000      6195            jnz     L036004?
2423           6196   ;        bmm150.c:2091: settings.xyz_axes_control = BMM150_DISABLE_XY_AXIS;
2423 759803    6197            mov     _adv_self_test_settings_settings_1_223,#0x03
2426           6198   ;        bmm150.c:2092: rslt = set_control_measurement_xyz(&settings, dev);
2426 8AA8      6199            mov     _set_control_measurement_xyz_PARM_2,r2
2428 8BA9      6200            mov     (_set_control_measurement_xyz_PARM_2 + 1),r3
242A 8CAA      6201            mov     (_set_control_measurement_xyz_PARM_2 + 2),r4
242C 906A98    6202            mov     dptr,#_adv_self_test_settings_settings_1_223
242F 75F040    6203            mov     b,#0x40
2432 C002      6204            push    ar2
2434 C003      6205            push    ar3
2436 C004      6206            push    ar4
2438 120000    6207            lcall   _set_control_measurement_xyz
243B AD82      6208            mov     r5,dpl
243D D004      6209            pop     ar4
243F D003      6210            pop     ar3
2441 D002      6211            pop     ar2
2443           6212   ;        bmm150.c:2094: if (rslt == BMM150_OK)
2443 ED        6213            mov     a,r5
2444 7000      6214            jnz     L036004?
2446           6215   ;        bmm150.c:2097: settings.z_rep = BMM150_SELF_TEST_REP_Z;
2446 759C04    6216            mov     (_adv_self_test_settings_settings_1_223 + 0x0004),#0x04
2449           6217   ;        bmm150.c:2098: rslt = set_z_rep(&settings, dev);
2449 8A18      6218            mov     _set_z_rep_PARM_2,r2
244B 8B19      6219            mov     (_set_z_rep_PARM_2 + 1),r3
244D 8C1A      6220            mov     (_set_z_rep_PARM_2 + 2),r4
244F 906A98    6221            mov     dptr,#_adv_self_test_settings_settings_1_223
2452 75F040    6222            mov     b,#0x40
2455 120000    6223            lcall   _set_z_rep
2458 AD82      6224            mov     r5,dpl
245A           6225   L036004?:
245A           6226   ;        bmm150.c:2102: return rslt;
245A 8D82      6227            mov     dpl,r5
245C 22        6228            ret
245D           6229   ;------------------------------------------------------------
245D           6230   ;Allocation info for local variables in function 'adv_self_test_measurement'
245D           6231   ;------------------------------------------------------------
245D           6232   ;data_z                    Allocated with name '_adv_self_test_measurement_PARM_2'
245D           6233   ;dev                       Allocated with name '_adv_self_test_measurement_PARM_3'
245D           6234   ;self_test_current         Allocated to registers 
245D           6235   ;rslt                      Allocated with name '_adv_self_test_measurement_rslt_1_227'
245D           6236   ;settings                  Allocated with name '_adv_self_test_measurement_settings_1_227'
245D           6237   ;mag_data                  Allocated with name '_adv_self_test_measurement_mag_data_1_227'
245D           6238   ;sloc0                     Allocated with name '_adv_self_test_measurement_sloc0_1_0'
245D           6239   ;------------------------------------------------------------
245D           6240   ;        bmm150.c:2109: __xdata static int8_t adv_self_test_measurement(uint8_t self_test_current, int16_t *data_z, struct bmm150_dev *dev)
245D           6241   ;        -----------------------------------------
245D           6242   ;         function adv_self_test_measurement
245D           6243   ;        -----------------------------------------
245D           6244   _adv_self_test_measurement:
245D           6245   ;        bmm150.c:2118: rslt = set_adv_self_test_current(self_test_current, dev);
245D 855838    6246            mov     _set_adv_self_test_current_PARM_2,_adv_self_test_measurement_PARM_3
2460 855939    6247            mov     (_set_adv_self_test_current_PARM_2 + 1),(_adv_self_test_measurement_PARM_3 + 1)
2463 855A3A    6248            mov     (_set_adv_self_test_current_PARM_2 + 2),(_adv_self_test_measurement_PARM_3 + 2)
2466 120000    6249            lcall   _set_adv_self_test_current
2469           6250   ;        bmm150.c:2120: if (rslt == BMM150_OK)
2469 E582      6251            mov     a,dpl
246B F5B8      6252            mov     _adv_self_test_measurement_rslt_1_227,a
246D 6000      6253            jz      L037012?
246F 020000    6254            ljmp    L037006?
2472           6255   L037012?:
2472           6256   ;        bmm150.c:2123: settings.pwr_mode = BMM150_POWERMODE_FORCED;
2472 751901    6257            mov     (_adv_self_test_measurement_settings_1_227 + 0x0001),#0x01
2475           6258   ;        bmm150.c:2124: rslt = bmm150_set_op_mode(&settings, dev);
2475 855810    6259            mov     _bmm150_set_op_mode_PARM_2,_adv_self_test_measurement_PARM_3
2478 855911    6260            mov     (_bmm150_set_op_mode_PARM_2 + 1),(_adv_self_test_measurement_PARM_3 + 1)
247B 855A12    6261            mov     (_bmm150_set_op_mode_PARM_2 + 2),(_adv_self_test_measurement_PARM_3 + 2)
247E 906C18    6262            mov     dptr,#_adv_self_test_measurement_settings_1_227
2481 75F040    6263            mov     b,#0x40
2484 120000    6264            lcall   _bmm150_set_op_mode
2487 8582B8    6265            mov     _adv_self_test_measurement_rslt_1_227,dpl
248A           6266   ;        bmm150.c:2127: dev->delay_us(BMM150_DELAY_ADV_SELF_TEST, dev->intf_ptr);
248A AB58      6267            mov     r3,_adv_self_test_measurement_PARM_3
248C AC59      6268            mov     r4,(_adv_self_test_measurement_PARM_3 + 1)
248E AD5A      6269            mov     r5,(_adv_self_test_measurement_PARM_3 + 2)
2490 740A      6270            mov     a,#0x0A
2492 2B        6271            add     a,r3
2493 FE        6272            mov     r6,a
2494 E4        6273            clr     a
2495 3C        6274            addc    a,r4
2496 FF        6275            mov     r7,a
2497 8D02      6276            mov     ar2,r5
2499 8E82      6277            mov     dpl,r6
249B 8F83      6278            mov     dph,r7
249D 8AF0      6279            mov     b,r2
249F 120000    6280            lcall   __gptrget
24A2 F5D8      6281            mov     _adv_self_test_measurement_sloc0_1_0,a
24A4 A3        6282            inc     dptr
24A5 120000    6283            lcall   __gptrget
24A8 F5D9      6284            mov     (_adv_self_test_measurement_sloc0_1_0 + 1),a
24AA 7402      6285            mov     a,#0x02
24AC 2B        6286            add     a,r3
24AD FA        6287            mov     r2,a
24AE E4        6288            clr     a
24AF 3C        6289            addc    a,r4
24B0 FE        6290            mov     r6,a
24B1 8D07      6291            mov     ar7,r5
24B3 8A82      6292            mov     dpl,r2
24B5 8E83      6293            mov     dph,r6
24B7 8FF0      6294            mov     b,r7
24B9 120000    6295            lcall   __gptrget
24BC FA        6296            mov     r2,a
24BD A3        6297            inc     dptr
24BE 120000    6298            lcall   __gptrget
24C1 FE        6299            mov     r6,a
24C2 A3        6300            inc     dptr
24C3 120000    6301            lcall   __gptrget
24C6 FF        6302            mov     r7,a
24C7 C003      6303            push    ar3
24C9 C004      6304            push    ar4
24CB C005      6305            push    ar5
24CD C002      6306            push    ar2
24CF C006      6307            push    ar6
24D1 C007      6308            push    ar7
24D3 7490      6309            mov     a,#L037013?
24D5 C0E0      6310            push    acc
24D7 749B      6311            mov     a,#(L037013? >> 8)
24D9 C0E0      6312            push    acc
24DB C0D8      6313            push    _adv_self_test_measurement_sloc0_1_0
24DD C0D9      6314            push    (_adv_self_test_measurement_sloc0_1_0 + 1)
24DF 900FA0    6315            mov     dptr,#0x0FA0
24E2 E4        6316            clr     a
24E3 F5F0      6317            mov     b,a
24E5 22        6318            ret
24E6           6319   L037013?:
24E6 1581      6320            dec     sp
24E8 1581      6321            dec     sp
24EA 1581      6322            dec     sp
24EC D005      6323            pop     ar5
24EE D004      6324            pop     ar4
24F0 D003      6325            pop     ar3
24F2           6326   ;        bmm150.c:2129: if (rslt == BMM150_OK)
24F2 E5B8      6327            mov     a,_adv_self_test_measurement_rslt_1_227
24F4 7000      6328            jnz     L037006?
24F6           6329   ;        bmm150.c:2132: rslt = bmm150_read_mag_data(&mag_data, dev);
24F6 8B00      6330            mov     _bmm150_read_mag_data_PARM_2,r3
24F8 8C01      6331            mov     (_bmm150_read_mag_data_PARM_2 + 1),r4
24FA 8D02      6332            mov     (_bmm150_read_mag_data_PARM_2 + 2),r5
24FC 906C78    6333            mov     dptr,#_adv_self_test_measurement_mag_data_1_227
24FF 75F040    6334            mov     b,#0x40
2502 120000    6335            lcall   _bmm150_read_mag_data
2505           6336   ;        bmm150.c:2134: if (rslt == BMM150_OK)
2505 E582      6337            mov     a,dpl
2507 F5B8      6338            mov     _adv_self_test_measurement_rslt_1_227,a
2509 7000      6339            jnz     L037006?
250B           6340   ;        bmm150.c:2137: *data_z = mag_data.z;
250B AAF8      6341            mov     r2,_adv_self_test_measurement_PARM_2
250D ABF9      6342            mov     r3,(_adv_self_test_measurement_PARM_2 + 1)
250F ACFA      6343            mov     r4,(_adv_self_test_measurement_PARM_2 + 2)
2511 AD7C      6344            mov     r5,(_adv_self_test_measurement_mag_data_1_227 + 0x0004)
2513 AE7D      6345            mov     r6,((_adv_self_test_measurement_mag_data_1_227 + 0x0004) + 1)
2515 8A82      6346            mov     dpl,r2
2517 8B83      6347            mov     dph,r3
2519 8CF0      6348            mov     b,r4
251B ED        6349            mov     a,r5
251C 120000    6350            lcall   __gptrput
251F A3        6351            inc     dptr
2520 EE        6352            mov     a,r6
2521 120000    6353            lcall   __gptrput
2524           6354   L037006?:
2524           6355   ;        bmm150.c:2142: return rslt;
2524 85B882    6356            mov     dpl,_adv_self_test_measurement_rslt_1_227
2527 22        6357            ret
2528           6358   ;------------------------------------------------------------
2528           6359   ;Allocation info for local variables in function 'set_adv_self_test_current'
2528           6360   ;------------------------------------------------------------
2528           6361   ;dev                       Allocated with name '_set_adv_self_test_current_PARM_2'
2528           6362   ;self_test_current         Allocated to registers r2 
2528           6363   ;rslt                      Allocated to registers r3 
2528           6364   ;reg_data                  Allocated with name '_set_adv_self_test_current_reg_data_1_232'
2528           6365   ;------------------------------------------------------------
2528           6366   ;        bmm150.c:2180: __xdata static int8_t set_adv_self_test_current(uint8_t self_test_current, struct bmm150_dev *dev)
2528           6367   ;        -----------------------------------------
2528           6368   ;         function set_adv_self_test_current
2528           6369   ;        -----------------------------------------
2528           6370   _set_adv_self_test_current:
2528 AA82      6371            mov     r2,dpl
252A           6372   ;        bmm150.c:2186: rslt = bmm150_get_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
252A C002      6373            push    ar2
252C C038      6374            push    _set_adv_self_test_current_PARM_2
252E C039      6375            push    (_set_adv_self_test_current_PARM_2 + 1)
2530 C03A      6376            push    (_set_adv_self_test_current_PARM_2 + 2)
2532 7401      6377            mov     a,#0x01
2534 C0E0      6378            push    acc
2536 E4        6379            clr     a
2537 C0E0      6380            push    acc
2539 C0E0      6381            push    acc
253B C0E0      6382            push    acc
253D 7498      6383            mov     a,#_set_adv_self_test_current_reg_data_1_232
253F C0E0      6384            push    acc
2541 746D      6385            mov     a,#(_set_adv_self_test_current_reg_data_1_232 >> 8)
2543 C0E0      6386            push    acc
2545 7440      6387            mov     a,#0x40
2547 C0E0      6388            push    acc
2549 75824C    6389            mov     dpl,#0x4C
254C 120000    6390            lcall   _bmm150_get_regs
254F AB82      6391            mov     r3,dpl
2551 E581      6392            mov     a,sp
2553 24F6      6393            add     a,#0xf6
2555 F581      6394            mov     sp,a
2557 D002      6395            pop     ar2
2559           6396   ;        bmm150.c:2188: if (rslt == BMM150_OK)
2559 EB        6397            mov     a,r3
255A 7000      6398            jnz     L038002?
255C           6399   ;        bmm150.c:2193: reg_data = BMM150_SET_BITS(reg_data, BMM150_ADV_SELF_TEST, self_test_current);
255C 743F      6400            mov     a,#0x3F
255E 5598      6401            anl     a,_set_adv_self_test_current_reg_data_1_232
2560 FC        6402            mov     r4,a
2561 E4        6403            clr     a
2562 5403      6404            anl     a,#0x03
2564 A2E0      6405            mov     c,acc.0
2566 CA        6406            xch     a,r2
2567 13        6407            rrc     a
2568 CA        6408            xch     a,r2
2569 13        6409            rrc     a
256A A2E0      6410            mov     c,acc.0
256C CA        6411            xch     a,r2
256D 13        6412            rrc     a
256E CA        6413            xch     a,r2
256F 13        6414            rrc     a
2570 CA        6415            xch     a,r2
2571 5302C0    6416            anl     ar2,#0xC0
2574 E4        6417            clr     a
2575 FD        6418            mov     r5,a
2576 FE        6419            mov     r6,a
2577 EC        6420            mov     a,r4
2578 4202      6421            orl     ar2,a
257A EE        6422            mov     a,r6
257B 4205      6423            orl     ar5,a
257D 8A98      6424            mov     _set_adv_self_test_current_reg_data_1_232,r2
257F           6425   ;        bmm150.c:2194: rslt = bmm150_set_regs(BMM150_REG_OP_MODE, &reg_data, 1, dev);
257F 750098    6426            mov     _bmm150_set_regs_PARM_2,#_set_adv_self_test_current_reg_data_1_232
2582 750100    6427            mov     (_bmm150_set_regs_PARM_2 + 1),#0x00
2585 750240    6428            mov     (_bmm150_set_regs_PARM_2 + 2),#0x40
2588 75B001    6429            mov     _bmm150_set_regs_PARM_3,#0x01
258B E4        6430            clr     a
258C F5B1      6431            mov     (_bmm150_set_regs_PARM_3 + 1),a
258E F5B2      6432            mov     (_bmm150_set_regs_PARM_3 + 2),a
2590 F5B3      6433            mov     (_bmm150_set_regs_PARM_3 + 3),a
2592 853860    6434            mov     _bmm150_set_regs_PARM_4,_set_adv_self_test_current_PARM_2
2595 853961    6435            mov     (_bmm150_set_regs_PARM_4 + 1),(_set_adv_self_test_current_PARM_2 + 1)
2598 853A62    6436            mov     (_bmm150_set_regs_PARM_4 + 2),(_set_adv_self_test_current_PARM_2 + 2)
259B 75824C    6437            mov     dpl,#0x4C
259E 120000    6438            lcall   _bmm150_set_regs
25A1 AB82      6439            mov     r3,dpl
25A3           6440   L038002?:
25A3           6441   ;        bmm150.c:2197: return rslt;
25A3 8B82      6442            mov     dpl,r3
25A5 22        6443            ret
25A6           6444            rseg R_CSEG
25A6           6445   
0000           6446            rseg R_XINIT
0000           6447   
0000           6448            rseg R_CONST
0000           6449   
0000           6450            CSEG
0000           6451   
0000           6452   end
