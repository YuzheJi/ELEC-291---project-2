0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Fri Mar 21 17:26:36 2025
0000              5   ;--------------------------------------------------------
                  5   $name sensor_test
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _GetADC
0000             28            public _SPIWrite
0000             29            public _waitms
0000             30            public _Timer3us
0000             31            public __c51_external_startup
0000             32   ;--------------------------------------------------------
0000             33   ; Special Function Registers
0000             34   ;--------------------------------------------------------
0000             35   _ACC            DATA 0xe0
0000             36   _ADC0ASAH       DATA 0xb6
0000             37   _ADC0ASAL       DATA 0xb5
0000             38   _ADC0ASCF       DATA 0xa1
0000             39   _ADC0ASCT       DATA 0xc7
0000             40   _ADC0CF0        DATA 0xbc
0000             41   _ADC0CF1        DATA 0xb9
0000             42   _ADC0CF2        DATA 0xdf
0000             43   _ADC0CN0        DATA 0xe8
0000             44   _ADC0CN1        DATA 0xb2
0000             45   _ADC0CN2        DATA 0xb3
0000             46   _ADC0GTH        DATA 0xc4
0000             47   _ADC0GTL        DATA 0xc3
0000             48   _ADC0H          DATA 0xbe
0000             49   _ADC0L          DATA 0xbd
0000             50   _ADC0LTH        DATA 0xc6
0000             51   _ADC0LTL        DATA 0xc5
0000             52   _ADC0MX         DATA 0xbb
0000             53   _B              DATA 0xf0
0000             54   _CKCON0         DATA 0x8e
0000             55   _CKCON1         DATA 0xa6
0000             56   _CLEN0          DATA 0xc6
0000             57   _CLIE0          DATA 0xc7
0000             58   _CLIF0          DATA 0xe8
0000             59   _CLKSEL         DATA 0xa9
0000             60   _CLOUT0         DATA 0xd1
0000             61   _CLU0CF         DATA 0xb1
0000             62   _CLU0FN         DATA 0xaf
0000             63   _CLU0MX         DATA 0x84
0000             64   _CLU1CF         DATA 0xb3
0000             65   _CLU1FN         DATA 0xb2
0000             66   _CLU1MX         DATA 0x85
0000             67   _CLU2CF         DATA 0xb6
0000             68   _CLU2FN         DATA 0xb5
0000             69   _CLU2MX         DATA 0x91
0000             70   _CLU3CF         DATA 0xbf
0000             71   _CLU3FN         DATA 0xbe
0000             72   _CLU3MX         DATA 0xae
0000             73   _CMP0CN0        DATA 0x9b
0000             74   _CMP0CN1        DATA 0x99
0000             75   _CMP0MD         DATA 0x9d
0000             76   _CMP0MX         DATA 0x9f
0000             77   _CMP1CN0        DATA 0xbf
0000             78   _CMP1CN1        DATA 0xac
0000             79   _CMP1MD         DATA 0xab
0000             80   _CMP1MX         DATA 0xaa
0000             81   _CRC0CN0        DATA 0xce
0000             82   _CRC0CN1        DATA 0x86
0000             83   _CRC0CNT        DATA 0xd3
0000             84   _CRC0DAT        DATA 0xcb
0000             85   _CRC0FLIP       DATA 0xcf
0000             86   _CRC0IN         DATA 0xca
0000             87   _CRC0ST         DATA 0xd2
0000             88   _DAC0CF0        DATA 0x91
0000             89   _DAC0CF1        DATA 0x92
0000             90   _DAC0H          DATA 0x85
0000             91   _DAC0L          DATA 0x84
0000             92   _DAC1CF0        DATA 0x93
0000             93   _DAC1CF1        DATA 0x94
0000             94   _DAC1H          DATA 0x8a
0000             95   _DAC1L          DATA 0x89
0000             96   _DAC2CF0        DATA 0x95
0000             97   _DAC2CF1        DATA 0x96
0000             98   _DAC2H          DATA 0x8c
0000             99   _DAC2L          DATA 0x8b
0000            100   _DAC3CF0        DATA 0x9a
0000            101   _DAC3CF1        DATA 0x9c
0000            102   _DAC3H          DATA 0x8e
0000            103   _DAC3L          DATA 0x8d
0000            104   _DACGCF0        DATA 0x88
0000            105   _DACGCF1        DATA 0x98
0000            106   _DACGCF2        DATA 0xa2
0000            107   _DERIVID        DATA 0xad
0000            108   _DEVICEID       DATA 0xb5
0000            109   _DPH            DATA 0x83
0000            110   _DPL            DATA 0x82
0000            111   _EIE1           DATA 0xe6
0000            112   _EIE2           DATA 0xf3
0000            113   _EIP1           DATA 0xbb
0000            114   _EIP1H          DATA 0xee
0000            115   _EIP2           DATA 0xed
0000            116   _EIP2H          DATA 0xf6
0000            117   _EMI0CN         DATA 0xe7
0000            118   _FLKEY          DATA 0xb7
0000            119   _HFO0CAL        DATA 0xc7
0000            120   _HFO1CAL        DATA 0xd6
0000            121   _HFOCN          DATA 0xef
0000            122   _I2C0ADM        DATA 0xff
0000            123   _I2C0CN0        DATA 0xba
0000            124   _I2C0DIN        DATA 0xbc
0000            125   _I2C0DOUT       DATA 0xbb
0000            126   _I2C0FCN0       DATA 0xad
0000            127   _I2C0FCN1       DATA 0xab
0000            128   _I2C0FCT        DATA 0xf5
0000            129   _I2C0SLAD       DATA 0xbd
0000            130   _I2C0STAT       DATA 0xb9
0000            131   _IE             DATA 0xa8
0000            132   _IP             DATA 0xb8
0000            133   _IPH            DATA 0xf2
0000            134   _IT01CF         DATA 0xe4
0000            135   _LFO0CN         DATA 0xb1
0000            136   _P0             DATA 0x80
0000            137   _P0MASK         DATA 0xfe
0000            138   _P0MAT          DATA 0xfd
0000            139   _P0MDIN         DATA 0xf1
0000            140   _P0MDOUT        DATA 0xa4
0000            141   _P0SKIP         DATA 0xd4
0000            142   _P1             DATA 0x90
0000            143   _P1MASK         DATA 0xee
0000            144   _P1MAT          DATA 0xed
0000            145   _P1MDIN         DATA 0xf2
0000            146   _P1MDOUT        DATA 0xa5
0000            147   _P1SKIP         DATA 0xd5
0000            148   _P2             DATA 0xa0
0000            149   _P2MASK         DATA 0xfc
0000            150   _P2MAT          DATA 0xfb
0000            151   _P2MDIN         DATA 0xf3
0000            152   _P2MDOUT        DATA 0xa6
0000            153   _P2SKIP         DATA 0xcc
0000            154   _P3             DATA 0xb0
0000            155   _P3MDIN         DATA 0xf4
0000            156   _P3MDOUT        DATA 0x9c
0000            157   _PCA0CENT       DATA 0x9e
0000            158   _PCA0CLR        DATA 0x9c
0000            159   _PCA0CN0        DATA 0xd8
0000            160   _PCA0CPH0       DATA 0xfc
0000            161   _PCA0CPH1       DATA 0xea
0000            162   _PCA0CPH2       DATA 0xec
0000            163   _PCA0CPH3       DATA 0xf5
0000            164   _PCA0CPH4       DATA 0x85
0000            165   _PCA0CPH5       DATA 0xde
0000            166   _PCA0CPL0       DATA 0xfb
0000            167   _PCA0CPL1       DATA 0xe9
0000            168   _PCA0CPL2       DATA 0xeb
0000            169   _PCA0CPL3       DATA 0xf4
0000            170   _PCA0CPL4       DATA 0x84
0000            171   _PCA0CPL5       DATA 0xdd
0000            172   _PCA0CPM0       DATA 0xda
0000            173   _PCA0CPM1       DATA 0xdb
0000            174   _PCA0CPM2       DATA 0xdc
0000            175   _PCA0CPM3       DATA 0xae
0000            176   _PCA0CPM4       DATA 0xaf
0000            177   _PCA0CPM5       DATA 0xcc
0000            178   _PCA0H          DATA 0xfa
0000            179   _PCA0L          DATA 0xf9
0000            180   _PCA0MD         DATA 0xd9
0000            181   _PCA0POL        DATA 0x96
0000            182   _PCA0PWM        DATA 0xf7
0000            183   _PCON0          DATA 0x87
0000            184   _PCON1          DATA 0xcd
0000            185   _PFE0CN         DATA 0xc1
0000            186   _PRTDRV         DATA 0xf6
0000            187   _PSCTL          DATA 0x8f
0000            188   _PSTAT0         DATA 0xaa
0000            189   _PSW            DATA 0xd0
0000            190   _REF0CN         DATA 0xd1
0000            191   _REG0CN         DATA 0xc9
0000            192   _REVID          DATA 0xb6
0000            193   _RSTSRC         DATA 0xef
0000            194   _SBCON1         DATA 0x94
0000            195   _SBRLH1         DATA 0x96
0000            196   _SBRLL1         DATA 0x95
0000            197   _SBUF           DATA 0x99
0000            198   _SBUF0          DATA 0x99
0000            199   _SBUF1          DATA 0x92
0000            200   _SCON           DATA 0x98
0000            201   _SCON0          DATA 0x98
0000            202   _SCON1          DATA 0xc8
0000            203   _SFRPAGE        DATA 0xa7
0000            204   _SFRPGCN        DATA 0xbc
0000            205   _SFRSTACK       DATA 0xd7
0000            206   _SMB0ADM        DATA 0xd6
0000            207   _SMB0ADR        DATA 0xd7
0000            208   _SMB0CF         DATA 0xc1
0000            209   _SMB0CN0        DATA 0xc0
0000            210   _SMB0DAT        DATA 0xc2
0000            211   _SMB0FCN0       DATA 0xc3
0000            212   _SMB0FCN1       DATA 0xc4
0000            213   _SMB0FCT        DATA 0xef
0000            214   _SMB0RXLN       DATA 0xc5
0000            215   _SMB0TC         DATA 0xac
0000            216   _SMOD1          DATA 0x93
0000            217   _SP             DATA 0x81
0000            218   _SPI0CFG        DATA 0xa1
0000            219   _SPI0CKR        DATA 0xa2
0000            220   _SPI0CN0        DATA 0xf8
0000            221   _SPI0DAT        DATA 0xa3
0000            222   _SPI0FCN0       DATA 0x9a
0000            223   _SPI0FCN1       DATA 0x9b
0000            224   _SPI0FCT        DATA 0xf7
0000            225   _SPI0PCF        DATA 0xdf
0000            226   _TCON           DATA 0x88
0000            227   _TH0            DATA 0x8c
0000            228   _TH1            DATA 0x8d
0000            229   _TL0            DATA 0x8a
0000            230   _TL1            DATA 0x8b
0000            231   _TMOD           DATA 0x89
0000            232   _TMR2CN0        DATA 0xc8
0000            233   _TMR2CN1        DATA 0xfd
0000            234   _TMR2H          DATA 0xcf
0000            235   _TMR2L          DATA 0xce
0000            236   _TMR2RLH        DATA 0xcb
0000            237   _TMR2RLL        DATA 0xca
0000            238   _TMR3CN0        DATA 0x91
0000            239   _TMR3CN1        DATA 0xfe
0000            240   _TMR3H          DATA 0x95
0000            241   _TMR3L          DATA 0x94
0000            242   _TMR3RLH        DATA 0x93
0000            243   _TMR3RLL        DATA 0x92
0000            244   _TMR4CN0        DATA 0x98
0000            245   _TMR4CN1        DATA 0xff
0000            246   _TMR4H          DATA 0xa5
0000            247   _TMR4L          DATA 0xa4
0000            248   _TMR4RLH        DATA 0xa3
0000            249   _TMR4RLL        DATA 0xa2
0000            250   _TMR5CN0        DATA 0xc0
0000            251   _TMR5CN1        DATA 0xf1
0000            252   _TMR5H          DATA 0xd5
0000            253   _TMR5L          DATA 0xd4
0000            254   _TMR5RLH        DATA 0xd3
0000            255   _TMR5RLL        DATA 0xd2
0000            256   _UART0PCF       DATA 0xd9
0000            257   _UART1FCN0      DATA 0x9d
0000            258   _UART1FCN1      DATA 0xd8
0000            259   _UART1FCT       DATA 0xfa
0000            260   _UART1LIN       DATA 0x9e
0000            261   _UART1PCF       DATA 0xda
0000            262   _VDM0CN         DATA 0xff
0000            263   _WDTCN          DATA 0x97
0000            264   _XBR0           DATA 0xe1
0000            265   _XBR1           DATA 0xe2
0000            266   _XBR2           DATA 0xe3
0000            267   _XOSC0CN        DATA 0x86
0000            268   _DPTR           DATA 0x8382
0000            269   _TMR2RL         DATA 0xcbca
0000            270   _TMR3RL         DATA 0x9392
0000            271   _TMR4RL         DATA 0xa3a2
0000            272   _TMR5RL         DATA 0xd3d2
0000            273   _TMR0           DATA 0x8c8a
0000            274   _TMR1           DATA 0x8d8b
0000            275   _TMR2           DATA 0xcfce
0000            276   _TMR3           DATA 0x9594
0000            277   _TMR4           DATA 0xa5a4
0000            278   _TMR5           DATA 0xd5d4
0000            279   _SBRL1          DATA 0x9695
0000            280   _PCA0           DATA 0xfaf9
0000            281   _PCA0CP0        DATA 0xfcfb
0000            282   _PCA0CP1        DATA 0xeae9
0000            283   _PCA0CP2        DATA 0xeceb
0000            284   _PCA0CP3        DATA 0xf5f4
0000            285   _PCA0CP4        DATA 0x8584
0000            286   _PCA0CP5        DATA 0xdedd
0000            287   _ADC0ASA        DATA 0xb6b5
0000            288   _ADC0GT         DATA 0xc4c3
0000            289   _ADC0           DATA 0xbebd
0000            290   _ADC0LT         DATA 0xc6c5
0000            291   _DAC0           DATA 0x8584
0000            292   _DAC1           DATA 0x8a89
0000            293   _DAC2           DATA 0x8c8b
0000            294   _DAC3           DATA 0x8e8d
0000            295   ;--------------------------------------------------------
0000            296   ; special function bits
0000            297   ;--------------------------------------------------------
0000            298   _ACC_0          BIT 0xe0
0000            299   _ACC_1          BIT 0xe1
0000            300   _ACC_2          BIT 0xe2
0000            301   _ACC_3          BIT 0xe3
0000            302   _ACC_4          BIT 0xe4
0000            303   _ACC_5          BIT 0xe5
0000            304   _ACC_6          BIT 0xe6
0000            305   _ACC_7          BIT 0xe7
0000            306   _TEMPE          BIT 0xe8
0000            307   _ADGN0          BIT 0xe9
0000            308   _ADGN1          BIT 0xea
0000            309   _ADWINT         BIT 0xeb
0000            310   _ADBUSY         BIT 0xec
0000            311   _ADINT          BIT 0xed
0000            312   _IPOEN          BIT 0xee
0000            313   _ADEN           BIT 0xef
0000            314   _B_0            BIT 0xf0
0000            315   _B_1            BIT 0xf1
0000            316   _B_2            BIT 0xf2
0000            317   _B_3            BIT 0xf3
0000            318   _B_4            BIT 0xf4
0000            319   _B_5            BIT 0xf5
0000            320   _B_6            BIT 0xf6
0000            321   _B_7            BIT 0xf7
0000            322   _C0FIF          BIT 0xe8
0000            323   _C0RIF          BIT 0xe9
0000            324   _C1FIF          BIT 0xea
0000            325   _C1RIF          BIT 0xeb
0000            326   _C2FIF          BIT 0xec
0000            327   _C2RIF          BIT 0xed
0000            328   _C3FIF          BIT 0xee
0000            329   _C3RIF          BIT 0xef
0000            330   _D1SRC0         BIT 0x88
0000            331   _D1SRC1         BIT 0x89
0000            332   _D1AMEN         BIT 0x8a
0000            333   _D01REFSL       BIT 0x8b
0000            334   _D3SRC0         BIT 0x8c
0000            335   _D3SRC1         BIT 0x8d
0000            336   _D3AMEN         BIT 0x8e
0000            337   _D23REFSL       BIT 0x8f
0000            338   _D0UDIS         BIT 0x98
0000            339   _D1UDIS         BIT 0x99
0000            340   _D2UDIS         BIT 0x9a
0000            341   _D3UDIS         BIT 0x9b
0000            342   _EX0            BIT 0xa8
0000            343   _ET0            BIT 0xa9
0000            344   _EX1            BIT 0xaa
0000            345   _ET1            BIT 0xab
0000            346   _ES0            BIT 0xac
0000            347   _ET2            BIT 0xad
0000            348   _ESPI0          BIT 0xae
0000            349   _EA             BIT 0xaf
0000            350   _PX0            BIT 0xb8
0000            351   _PT0            BIT 0xb9
0000            352   _PX1            BIT 0xba
0000            353   _PT1            BIT 0xbb
0000            354   _PS0            BIT 0xbc
0000            355   _PT2            BIT 0xbd
0000            356   _PSPI0          BIT 0xbe
0000            357   _P0_0           BIT 0x80
0000            358   _P0_1           BIT 0x81
0000            359   _P0_2           BIT 0x82
0000            360   _P0_3           BIT 0x83
0000            361   _P0_4           BIT 0x84
0000            362   _P0_5           BIT 0x85
0000            363   _P0_6           BIT 0x86
0000            364   _P0_7           BIT 0x87
0000            365   _P1_0           BIT 0x90
0000            366   _P1_1           BIT 0x91
0000            367   _P1_2           BIT 0x92
0000            368   _P1_3           BIT 0x93
0000            369   _P1_4           BIT 0x94
0000            370   _P1_5           BIT 0x95
0000            371   _P1_6           BIT 0x96
0000            372   _P1_7           BIT 0x97
0000            373   _P2_0           BIT 0xa0
0000            374   _P2_1           BIT 0xa1
0000            375   _P2_2           BIT 0xa2
0000            376   _P2_3           BIT 0xa3
0000            377   _P2_4           BIT 0xa4
0000            378   _P2_5           BIT 0xa5
0000            379   _P2_6           BIT 0xa6
0000            380   _P3_0           BIT 0xb0
0000            381   _P3_1           BIT 0xb1
0000            382   _P3_2           BIT 0xb2
0000            383   _P3_3           BIT 0xb3
0000            384   _P3_4           BIT 0xb4
0000            385   _P3_7           BIT 0xb7
0000            386   _CCF0           BIT 0xd8
0000            387   _CCF1           BIT 0xd9
0000            388   _CCF2           BIT 0xda
0000            389   _CCF3           BIT 0xdb
0000            390   _CCF4           BIT 0xdc
0000            391   _CCF5           BIT 0xdd
0000            392   _CR             BIT 0xde
0000            393   _CF             BIT 0xdf
0000            394   _PARITY         BIT 0xd0
0000            395   _F1             BIT 0xd1
0000            396   _OV             BIT 0xd2
0000            397   _RS0            BIT 0xd3
0000            398   _RS1            BIT 0xd4
0000            399   _F0             BIT 0xd5
0000            400   _AC             BIT 0xd6
0000            401   _CY             BIT 0xd7
0000            402   _RI             BIT 0x98
0000            403   _TI             BIT 0x99
0000            404   _RB8            BIT 0x9a
0000            405   _TB8            BIT 0x9b
0000            406   _REN            BIT 0x9c
0000            407   _CE             BIT 0x9d
0000            408   _SMODE          BIT 0x9e
0000            409   _RI1            BIT 0xc8
0000            410   _TI1            BIT 0xc9
0000            411   _RBX1           BIT 0xca
0000            412   _TBX1           BIT 0xcb
0000            413   _REN1           BIT 0xcc
0000            414   _PERR1          BIT 0xcd
0000            415   _OVR1           BIT 0xce
0000            416   _SI             BIT 0xc0
0000            417   _ACK            BIT 0xc1
0000            418   _ARBLOST        BIT 0xc2
0000            419   _ACKRQ          BIT 0xc3
0000            420   _STO            BIT 0xc4
0000            421   _STA            BIT 0xc5
0000            422   _TXMODE         BIT 0xc6
0000            423   _MASTER         BIT 0xc7
0000            424   _SPIEN          BIT 0xf8
0000            425   _TXNF           BIT 0xf9
0000            426   _NSSMD0         BIT 0xfa
0000            427   _NSSMD1         BIT 0xfb
0000            428   _RXOVRN         BIT 0xfc
0000            429   _MODF           BIT 0xfd
0000            430   _WCOL           BIT 0xfe
0000            431   _SPIF           BIT 0xff
0000            432   _IT0            BIT 0x88
0000            433   _IE0            BIT 0x89
0000            434   _IT1            BIT 0x8a
0000            435   _IE1            BIT 0x8b
0000            436   _TR0            BIT 0x8c
0000            437   _TF0            BIT 0x8d
0000            438   _TR1            BIT 0x8e
0000            439   _TF1            BIT 0x8f
0000            440   _T2XCLK0        BIT 0xc8
0000            441   _T2XCLK1        BIT 0xc9
0000            442   _TR2            BIT 0xca
0000            443   _T2SPLIT        BIT 0xcb
0000            444   _TF2CEN         BIT 0xcc
0000            445   _TF2LEN         BIT 0xcd
0000            446   _TF2L           BIT 0xce
0000            447   _TF2H           BIT 0xcf
0000            448   _T4XCLK0        BIT 0x98
0000            449   _T4XCLK1        BIT 0x99
0000            450   _TR4            BIT 0x9a
0000            451   _T4SPLIT        BIT 0x9b
0000            452   _TF4CEN         BIT 0x9c
0000            453   _TF4LEN         BIT 0x9d
0000            454   _TF4L           BIT 0x9e
0000            455   _TF4H           BIT 0x9f
0000            456   _T5XCLK0        BIT 0xc0
0000            457   _T5XCLK1        BIT 0xc1
0000            458   _TR5            BIT 0xc2
0000            459   _T5SPLIT        BIT 0xc3
0000            460   _TF5CEN         BIT 0xc4
0000            461   _TF5LEN         BIT 0xc5
0000            462   _TF5L           BIT 0xc6
0000            463   _TF5H           BIT 0xc7
0000            464   _RIE            BIT 0xd8
0000            465   _RXTO0          BIT 0xd9
0000            466   _RXTO1          BIT 0xda
0000            467   _RFRQ           BIT 0xdb
0000            468   _TIE            BIT 0xdc
0000            469   _TXHOLD         BIT 0xdd
0000            470   _TXNF1          BIT 0xde
0000            471   _TFRQ           BIT 0xdf
0000            472   ;--------------------------------------------------------
0000            473   ; overlayable register banks
0000            474   ;--------------------------------------------------------
0000            475            rbank0 segment data overlay
0000            476   ;--------------------------------------------------------
0000            477   ; internal ram data
0000            478   ;--------------------------------------------------------
0000            479            rseg R_DSEG
0000            480   ;--------------------------------------------------------
0000            481   ; overlayable items in internal ram 
0000            482   ;--------------------------------------------------------
0000            483            rseg    R_OSEG
0000            484            rseg    R_OSEG
0000            485   ;--------------------------------------------------------
0000            486   ; indirectly addressable internal ram data
0000            487   ;--------------------------------------------------------
0000            488            rseg R_ISEG
0000            489   ;--------------------------------------------------------
0000            490   ; absolute internal ram data
0000            491   ;--------------------------------------------------------
0000            492            DSEG
0000            493   ;--------------------------------------------------------
0000            494   ; bit data
0000            495   ;--------------------------------------------------------
0000            496            rseg R_BSEG
0000            497   ;--------------------------------------------------------
0000            498   ; paged external ram data
0000            499   ;--------------------------------------------------------
0000            500            rseg R_PSEG
0000            501   ;--------------------------------------------------------
0000            502   ; external ram data
0000            503   ;--------------------------------------------------------
0000            504            rseg R_XSEG
0000            505   ;--------------------------------------------------------
0000            506   ; absolute external ram data
0000            507   ;--------------------------------------------------------
0000            508            XSEG
0000            509   ;--------------------------------------------------------
0000            510   ; external initialized ram data
0000            511   ;--------------------------------------------------------
0000            512            rseg R_IXSEG
0000            513            rseg R_HOME
0000            514            rseg R_GSINIT
0000            515            rseg R_CSEG
0000            516   ;--------------------------------------------------------
0000            517   ; Reset entry point and interrupt vectors
0000            518   ;--------------------------------------------------------
0000            519            CSEG at 0x0000
0000 020000     520            ljmp    _crt0
0003            521   ;--------------------------------------------------------
0003            522   ; global & static initialisations
0003            523   ;--------------------------------------------------------
0000            524            rseg R_HOME
0000            525            rseg R_GSINIT
0000            526            rseg R_GSINIT
0000            527   ;--------------------------------------------------------
0000            528   ; data variables initialization
0000            529   ;--------------------------------------------------------
0000            530            rseg R_DINIT
0000            531            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            532   ;--------------------------------------------------------
0000            533   ; code
0000            534   ;--------------------------------------------------------
0000            535            rseg R_CSEG
0000            536   ;------------------------------------------------------------
0000            537   ;Allocation info for local variables in function '_c51_external_startup'
0000            538   ;------------------------------------------------------------
0000            539   ;------------------------------------------------------------
0000            540   ;        sensor_test.c:37: char _c51_external_startup (void)
0000            541   ;        -----------------------------------------
0000            542   ;         function _c51_external_startup
0000            543   ;        -----------------------------------------
0000            544   __c51_external_startup:
0000            545            using   0
0000            546   ;        sensor_test.c:40: SFRPAGE = 0x00;
0000 75A700     547            mov     _SFRPAGE,#0x00
0003            548   ;        sensor_test.c:41: WDTCN = 0xDE; //First key
0003 7597DE     549            mov     _WDTCN,#0xDE
0006            550   ;        sensor_test.c:42: WDTCN = 0xAD; //Second key
0006 7597AD     551            mov     _WDTCN,#0xAD
0009            552   ;        sensor_test.c:44: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     553            mov     _VDM0CN,#0x80
000C            554   ;        sensor_test.c:45: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     555            mov     _RSTSRC,#0x06
000F            556   ;        sensor_test.c:52: SFRPAGE = 0x10;
000F 75A710     557            mov     _SFRPAGE,#0x10
0012            558   ;        sensor_test.c:53: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     559            mov     _PFE0CN,#0x20
0015            560   ;        sensor_test.c:54: SFRPAGE = 0x00;
0015 75A700     561            mov     _SFRPAGE,#0x00
0018            562   ;        sensor_test.c:75: CLKSEL = 0x00;
0018 75A900     563            mov     _CLKSEL,#0x00
001B            564   ;        sensor_test.c:76: CLKSEL = 0x00;
001B 75A900     565            mov     _CLKSEL,#0x00
001E            566   ;        sensor_test.c:77: while ((CLKSEL & 0x80) == 0);
001E            567   L002001?:
001E E5A9       568            mov     a,_CLKSEL
0020 30E7D0     569            jnb     acc.7,L002001?
0023            570   ;        sensor_test.c:78: CLKSEL = 0x03;
0023 75A903     571            mov     _CLKSEL,#0x03
0026            572   ;        sensor_test.c:79: CLKSEL = 0x03;
0026 75A903     573            mov     _CLKSEL,#0x03
0029            574   ;        sensor_test.c:80: while ((CLKSEL & 0x80) == 0);
0029            575   L002004?:
0029 E5A9       576            mov     a,_CLKSEL
002B 30E750     577            jnb     acc.7,L002004?
002E            578   ;        sensor_test.c:85: P0MDOUT |= 0xE0;
002E 43A4E0     579            orl     _P0MDOUT,#0xE0
0031            580   ;        sensor_test.c:86: P1MDOUT |= 0x01; 
0031 43A501     581            orl     _P1MDOUT,#0x01
0034            582   ;        sensor_test.c:87: XBR0=0b_0000_0011; //SPI0E=1, URT0E=1
0034 75E103     583            mov     _XBR0,#0x03
0037            584   ;        sensor_test.c:88: XBR1=0b_0000_0000;
0037 75E200     585            mov     _XBR1,#0x00
003A            586   ;        sensor_test.c:89: XBR2=0b_0100_0000; // Enable crossbar and weak pull-ups
003A 75E340     587            mov     _XBR2,#0x40
003D            588   ;        sensor_test.c:95: SCON0 = 0x10;
003D 759810     589            mov     _SCON0,#0x10
0040            590   ;        sensor_test.c:96: TH1 = 0x100-((SYSCLK/BAUDRATE)/(12L*2L));
0040 758DE6     591            mov     _TH1,#0xE6
0043            592   ;        sensor_test.c:97: TL1 = TH1;      // Init Timer1
0043 858D8B     593            mov     _TL1,_TH1
0046            594   ;        sensor_test.c:98: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     595            anl     _TMOD,#0x0F
0049            596   ;        sensor_test.c:99: TMOD |=  0x20;                       
0049 438920     597            orl     _TMOD,#0x20
004C            598   ;        sensor_test.c:100: TR1 = 1; // START Timer1
004C D28E       599            setb    _TR1
004E            600   ;        sensor_test.c:101: TI = 1;  // Indicate TX0 ready
004E D299       601            setb    _TI
0050            602   ;        sensor_test.c:104: SPI0CKR = (SYSCLK/(2*F_SCK_MAX))-1;
0050 75A223     603            mov     _SPI0CKR,#0x23
0053            604   ;        sensor_test.c:105: SPI0CFG = 0b_0100_0000; //SPI in master mode
0053 75A140     605            mov     _SPI0CFG,#0x40
0056            606   ;        sensor_test.c:106: SPI0CN0 = 0b_0000_0001; //SPI enabled and in three wire mod
0056 75F801     607            mov     _SPI0CN0,#0x01
0059            608   ;        sensor_test.c:108: return 0;
0059 758200     609            mov     dpl,#0x00
005C 22         610            ret
005D            611   ;------------------------------------------------------------
005D            612   ;Allocation info for local variables in function 'Timer3us'
005D            613   ;------------------------------------------------------------
005D            614   ;us                        Allocated to registers r2 
005D            615   ;i                         Allocated to registers r3 
005D            616   ;------------------------------------------------------------
005D            617   ;        sensor_test.c:112: void Timer3us(unsigned char us)
005D            618   ;        -----------------------------------------
005D            619   ;         function Timer3us
005D            620   ;        -----------------------------------------
005D            621   _Timer3us:
005D AA82       622            mov     r2,dpl
005F            623   ;        sensor_test.c:117: CKCON0|=0b_0100_0000;
005F 438E40     624            orl     _CKCON0,#0x40
0062            625   ;        sensor_test.c:119: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0062 7592B8     626            mov     _TMR3RL,#0xB8
0065 7593FF     627            mov     (_TMR3RL >> 8),#0xFF
0068            628   ;        sensor_test.c:120: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0068 859294     629            mov     _TMR3,_TMR3RL
006B 859395     630            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
006E            631   ;        sensor_test.c:122: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
006E 759104     632            mov     _TMR3CN0,#0x04
0071            633   ;        sensor_test.c:123: for (i = 0; i < us; i++)       // Count <us> overflows
0071 7B00       634            mov     r3,#0x00
0073            635   L003004?:
0073 C3         636            clr     c
0074 EB         637            mov     a,r3
0075 9A         638            subb    a,r2
0076 5000       639            jnc     L003007?
0078            640   ;        sensor_test.c:125: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0078            641   L003001?:
0078 E591       642            mov     a,_TMR3CN0
007A 30E750     643            jnb     acc.7,L003001?
007D            644   ;        sensor_test.c:126: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
007D 53917F     645            anl     _TMR3CN0,#0x7F
0080            646   ;        sensor_test.c:123: for (i = 0; i < us; i++)       // Count <us> overflows
0080 0B         647            inc     r3
0081 8000       648            sjmp    L003004?
0083            649   L003007?:
0083            650   ;        sensor_test.c:128: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0083 759100     651            mov     _TMR3CN0,#0x00
0086 22         652            ret
0087            653   ;------------------------------------------------------------
0087            654   ;Allocation info for local variables in function 'waitms'
0087            655   ;------------------------------------------------------------
0087            656   ;ms                        Allocated to registers r2 r3 
0087            657   ;j                         Allocated to registers r4 r5 
0087            658   ;k                         Allocated to registers r6 
0087            659   ;------------------------------------------------------------
0087            660   ;        sensor_test.c:131: void waitms (unsigned int ms)
0087            661   ;        -----------------------------------------
0087            662   ;         function waitms
0087            663   ;        -----------------------------------------
0087            664   _waitms:
0087 AA82       665            mov     r2,dpl
0089 AB83       666            mov     r3,dph
008B            667   ;        sensor_test.c:135: for(j=0; j<ms; j++)
008B 7C00       668            mov     r4,#0x00
008D 7D00       669            mov     r5,#0x00
008F            670   L004005?:
008F C3         671            clr     c
0090 EC         672            mov     a,r4
0091 9A         673            subb    a,r2
0092 ED         674            mov     a,r5
0093 9B         675            subb    a,r3
0094 5000       676            jnc     L004009?
0096            677   ;        sensor_test.c:136: for (k=0; k<4; k++) Timer3us(250);
0096 7E00       678            mov     r6,#0x00
0098            679   L004001?:
0098 BE0490     680            cjne    r6,#0x04,L004018?
009B            681   L004018?:
009B 5000       682            jnc     L004007?
009D 7582FA     683            mov     dpl,#0xFA
00A0 C002       684            push    ar2
00A2 C003       685            push    ar3
00A4 C004       686            push    ar4
00A6 C005       687            push    ar5
00A8 C006       688            push    ar6
00AA 120000     689            lcall   _Timer3us
00AD D006       690            pop     ar6
00AF D005       691            pop     ar5
00B1 D004       692            pop     ar4
00B3 D003       693            pop     ar3
00B5 D002       694            pop     ar2
00B7 0E         695            inc     r6
00B8 8000       696            sjmp    L004001?
00BA            697   L004007?:
00BA            698   ;        sensor_test.c:135: for(j=0; j<ms; j++)
00BA 0C         699            inc     r4
00BB BC00D0     700            cjne    r4,#0x00,L004005?
00BE 0D         701            inc     r5
00BF 8000       702            sjmp    L004005?
00C1            703   L004009?:
00C1 22         704            ret
00C2            705   ;------------------------------------------------------------
00C2            706   ;Allocation info for local variables in function 'SPIWrite'
00C2            707   ;------------------------------------------------------------
00C2            708   ;x                         Allocated to registers 
00C2            709   ;------------------------------------------------------------
00C2            710   ;        sensor_test.c:173: void SPIWrite (unsigned char x)
00C2            711   ;        -----------------------------------------
00C2            712   ;         function SPIWrite
00C2            713   ;        -----------------------------------------
00C2            714   _SPIWrite:
00C2 8582A3     715            mov     _SPI0DAT,dpl
00C5            716   ;        sensor_test.c:176: while(!SPIF);
00C5            717   L005001?:
00C5            718   ;        sensor_test.c:177: SPIF=0;
00C5 10FF50     719            jbc     _SPIF,L005008?
00C8 8000       720            sjmp    L005001?
00CA            721   L005008?:
00CA 22         722            ret
00CB            723   ;------------------------------------------------------------
00CB            724   ;Allocation info for local variables in function 'GetADC'
00CB            725   ;------------------------------------------------------------
00CB            726   ;channel                   Allocated to registers r2 
00CB            727   ;adc                       Allocated to registers r2 r3 
00CB            728   ;------------------------------------------------------------
00CB            729   ;        sensor_test.c:182: unsigned int volatile GetADC(char channel)
00CB            730   ;        -----------------------------------------
00CB            731   ;         function GetADC
00CB            732   ;        -----------------------------------------
00CB            733   _GetADC:
00CB AA82       734            mov     r2,dpl
00CD            735   ;        sensor_test.c:188: SPIWrite(0x01);//Send the start bit.
00CD 758201     736            mov     dpl,#0x01
00D0 C002       737            push    ar2
00D2 120000     738            lcall   _SPIWrite
00D5 D002       739            pop     ar2
00D7            740   ;        sensor_test.c:189: adc=SPI0DAT; // Unlike SPI in the C8051F38C we need to empty the receive buffer.
00D7 E5A3       741            mov     a,_SPI0DAT
00D9            742   ;        sensor_test.c:190: SPIWrite((channel*0x10)|0x80);       //Send single/diff* bit,  D2, D1, and D0 bits.
00D9 EA         743            mov     a,r2
00DA C4         744            swap    a
00DB 54F0       745            anl     a,#0xf0
00DD FA         746            mov     r2,a
00DE 7480       747            mov     a,#0x80
00E0 4A         748            orl     a,r2
00E1 F582       749            mov     dpl,a
00E3 120000     750            lcall   _SPIWrite
00E6            751   ;        sensor_test.c:191: adc=((SPI0DAT & 0x03)*0x100);//SPI0DAT contains now the high part of the result.
00E6 7403       752            mov     a,#0x03
00E8 55A3       753            anl     a,_SPI0DAT
00EA FB         754            mov     r3,a
00EB 7A00       755            mov     r2,#0x00
00ED            756   ;        sensor_test.c:192: SPIWrite(0x55);//Dont' care what you send now.  0x55 looks good on the oscilloscope though!
00ED 758255     757            mov     dpl,#0x55
00F0 C002       758            push    ar2
00F2 C003       759            push    ar3
00F4 120000     760            lcall   _SPIWrite
00F7 D003       761            pop     ar3
00F9 D002       762            pop     ar2
00FB            763   ;        sensor_test.c:193: adc+=SPI0DAT;//SPI0DAT contains now the low part of the result. 
00FB ACA3       764            mov     r4,_SPI0DAT
00FD 7D00       765            mov     r5,#0x00
00FF EC         766            mov     a,r4
0100 2A         767            add     a,r2
0101 FA         768            mov     r2,a
0102 ED         769            mov     a,r5
0103 3B         770            addc    a,r3
0104            771   ;        sensor_test.c:197: return adc;
0104 8A82       772            mov     dpl,r2
0106 F583       773            mov     dph,a
0108 22         774            ret
0109            775   ;------------------------------------------------------------
0109            776   ;Allocation info for local variables in function 'main'
0109            777   ;------------------------------------------------------------
0109            778   ;------------------------------------------------------------
0109            779   ;        sensor_test.c:204: void main (void)
0109            780   ;        -----------------------------------------
0109            781   ;         function main
0109            782   ;        -----------------------------------------
0109            783   _main:
0109            784   ;        sensor_test.c:206: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0109 7490       785            mov     a,#__str_0
010B C0E0       786            push    acc
010D 74B5       787            mov     a,#(__str_0 >> 8)
010F C0E0       788            push    acc
0111 7480       789            mov     a,#0x80
0113 C0E0       790            push    acc
0115 120000     791            lcall   _printf
0118 1581       792            dec     sp
011A 1581       793            dec     sp
011C 1581       794            dec     sp
011E            795   ;        sensor_test.c:211: __FILE__, __DATE__, __TIME__);
011E            796   ;        sensor_test.c:210: "Compiled: %s, %s\n\n",
011E 7450       797            mov     a,#__str_4
0120 C0E0       798            push    acc
0122 74B6       799            mov     a,#(__str_4 >> 8)
0124 C0E0       800            push    acc
0126 7480       801            mov     a,#0x80
0128 C0E0       802            push    acc
012A 7490       803            mov     a,#__str_3
012C C0E0       804            push    acc
012E 74B6       805            mov     a,#(__str_3 >> 8)
0130 C0E0       806            push    acc
0132 7480       807            mov     a,#0x80
0134 C0E0       808            push    acc
0136 74D0       809            mov     a,#__str_2
0138 C0E0       810            push    acc
013A 74B6       811            mov     a,#(__str_2 >> 8)
013C C0E0       812            push    acc
013E 7480       813            mov     a,#0x80
0140 C0E0       814            push    acc
0142 7410       815            mov     a,#__str_1
0144 C0E0       816            push    acc
0146 74B7       817            mov     a,#(__str_1 >> 8)
0148 C0E0       818            push    acc
014A 7480       819            mov     a,#0x80
014C C0E0       820            push    acc
014E 120000     821            lcall   _printf
0151 E581       822            mov     a,sp
0153 24F4       823            add     a,#0xf4
0155 F581       824            mov     sp,a
0157            825   ;        sensor_test.c:213: while(1)
0157            826   L007002?:
0157 8000       827            sjmp    L007002?
0159            828            rseg R_CSEG
0159            829   
0000            830            rseg R_XINIT
0000            831   
0000            832            rseg R_CONST
0000            833   __str_0:
0000 1B         834            db 0x1B
0001 5B324A     835            db '[2J'
0004 00         836            db 0x00
0005            837   __str_1:
0005 45464D38   838            db 'EFM8LB1 SPI/BMM150 test program'
     4C423120
     5350492F
     424D4D31
     35302074
     65737420
     70726F67
     72616D
0024 0A         839            db 0x0A
0025 46696C65   840            db 'File: %s'
     3A202573
002D 0A         841            db 0x0A
002E 436F6D70   842            db 'Compiled: %s, %s'
     696C6564
     3A202573
     2C202573
003E 0A         843            db 0x0A
003F 0A         844            db 0x0A
0040 00         845            db 0x00
0041            846   __str_2:
0041 73656E73   847            db 'sensor_test.c'
     6F725F74
     6573742E
     63
004E 00         848            db 0x00
004F            849   __str_3:
004F 4D617220   850            db 'Mar 21 2025'
     32312032
     303235
005A 00         851            db 0x00
005B            852   __str_4:
005B 31373A32   853            db '17:26:35'
     363A3335
0063 00         854            db 0x00
0064            855   
0003            856            CSEG
0003            857   
0003            858   end
